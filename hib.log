[DEBUG] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Cache71] -> [org.hibernate.dialect.Cache71Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [CUBRID] -> [org.hibernate.dialect.CUBRIDDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2] -> [org.hibernate.dialect.DB2Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2390] -> [org.hibernate.dialect.DB2390Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2400] -> [org.hibernate.dialect.DB2400Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenFive] -> [org.hibernate.dialect.DerbyTenFiveDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenSix] -> [org.hibernate.dialect.DerbyTenSixDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenSeven] -> [org.hibernate.dialect.DerbyTenSevenDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Firebird] -> [org.hibernate.dialect.FirebirdDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [FrontBase] -> [org.hibernate.dialect.FrontBaseDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [H2] -> [org.hibernate.dialect.H2Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [HSQL] -> [org.hibernate.dialect.HSQLDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Informix] -> [org.hibernate.dialect.InformixDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres] -> [org.hibernate.dialect.IngresDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres9] -> [org.hibernate.dialect.Ingres9Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres10] -> [org.hibernate.dialect.Ingres10Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Interbase] -> [org.hibernate.dialect.InterbaseDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [JDataStore] -> [org.hibernate.dialect.JDataStoreDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Mckoi] -> [org.hibernate.dialect.MckoiDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [MimerSQL] -> [org.hibernate.dialect.MimerSQLDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL57InnoDB] -> [org.hibernate.dialect.MySQL57InnoDBDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle8i] -> [org.hibernate.dialect.Oracle8iDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle9i] -> [org.hibernate.dialect.Oracle9iDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle10g] -> [org.hibernate.dialect.Oracle10gDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Pointbase] -> [org.hibernate.dialect.PointbaseDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgresPlus] -> [org.hibernate.dialect.PostgresPlusDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL81] -> [org.hibernate.dialect.PostgreSQL81Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL82] -> [org.hibernate.dialect.PostgreSQL82Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL9] -> [org.hibernate.dialect.PostgreSQL9Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Progress] -> [org.hibernate.dialect.ProgressDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [SAPDB] -> [org.hibernate.dialect.SAPDBDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer] -> [org.hibernate.dialect.SQLServerDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer2005] -> [org.hibernate.dialect.SQLServer2005Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer2008] -> [org.hibernate.dialect.SQLServer2008Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Sybase11] -> [org.hibernate.dialect.Sybase11Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseAnywhere] -> [org.hibernate.dialect.SybaseAnywhereDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseASE15] -> [org.hibernate.dialect.SybaseASE15Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseASE157] -> [org.hibernate.dialect.SybaseASE157Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Teradata] -> [org.hibernate.dialect.TeradataDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [TimesTen] -> [org.hibernate.dialect.TimesTenDialect]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Borland] -> [org.hibernate.engine.transaction.jta.platform.internal.BorlandEnterpriseServerJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.BorlandEnterpriseServerJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.BorlandEnterpriseServerJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Bitronix] -> [org.hibernate.engine.transaction.jta.platform.internal.BitronixJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.BitronixJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.BitronixJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JBossAS] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JBossAppServerJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JBossTS] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JBossStandAloneJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JOnAS] -> [org.hibernate.engine.transaction.jta.platform.internal.JOnASJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JOnASJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JOnASJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JOTM] -> [org.hibernate.engine.transaction.jta.platform.internal.JOTMJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JOTMJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JOTMJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JRun4] -> [org.hibernate.engine.transaction.jta.platform.internal.JRun4JtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JRun4JtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JRun4JtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [OC4J] -> [org.hibernate.engine.transaction.jta.platform.internal.OC4JJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.OC4JJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.OC4JJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Orion] -> [org.hibernate.engine.transaction.jta.platform.internal.OrionJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.OrionJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.OrionJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Resin] -> [org.hibernate.engine.transaction.jta.platform.internal.ResinJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.ResinJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.ResinJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [SunOne] -> [org.hibernate.engine.transaction.jta.platform.internal.SunOneJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.SunOneJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.SunOneJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Weblogic] -> [org.hibernate.engine.transaction.jta.platform.internal.WeblogicJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WeblogicJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WeblogicJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [WebSphere] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WebSphereJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [WebSphereExtended] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WebSphereExtendedJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [persistent] -> [org.hibernate.hql.spi.id.persistent.PersistentTableBulkIdStrategy]
[TRACE] Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [global_temporary] -> [org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy]
[TRACE] Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [local_temporary] -> [org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy]
[TRACE] Registering named strategy selector [org.hibernate.event.spi.EntityCopyObserver] : [disallow] -> [org.hibernate.event.internal.EntityCopyNotAllowedObserver]
[TRACE] Registering named strategy selector [org.hibernate.event.spi.EntityCopyObserver] : [allow] -> [org.hibernate.event.internal.EntityCopyAllowedObserver]
[TRACE] Registering named strategy selector [org.hibernate.event.spi.EntityCopyObserver] : [log] -> [org.hibernate.event.internal.EntityCopyAllowedLoggedObserver]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [c3p0] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [org.hibernate.connection.C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[INFO ] HHH000412: Hibernate Core {5.2.3.Final}
[INFO ] HHH000206: hibernate.properties not found
[INFO ] HHH000021: Bytecode provider name : javassist
[TRACE] trying via [new URL("hibernate.cfg.xml")]
[TRACE] trying via [ClassLoader.getResourceAsStream("hibernate.cfg.xml")]
[TRACE] In resolveEntity(-//Hibernate/Hibernate Configuration DTD//EN, http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] Building session factory using internal StandardServiceRegistryBuilder
[DEBUG] Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[DEBUG] Building session factory using provided StandardServiceRegistry
[TRACE] Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
[TRACE] Initializing service [role=org.hibernate.cache.spi.RegionFactory]
[DEBUG] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[INFO ] HCANN000001: Hibernate Commons Annotations {5.0.1.Final}
[TRACE] Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
[INFO ] HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:6033/ior
[INFO ] HHH10001001: Connection properties: {user=root, password=****}
[INFO ] HHH10001003: Autocommit mode: false
[INFO ] HHH10001007: JDBC isolation level: <unknown>
[DEBUG] Database ->
       name : MySQL
    version : 5.1.34-community
      major : 5
      minor : 1
[DEBUG] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.23 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
[DEBUG] JDBC version : 4.0
[INFO ] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
[DEBUG] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[TRACE] Normalizing identifier quoting [ior]
[TRACE] Normalizing identifier quoting [null]
[INFO ] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
[TRACE] Initializing service [role=org.hibernate.id.factory.spi.MutableIdentifierGeneratorFactory]
[DEBUG] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[DEBUG] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[DEBUG] Binding entity from annotated class: model.Person
[DEBUG] Import with entity name Person
[TRACE] Import: Person -> model.Person
[TRACE] Import: model.Person -> model.Person
[TRACE] Normalizing identifier quoting [persons]
[TRACE] Normalizing identifier quoting [persons]
[DEBUG] Bind entity model.Person on table persons
[TRACE] Processing annotations of model.Person.id
[TRACE] Normalizing identifier quoting [person_id]
[TRACE] Normalizing identifier quoting [person_id]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(persons), mappingColumn=person_id, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property id with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Person:id]
[DEBUG] building SimpleValue for id
[TRACE] Normalizing identifier quoting [person_id]
[DEBUG] Building property id
[TRACE] Cascading id with null
[TRACE] Bind @Id on id
[TRACE] Processing annotations of model.Person.lastname
[TRACE] Normalizing identifier quoting [lastname]
[TRACE] Normalizing identifier quoting [lastname]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(persons), mappingColumn=lastname, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property lastname with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Person:lastname]
[DEBUG] building SimpleValue for lastname
[TRACE] Normalizing identifier quoting [lastname]
[TRACE] Normalizing identifier quoting [lastname]
[TRACE] Normalizing identifier quoting [lastname]
[DEBUG] Building property lastname
[TRACE] Cascading lastname with null
[TRACE] Processing annotations of model.Person.name
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(persons), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property name with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Person:name]
[DEBUG] building SimpleValue for name
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Building property name
[TRACE] Cascading name with null
[DEBUG] Binding entity from annotated class: model.Coach
[DEBUG] Import with entity name Coach
[TRACE] Import: Coach -> model.Coach
[TRACE] Import: model.Coach -> model.Coach
[TRACE] Normalizing identifier quoting [coaches]
[TRACE] Normalizing identifier quoting [coaches]
[DEBUG] Bind entity model.Coach on table coaches
[TRACE] Processing annotations of model.Coach.team
[TRACE] Normalizing identifier quoting [team_id]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='team_id', referencedColumn='', mappedBy=''}
[TRACE] Normalizing identifier quoting [team]
[TRACE] Normalizing identifier quoting [team]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.DenormalizedTable(coaches), mappingColumn=team, insertable=true, updatable=true, unique=false}
[TRACE] Fetching team with SELECT
[DEBUG] Building property team
[TRACE] Cascading team with save-update
[DEBUG] Binding entity from annotated class: model.Player
[DEBUG] Import with entity name Player
[TRACE] Import: Player -> model.Player
[TRACE] Import: model.Player -> model.Player
[TRACE] Normalizing identifier quoting [players]
[TRACE] Normalizing identifier quoting [players]
[DEBUG] Bind entity model.Player on table players
[TRACE] Processing annotations of model.Player.position
[TRACE] Normalizing identifier quoting [position_id]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='position_id', referencedColumn='', mappedBy=''}
[TRACE] Normalizing identifier quoting [position]
[TRACE] Normalizing identifier quoting [position]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.DenormalizedTable(players), mappingColumn=position, insertable=true, updatable=true, unique=false}
[TRACE] Fetching position with SELECT
[DEBUG] Building property position
[TRACE] Cascading position with none
[TRACE] Processing annotations of model.Player.team
[TRACE] Normalizing identifier quoting [team_id]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='team_id', referencedColumn='', mappedBy=''}
[TRACE] Normalizing identifier quoting [team]
[TRACE] Normalizing identifier quoting [team]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.DenormalizedTable(players), mappingColumn=team, insertable=true, updatable=true, unique=false}
[DEBUG] Building property team
[TRACE] Cascading team with none
[DEBUG] Binding entity from annotated class: model.Match
[TRACE] Normalizing identifier quoting [DTYPE]
[DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] Import with entity name Match
[TRACE] Import: Match -> model.Match
[TRACE] Import: model.Match -> model.Match
[TRACE] Normalizing identifier quoting [matches]
[TRACE] Normalizing identifier quoting [matches]
[DEBUG] Bind entity model.Match on table matches
[TRACE] Processing annotations of model.Match.id
[TRACE] Normalizing identifier quoting [id]
[TRACE] Normalizing identifier quoting [id]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(matches), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property id with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Match:id]
[DEBUG] building SimpleValue for id
[TRACE] Normalizing identifier quoting [id]
[DEBUG] Building property id
[TRACE] Cascading id with null
[TRACE] Bind @Id on id
[TRACE] Processing annotations of model.Match.date
[TRACE] Normalizing identifier quoting [date]
[TRACE] Normalizing identifier quoting [date]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(matches), mappingColumn=date, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property date with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Match:date]
[DEBUG] building SimpleValue for date
[TRACE] Normalizing identifier quoting [date]
[TRACE] Normalizing identifier quoting [date]
[TRACE] Normalizing identifier quoting [date]
[DEBUG] Building property date
[TRACE] Cascading date with null
[TRACE] Processing annotations of model.Match.guests
[TRACE] Normalizing identifier quoting [match_id]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='match_id', referencedColumn='', mappedBy=''}
[TRACE] Normalizing identifier quoting [guests]
[TRACE] Normalizing identifier quoting [guests]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(matches), mappingColumn=guests, insertable=true, updatable=true, unique=false}
[TRACE] Fetching guests with JOIN
[DEBUG] Building property guests
[TRACE] Cascading guests with none
[TRACE] Processing annotations of model.Match.host
[TRACE] Normalizing identifier quoting [id]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='id', referencedColumn='', mappedBy=''}
[TRACE] Normalizing identifier quoting [host]
[TRACE] Normalizing identifier quoting [host]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(matches), mappingColumn=host, insertable=true, updatable=true, unique=false}
[TRACE] Fetching host with JOIN
[TRACE] Processing annotations of model.Match.statistics
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='match'}
[TRACE] Normalizing identifier quoting [statistics]
[TRACE] Normalizing identifier quoting [statistics]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(matches), mappingColumn=statistics, insertable=true, updatable=true, unique=false}
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(matches), mappingColumn=null, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [element]
[TRACE] Normalizing identifier quoting [element]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(matches), mappingColumn=element, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [statistics_KEY]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(matches), mappingColumn=statistics_KEY, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [statistics_KEY]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='statistics_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='match'}
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='match'}
[DEBUG] Collection role: model.Match.statistics
[DEBUG] Building property statistics
[TRACE] Cascading statistics with none
[DEBUG] Binding entity from annotated class: model.Position
[TRACE] Normalizing identifier quoting [DTYPE]
[DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] Import with entity name Position
[TRACE] Import: Position -> model.Position
[TRACE] Import: model.Position -> model.Position
[TRACE] Normalizing identifier quoting [positions]
[TRACE] Normalizing identifier quoting [positions]
[DEBUG] Bind entity model.Position on table positions
[TRACE] Processing annotations of model.Position.id
[TRACE] Normalizing identifier quoting [position_id]
[TRACE] Normalizing identifier quoting [position_id]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(positions), mappingColumn=position_id, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property id with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Position:id]
[DEBUG] building SimpleValue for id
[TRACE] Normalizing identifier quoting [position_id]
[DEBUG] Building property id
[TRACE] Cascading id with null
[TRACE] Bind @Id on id
[TRACE] Processing annotations of model.Position.name
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(positions), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property name with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Position:name]
[DEBUG] building SimpleValue for name
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Building property name
[TRACE] Cascading name with null
[DEBUG] Binding entity from annotated class: model.Arena
[TRACE] Normalizing identifier quoting [DTYPE]
[DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] Import with entity name Arena
[TRACE] Import: Arena -> model.Arena
[TRACE] Import: model.Arena -> model.Arena
[TRACE] Normalizing identifier quoting [arenas]
[TRACE] Normalizing identifier quoting [arenas]
[DEBUG] Bind entity model.Arena on table arenas
[TRACE] Processing annotations of model.Arena.id
[TRACE] Normalizing identifier quoting [id]
[TRACE] Normalizing identifier quoting [id]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(arenas), mappingColumn=id, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property id with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Arena:id]
[DEBUG] building SimpleValue for id
[TRACE] Normalizing identifier quoting [id]
[DEBUG] Building property id
[TRACE] Cascading id with null
[TRACE] Bind @Id on id
[TRACE] Processing annotations of model.Arena.address
[TRACE] Normalizing identifier quoting [address]
[TRACE] Normalizing identifier quoting [address]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(arenas), mappingColumn=address, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property address with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Arena:address]
[DEBUG] building SimpleValue for address
[TRACE] Normalizing identifier quoting [address]
[TRACE] Normalizing identifier quoting [address]
[TRACE] Normalizing identifier quoting [address]
[DEBUG] Building property address
[TRACE] Cascading address with null
[TRACE] Processing annotations of model.Arena.name
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(arenas), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property name with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Arena:name]
[DEBUG] building SimpleValue for name
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Building property name
[TRACE] Cascading name with null
[DEBUG] Binding entity from annotated class: model.Team
[TRACE] Normalizing identifier quoting [DTYPE]
[DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] Import with entity name Team
[TRACE] Import: Team -> model.Team
[TRACE] Import: model.Team -> model.Team
[TRACE] Normalizing identifier quoting [teams]
[TRACE] Normalizing identifier quoting [teams]
[DEBUG] Bind entity model.Team on table teams
[TRACE] Processing annotations of model.Team.id
[TRACE] Normalizing identifier quoting [team_id]
[TRACE] Normalizing identifier quoting [team_id]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=team_id, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property id with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Team:id]
[DEBUG] building SimpleValue for id
[TRACE] Normalizing identifier quoting [team_id]
[DEBUG] Building property id
[TRACE] Cascading id with null
[TRACE] Bind @Id on id
[TRACE] Processing annotations of model.Team.coach
[TRACE] Normalizing identifier quoting [person_id]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='person_id', referencedColumn='', mappedBy=''}
[TRACE] Normalizing identifier quoting [coach]
[TRACE] Normalizing identifier quoting [coach]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=coach, insertable=true, updatable=true, unique=false}
[TRACE] Fetching coach with JOIN
[DEBUG] Building property coach
[TRACE] Cascading coach with none
[TRACE] Processing annotations of model.Team.name
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=name, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property name with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Team:name]
[DEBUG] building SimpleValue for name
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Building property name
[TRACE] Cascading name with null
[TRACE] Processing annotations of model.Team.players
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[TRACE] Normalizing identifier quoting [players]
[TRACE] Normalizing identifier quoting [players]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=players, insertable=true, updatable=true, unique=false}
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=null, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [element]
[TRACE] Normalizing identifier quoting [element]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=element, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [players_KEY]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(teams), mappingColumn=players_KEY, insertable=true, updatable=true, unique=false}
[TRACE] Normalizing identifier quoting [players_KEY]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='players_KEY', referencedColumn='null', mappedBy='null'}
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='null', referencedColumn='null', mappedBy='team'}
[DEBUG] Collection role: model.Team.players
[DEBUG] Building property players
[TRACE] Cascading players with none
[DEBUG] Binding entity from annotated class: model.Statistic
[TRACE] Normalizing identifier quoting [DTYPE]
[DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] Import with entity name Statistic
[TRACE] Import: Statistic -> model.Statistic
[TRACE] Import: model.Statistic -> model.Statistic
[TRACE] Normalizing identifier quoting [statistics]
[TRACE] Normalizing identifier quoting [statistics]
[DEBUG] Bind entity model.Statistic on table statistics
[TRACE] Processing annotations of model.Statistic.id
[TRACE] Normalizing identifier quoting [statistic_id]
[TRACE] Normalizing identifier quoting [statistic_id]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statistics), mappingColumn=statistic_id, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property id with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Statistic:id]
[DEBUG] building SimpleValue for id
[TRACE] Normalizing identifier quoting [statistic_id]
[DEBUG] Building property id
[TRACE] Cascading id with null
[TRACE] Bind @Id on id
[TRACE] Processing annotations of model.Statistic.match
[TRACE] Normalizing identifier quoting [match_id]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='match_id', referencedColumn='', mappedBy=''}
[TRACE] Normalizing identifier quoting [match]
[TRACE] Normalizing identifier quoting [match]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statistics), mappingColumn=match, insertable=true, updatable=true, unique=false}
[DEBUG] Building property match
[TRACE] Cascading match with save-update
[TRACE] Processing annotations of model.Statistic.type
[TRACE] Normalizing identifier quoting [statisticType_id]
[DEBUG] Binding column: Ejb3JoinColumn{logicalColumnName='statisticType_id', referencedColumn='', mappedBy=''}
[TRACE] Normalizing identifier quoting [type]
[TRACE] Normalizing identifier quoting [type]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statistics), mappingColumn=type, insertable=true, updatable=true, unique=false}
[TRACE] Fetching type with JOIN
[DEBUG] Building property type
[TRACE] Cascading type with none
[TRACE] Processing annotations of model.Statistic.value
[TRACE] Normalizing identifier quoting [value]
[TRACE] Normalizing identifier quoting [value]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statistics), mappingColumn=value, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property value with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.Statistic:value]
[DEBUG] building SimpleValue for value
[TRACE] Normalizing identifier quoting [value]
[TRACE] Normalizing identifier quoting [value]
[TRACE] Normalizing identifier quoting [value]
[DEBUG] Building property value
[TRACE] Cascading value with null
[DEBUG] Binding entity from annotated class: model.StatisticType
[TRACE] Normalizing identifier quoting [DTYPE]
[DEBUG] Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[DEBUG] Import with entity name StatisticType
[TRACE] Import: StatisticType -> model.StatisticType
[TRACE] Import: model.StatisticType -> model.StatisticType
[TRACE] Normalizing identifier quoting [statisticsType]
[TRACE] Normalizing identifier quoting [statisticsType]
[DEBUG] Bind entity model.StatisticType on table statisticsType
[TRACE] Processing annotations of model.StatisticType.id
[TRACE] Normalizing identifier quoting [ststisticType_id]
[TRACE] Normalizing identifier quoting [ststisticType_id]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statisticsType), mappingColumn=ststisticType_id, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property id with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.StatisticType:id]
[DEBUG] building SimpleValue for id
[TRACE] Normalizing identifier quoting [ststisticType_id]
[DEBUG] Building property id
[TRACE] Cascading id with null
[TRACE] Bind @Id on id
[TRACE] Processing annotations of model.StatisticType.description
[TRACE] Normalizing identifier quoting [description]
[TRACE] Normalizing identifier quoting [description]
[DEBUG] Binding column: Ejb3Column{table=org.hibernate.mapping.Table(statisticsType), mappingColumn=description, insertable=true, updatable=true, unique=false}
[DEBUG] MetadataSourceProcessor property description with lazy=false
[DEBUG] Attempting to locate auto-apply AttributeConverter for property [model.StatisticType:description]
[DEBUG] building SimpleValue for description
[TRACE] Normalizing identifier quoting [description]
[TRACE] Normalizing identifier quoting [description]
[TRACE] Normalizing identifier quoting [description]
[DEBUG] Building property description
[TRACE] Cascading description with null
[DEBUG] Starting fillSimpleValue for id
[DEBUG] Starting fillSimpleValue for lastname
[DEBUG] Starting fillSimpleValue for name
[DEBUG] Starting fillSimpleValue for id
[DEBUG] Starting fillSimpleValue for date
[DEBUG] Starting fillSimpleValue for id
[DEBUG] Starting fillSimpleValue for name
[DEBUG] Starting fillSimpleValue for id
[DEBUG] Starting fillSimpleValue for address
[DEBUG] Starting fillSimpleValue for name
[DEBUG] Starting fillSimpleValue for id
[DEBUG] Starting fillSimpleValue for name
[DEBUG] Starting fillSimpleValue for id
[DEBUG] Starting fillSimpleValue for value
[DEBUG] Starting fillSimpleValue for id
[DEBUG] Starting fillSimpleValue for description
[TRACE] Normalizing identifier quoting [team_id]
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [team_id]
[TRACE] Normalizing identifier quoting [team_id]
[TRACE] Normalizing identifier quoting [position_id]
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [position_id]
[TRACE] Normalizing identifier quoting [position_id]
[TRACE] Normalizing identifier quoting [team_id]
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [team_id]
[TRACE] Normalizing identifier quoting [team_id]
[TRACE] Normalizing identifier quoting [match_id]
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [match_id]
[TRACE] Normalizing identifier quoting [match_id]
[TRACE] Normalizing identifier quoting [person_id]
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [person_id]
[TRACE] Normalizing identifier quoting [person_id]
[TRACE] Normalizing identifier quoting [match_id]
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [match_id]
[TRACE] Normalizing identifier quoting [match_id]
[TRACE] Normalizing identifier quoting [statisticType_id]
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [statisticType_id]
[TRACE] Normalizing identifier quoting [statisticType_id]
[DEBUG] Forcing column [person_id] to be non-null as it is part of the primary key for table [persons]
[DEBUG] Forcing column [id] to be non-null as it is part of the primary key for table [matches]
[DEBUG] Forcing column [position_id] to be non-null as it is part of the primary key for table [positions]
[DEBUG] Forcing column [id] to be non-null as it is part of the primary key for table [arenas]
[DEBUG] Forcing column [team_id] to be non-null as it is part of the primary key for table [teams]
[DEBUG] Forcing column [statistic_id] to be non-null as it is part of the primary key for table [statistics]
[DEBUG] Forcing column [ststistictype_id] to be non-null as it is part of the primary key for table [statisticstype]
[DEBUG] Building property host
[TRACE] Cascading host with none
[DEBUG] Second pass for collection: model.Match.statistics
[DEBUG] Binding a OneToMany: model.Match.statistics through a foreign key
[DEBUG] Mapping collection: model.Match.statistics -> statistics
[DEBUG] Retrieving property model.Statistic.match
[DEBUG] Mapped collection key: match_id, one-to-many: model.Statistic
[DEBUG] Second pass for collection: model.Team.players
[DEBUG] Binding a OneToMany: model.Team.players through a foreign key
[DEBUG] Mapping collection: model.Team.players -> players
[DEBUG] Retrieving property model.Player.team
[DEBUG] Mapped collection key: team_id, one-to-many: model.Player
[DEBUG] Resolving reference to class: model.Team
[DEBUG] Resolving reference to class: model.Team
[DEBUG] Resolving reference to class: model.Position
[DEBUG] Resolving reference to class: model.Team
[DEBUG] Resolving reference to class: model.Match
[DEBUG] Resolving reference to class: model.StatisticType
[DEBUG] Resolving reference to class: model.Coach
[DEBUG] Resolving reference to class: model.Team
[DEBUG] Resolving reference to class: model.Team
[DEBUG] Resolving reference to class: model.Position
[DEBUG] Resolving reference to class: model.Team
[DEBUG] Resolving reference to class: model.Match
[DEBUG] Resolving reference to class: model.StatisticType
[DEBUG] Resolving reference to class: model.Coach
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [null]
[TRACE] Normalizing identifier quoting [hibernate_sequences]
[TRACE] Normalizing identifier quoting [sequence_name]
[TRACE] Normalizing identifier quoting [next_val]
[INFO ] HHH000398: Explicit segment value for id generator [hibernate_sequences.sequence_name] suggested; using default [default]
[DEBUG] Forcing column [sequence_name] to be non-null as it is part of the primary key for table [hibernate_sequences]
[TRACE] Interpreting BatchFetchStyle from setting : null
[TRACE] Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
[DEBUG] Building session factory
[DEBUG] SessionFactory name : null
[DEBUG] Automatic flush during beforeCompletion(): enabled
[DEBUG] Automatic session close at end of transaction: disabled
[DEBUG] Statistics: disabled
[DEBUG] Deleted entity synthetic identifier rollback: disabled
[DEBUG] Default entity-mode: pojo
[DEBUG] Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] Allow initialization of lazy state outside session : disabled
[DEBUG] Using BatchFetchStyle : LEGACY
[DEBUG] Default batch fetch size: -1
[DEBUG] Maximum outer join fetch depth: 2
[DEBUG] Default null ordering: NONE
[DEBUG] Order SQL updates by primary key: disabled
[DEBUG] Order SQL inserts for batching: disabled
[DEBUG] multi-tenancy strategy : NONE
[DEBUG] JTA Track by Thread: enabled
[DEBUG] Query language substitutions: {}
[DEBUG] JPA query language strict compliance: disabled
[DEBUG] Named query checking : enabled
[DEBUG] Second-level cache: enabled
[DEBUG] Second-level query cache: disabled
[DEBUG] Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@bb9e6dc
[DEBUG] Second-level cache region prefix: null
[DEBUG] Optimize second-level cache for minimal puts: disabled
[DEBUG] Structured second-level cache entries: disabled
[DEBUG] Second-level cache direct-reference entries: disabled
[DEBUG] Automatic eviction of collection cache: disabled
[DEBUG] JDBC batch size: 15
[DEBUG] JDBC batch updates for versioned data: enabled
[DEBUG] Scrollable result sets: enabled
[DEBUG] Wrap result sets: disabled
[DEBUG] JDBC3 getGeneratedKeys(): enabled
[DEBUG] JDBC result set fetch size: null
[DEBUG] Connection release mode: AFTER_TRANSACTION
[DEBUG] Generate SQL with comments: disabled
[TRACE] Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
[TRACE] Initializing service [role=org.hibernate.event.service.spi.EventListenerRegistry]
[TRACE] Initializing service [role=org.hibernate.engine.spi.CacheImplementor]
[DEBUG] Session factory constructed with filter configurations : {}
[DEBUG] Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.MySQL5InnoDBDialect, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=30, sun.jnu.encoding=Cp1250, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, hibernate.c3p0.min_size=5, java.class.path=D:\Code\Szkola\HiberLabJPA2017\Hiber\antlr-2.7.7.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\c3p0-0.9.2.1.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\cdi-api-1.1.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\classmate-1.3.0.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\dom4j-1.6.1.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\el-api-2.2.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\geronimo-jta_1.1_spec-1.1.1.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\hibernate-c3p0-5.2.3.Final.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\hibernate-commons-annotations-5.0.1.Final.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\hibernate-core-5.2.3.Final.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\jandex-2.0.0.Final.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\javassist-3.20.0-GA.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\javax.inject-1.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\jboss-logging-3.3.0.Final.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\jsr250-api-1.0.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\log4j-1.2.16.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\mchange-commons-java-0.2.3.4.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\mysql-connector-java-5.1.23-bin.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\slf4j-api-1.7.7.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\slf4j-log4j12-1.7.7.jar;D:\Code\Szkola\HiberLabJPA2017\build\classes, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Belgrade, os.name=Windows 10, java.vm.specification.version=1.8, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=PL, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_161\jre\bin, sun.java.command=hiberApp.MainApp, sun.cpu.endian=little, user.home=C:\Users\Skrobson, hibernate.c3p0.max_statements=10, user.language=pl, java.specification.vendor=Oracle Corporation, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCachingRegionFactory, java.home=C:\Program Files\Java\jdk1.8.0_161\jre, file.separator=\, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, cache.provider_class=org.hibernate.cache.internal.NoCachingRegionFactory, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_161\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_161\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, connection.password=root, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_161-b12, user.name=Skrobson, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_161\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:6033/ior, connection.pool_size=1, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=false, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Skrobson\AppData\Local\Temp\, java.version=1.8.0_161, user.dir=D:\Code\Szkola\HiberLabJPA2017, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@45a37759, java.library.path=C:\Program Files\Java\jdk1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;D:\Programy\Git\cmd;%SystemRoot%\system32;%SystemRoot%;%SystemRoot%\System32\Wbem;%SYSTEMROOT%\System32\WindowsPowerShell\v1.0\;%SYSTEMROOT%\System32\OpenSSH\;D:\Programy\Python\Python36\Scripts\;D:\Programy\Python\Python36\;C:\Users\Skrobson\AppData\Local\Microsoft\WindowsApps;C:\Users\Skrobson\AppData\Local\GitHubDesktop\bin;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.161-b12, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_161\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, hibernate.connection.pool_size=1, connection.url=jdbc:mysql://localhost:6033/ior, java.class.version=52.0}
[TRACE] Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
[DEBUG] Skipping JACC integration as it was not enabled
[DEBUG] Instantiated session factory
[TRACE] Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
[TRACE] Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
[TRACE] Initializing service [role=org.hibernate.property.access.spi.PropertyAccessStrategyResolver]
[DEBUG] Not known whether passed class name [model.Arena] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Arena
[DEBUG] Not known whether passed class name [model.Arena] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Arena
[TRACE] Skipping duplicate registration of path [address], existing type = [org.hibernate.type.StringType@6d3af739], incoming type = [org.hibernate.type.StringType@6d3af739]
[TRACE] Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@6d3af739], incoming type = [org.hibernate.type.StringType@6d3af739]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[DEBUG] Not known whether passed class name [model.Match] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Match
[DEBUG] Not known whether passed class name [model.Match] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Match
[TRACE] Skipping duplicate registration of path [guests.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [host.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [date], existing type = [org.hibernate.type.CalendarType@31206beb], incoming type = [org.hibernate.type.CalendarType@31206beb]
[TRACE] Skipping duplicate registration of path [guests], existing type = [org.hibernate.type.ManyToOneType(model.Team)], incoming type = [org.hibernate.type.ManyToOneType(model.Team)]
[TRACE] Skipping duplicate registration of path [guests.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [guests.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [statistics], existing type = [org.hibernate.type.SetType(model.Match.statistics)], incoming type = [org.hibernate.type.SetType(model.Match.statistics)]
[TRACE] Skipping duplicate registration of path [host], existing type = [org.hibernate.type.OneToOneType(model.Team)], incoming type = [org.hibernate.type.OneToOneType(model.Team)]
[TRACE] Skipping duplicate registration of path [host.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [host.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[DEBUG] Not known whether passed class name [model.Team] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Team
[DEBUG] Not known whether passed class name [model.Team] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Team
[TRACE] Skipping duplicate registration of path [coach.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [coach], existing type = [org.hibernate.type.ManyToOneType(model.Coach)], incoming type = [org.hibernate.type.ManyToOneType(model.Coach)]
[TRACE] Skipping duplicate registration of path [coach.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [coach.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@6d3af739], incoming type = [org.hibernate.type.StringType@6d3af739]
[TRACE] Skipping duplicate registration of path [players], existing type = [org.hibernate.type.SetType(model.Team.players)], incoming type = [org.hibernate.type.SetType(model.Team.players)]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[DEBUG] Not known whether passed class name [model.Statistic] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Statistic
[DEBUG] Not known whether passed class name [model.Statistic] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Statistic
[TRACE] Skipping duplicate registration of path [match.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [type.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [match], existing type = [org.hibernate.type.ManyToOneType(model.Match)], incoming type = [org.hibernate.type.ManyToOneType(model.Match)]
[TRACE] Skipping duplicate registration of path [match.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [match.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [type], existing type = [org.hibernate.type.ManyToOneType(model.StatisticType)], incoming type = [org.hibernate.type.ManyToOneType(model.StatisticType)]
[TRACE] Skipping duplicate registration of path [type.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [type.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [value], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[DEBUG] Not known whether passed class name [model.Person] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Person
[DEBUG] Not known whether passed class name [model.Player] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Player
[DEBUG] Not known whether passed class name [model.Player] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Player
[TRACE] Skipping duplicate registration of path [position.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [lastname], existing type = [org.hibernate.type.StringType@6d3af739], incoming type = [org.hibernate.type.StringType@6d3af739]
[TRACE] Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@6d3af739], incoming type = [org.hibernate.type.StringType@6d3af739]
[TRACE] Skipping duplicate registration of path [position], existing type = [org.hibernate.type.ManyToOneType(model.Position)], incoming type = [org.hibernate.type.ManyToOneType(model.Position)]
[TRACE] Skipping duplicate registration of path [position.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [position.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [team], existing type = [org.hibernate.type.ManyToOneType(model.Team)], incoming type = [org.hibernate.type.ManyToOneType(model.Team)]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[DEBUG] Not known whether passed class name [model.Person] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Person
[DEBUG] Not known whether passed class name [model.Coach] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Coach
[DEBUG] Not known whether passed class name [model.Coach] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Coach
[TRACE] Skipping duplicate registration of path [team.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [position.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [team], existing type = [org.hibernate.type.ManyToOneType(model.Team)], incoming type = [org.hibernate.type.ManyToOneType(model.Team)]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [lastname], existing type = [org.hibernate.type.StringType@6d3af739], incoming type = [org.hibernate.type.StringType@6d3af739]
[TRACE] Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@6d3af739], incoming type = [org.hibernate.type.StringType@6d3af739]
[TRACE] Skipping duplicate registration of path [team], existing type = [org.hibernate.type.ManyToOneType(model.Team)], incoming type = [org.hibernate.type.ManyToOneType(model.Team)]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [position], existing type = [org.hibernate.type.ManyToOneType(model.Position)], incoming type = [org.hibernate.type.ManyToOneType(model.Position)]
[TRACE] Skipping duplicate registration of path [position.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [position.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [team], existing type = [org.hibernate.type.ManyToOneType(model.Team)], incoming type = [org.hibernate.type.ManyToOneType(model.Team)]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [lastname], existing type = [org.hibernate.type.StringType@6d3af739], incoming type = [org.hibernate.type.StringType@6d3af739]
[TRACE] Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@6d3af739], incoming type = [org.hibernate.type.StringType@6d3af739]
[TRACE] Skipping duplicate registration of path [team], existing type = [org.hibernate.type.ManyToOneType(model.Team)], incoming type = [org.hibernate.type.ManyToOneType(model.Team)]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[DEBUG] Not known whether passed class name [model.Position] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Position
[DEBUG] Not known whether passed class name [model.Position] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Position
[TRACE] Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@6d3af739], incoming type = [org.hibernate.type.StringType@6d3af739]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[DEBUG] Not known whether passed class name [model.StatisticType] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.StatisticType
[DEBUG] Not known whether passed class name [model.StatisticType] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.StatisticType
[TRACE] Skipping duplicate registration of path [description], existing type = [org.hibernate.type.StringType@6d3af739], incoming type = [org.hibernate.type.StringType@6d3af739]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[DEBUG] Static SQL for collection: model.Match.statistics
[DEBUG]  Row insert: update statistics set match_id=? where statistic_id=?
[DEBUG]  Row update: update statistics set  where statistic_id=?
[DEBUG]  Row delete: update statistics set match_id=null where match_id=? and statistic_id=?
[DEBUG]  One-shot delete: update statistics set match_id=null where match_id=?
[DEBUG] Static SQL for collection: model.Team.players
[DEBUG]  Row insert: update players set team_id=? where person_id=?
[DEBUG]  Row update: update players set  where person_id=?
[DEBUG]  Row delete: update players set team_id=null where team_id=? and person_id=?
[DEBUG]  One-shot delete: update players set team_id=null where team_id=?
[TRACE] Ignoring subclass attribute definition [model.Person.lastname] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model.Person.name] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model.Person.lastname] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model.Person.name] because it is defined in a superclass 
[TRACE] Ignoring subclass attribute definition [model.Person.team] because it is defined in a superclass 
[DEBUG] Static SQL for entity: model.Arena
[DEBUG]  Version select: select id from arenas where id =?
[DEBUG]  Snapshot select: select arena_.id, arena_.address as address2_0_, arena_.name as name3_0_ from arenas arena_ where arena_.id=?
[DEBUG]  Insert 0: insert into arenas (address, name, id) values (?, ?, ?)
[DEBUG]  Update 0: update arenas set address=?, name=? where id=?
[DEBUG]  Delete 0: delete from arenas where id=?
[DEBUG]  Identity insert: insert into arenas (address, name) values (?, ?)
[TRACE]  Starting root entity : model.Arena
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f17e30d]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@71cf1b07
[TRACE] .. Registering AssociationKey : AssociationKey(table=arenas, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@71cf1b07
[TRACE] >> Starting entity identifier : model.Arena
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=address, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@71cf1b07
[TRACE]  Finished root entity : model.Arena
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Arena)
    - Returns
       - EntityReturnImpl(entity=model.Arena, querySpaceUid=<gen:0>, path=model.Arena)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Arena)
          - SQL table alias mapping - arena0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] Static select for entity model.Arena [NONE]: select arena0_.id as id1_0_0_, arena0_.address as address2_0_0_, arena0_.name as name3_0_0_ from arenas arena0_ where arena0_.id=?
[TRACE]  Starting root entity : model.Arena
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c2cc639]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@ccb4b1b
[TRACE] .. Registering AssociationKey : AssociationKey(table=arenas, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@ccb4b1b
[TRACE] >> Starting entity identifier : model.Arena
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=address, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@ccb4b1b
[TRACE]  Finished root entity : model.Arena
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Arena)
    - Returns
       - EntityReturnImpl(entity=model.Arena, querySpaceUid=<gen:0>, path=model.Arena)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Arena)
          - SQL table alias mapping - arena0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] Static select for entity model.Arena [READ]: select arena0_.id as id1_0_0_, arena0_.address as address2_0_0_, arena0_.name as name3_0_0_ from arenas arena0_ where arena0_.id=?
[TRACE]  Starting root entity : model.Arena
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4097cac]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@ec2cc4
[TRACE] .. Registering AssociationKey : AssociationKey(table=arenas, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@ec2cc4
[TRACE] >> Starting entity identifier : model.Arena
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=address, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@ec2cc4
[TRACE]  Finished root entity : model.Arena
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Arena)
    - Returns
       - EntityReturnImpl(entity=model.Arena, querySpaceUid=<gen:0>, path=model.Arena)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Arena)
          - SQL table alias mapping - arena0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] Static select for entity model.Arena [UPGRADE]: select arena0_.id as id1_0_0_, arena0_.address as address2_0_0_, arena0_.name as name3_0_0_ from arenas arena0_ where arena0_.id=? for update
[TRACE]  Starting root entity : model.Arena
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a5b3fee]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7c1e2a2d
[TRACE] .. Registering AssociationKey : AssociationKey(table=arenas, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7c1e2a2d
[TRACE] >> Starting entity identifier : model.Arena
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=address, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7c1e2a2d
[TRACE]  Finished root entity : model.Arena
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Arena)
    - Returns
       - EntityReturnImpl(entity=model.Arena, querySpaceUid=<gen:0>, path=model.Arena)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Arena)
          - SQL table alias mapping - arena0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] Static select for entity model.Arena [UPGRADE_NOWAIT]: select arena0_.id as id1_0_0_, arena0_.address as address2_0_0_, arena0_.name as name3_0_0_ from arenas arena0_ where arena0_.id=? for update
[TRACE]  Starting root entity : model.Arena
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@333dd51e]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@52d645b1
[TRACE] .. Registering AssociationKey : AssociationKey(table=arenas, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@52d645b1
[TRACE] >> Starting entity identifier : model.Arena
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=address, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@52d645b1
[TRACE]  Finished root entity : model.Arena
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Arena)
    - Returns
       - EntityReturnImpl(entity=model.Arena, querySpaceUid=<gen:0>, path=model.Arena)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Arena)
          - SQL table alias mapping - arena0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] Static select for entity model.Arena [UPGRADE_SKIPLOCKED]: select arena0_.id as id1_0_0_, arena0_.address as address2_0_0_, arena0_.name as name3_0_0_ from arenas arena0_ where arena0_.id=? for update
[TRACE]  Starting root entity : model.Arena
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2101b44a]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2cc3ad05
[TRACE] .. Registering AssociationKey : AssociationKey(table=arenas, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2cc3ad05
[TRACE] >> Starting entity identifier : model.Arena
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=address, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2cc3ad05
[TRACE]  Finished root entity : model.Arena
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Arena)
    - Returns
       - EntityReturnImpl(entity=model.Arena, querySpaceUid=<gen:0>, path=model.Arena)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Arena)
          - SQL table alias mapping - arena0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] Static select for entity model.Arena [FORCE]: select arena0_.id as id1_0_0_, arena0_.address as address2_0_0_, arena0_.name as name3_0_0_ from arenas arena0_ where arena0_.id=? for update
[TRACE]  Starting root entity : model.Arena
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@710b18a6]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@119020fb
[TRACE] .. Registering AssociationKey : AssociationKey(table=arenas, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@119020fb
[TRACE] >> Starting entity identifier : model.Arena
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=address, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@119020fb
[TRACE]  Finished root entity : model.Arena
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Arena)
    - Returns
       - EntityReturnImpl(entity=model.Arena, querySpaceUid=<gen:0>, path=model.Arena)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Arena)
          - SQL table alias mapping - arena0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] Static select for entity model.Arena [PESSIMISTIC_READ]: select arena0_.id as id1_0_0_, arena0_.address as address2_0_0_, arena0_.name as name3_0_0_ from arenas arena0_ where arena0_.id=? lock in share mode
[TRACE]  Starting root entity : model.Arena
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d9f6567]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@c055c54
[TRACE] .. Registering AssociationKey : AssociationKey(table=arenas, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@c055c54
[TRACE] >> Starting entity identifier : model.Arena
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=address, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@c055c54
[TRACE]  Finished root entity : model.Arena
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Arena)
    - Returns
       - EntityReturnImpl(entity=model.Arena, querySpaceUid=<gen:0>, path=model.Arena)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Arena)
          - SQL table alias mapping - arena0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] Static select for entity model.Arena [PESSIMISTIC_WRITE]: select arena0_.id as id1_0_0_, arena0_.address as address2_0_0_, arena0_.name as name3_0_0_ from arenas arena0_ where arena0_.id=? for update
[TRACE]  Starting root entity : model.Arena
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25e2ab5a]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@35e5d0e5
[TRACE] .. Registering AssociationKey : AssociationKey(table=arenas, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@35e5d0e5
[TRACE] >> Starting entity identifier : model.Arena
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=address, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@35e5d0e5
[TRACE]  Finished root entity : model.Arena
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Arena)
    - Returns
       - EntityReturnImpl(entity=model.Arena, querySpaceUid=<gen:0>, path=model.Arena)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Arena)
          - SQL table alias mapping - arena0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] Static select for entity model.Arena [PESSIMISTIC_FORCE_INCREMENT]: select arena0_.id as id1_0_0_, arena0_.address as address2_0_0_, arena0_.name as name3_0_0_ from arenas arena0_ where arena0_.id=? for update
[TRACE]  Starting root entity : model.Arena
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73173f63]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@55562aa9
[TRACE] .. Registering AssociationKey : AssociationKey(table=arenas, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@55562aa9
[TRACE] >> Starting entity identifier : model.Arena
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=address, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@55562aa9
[TRACE]  Finished root entity : model.Arena
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Arena)
    - Returns
       - EntityReturnImpl(entity=model.Arena, querySpaceUid=<gen:0>, path=model.Arena)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Arena)
          - SQL table alias mapping - arena0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] Static select for entity model.Arena [OPTIMISTIC]: select arena0_.id as id1_0_0_, arena0_.address as address2_0_0_, arena0_.name as name3_0_0_ from arenas arena0_ where arena0_.id=?
[TRACE]  Starting root entity : model.Arena
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@655ef322]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7e276594
[TRACE] .. Registering AssociationKey : AssociationKey(table=arenas, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7e276594
[TRACE] >> Starting entity identifier : model.Arena
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=address, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7e276594
[TRACE]  Finished root entity : model.Arena
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Arena)
    - Returns
       - EntityReturnImpl(entity=model.Arena, querySpaceUid=<gen:0>, path=model.Arena)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Arena)
          - SQL table alias mapping - arena0_
          - alias suffix - 0_
          - suffixed key columns - {id1_0_0_}

[DEBUG] Static select for entity model.Arena [OPTIMISTIC_FORCE_INCREMENT]: select arena0_.id as id1_0_0_, arena0_.address as address2_0_0_, arena0_.name as name3_0_0_ from arenas arena0_ where arena0_.id=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Arena: select arena0_.id as id1_0_0_, arena0_.address as address2_0_0_, arena0_.name as name3_0_0_ from arenas arena0_ where arena0_.id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Arena: select arena0_.id as id1_0_0_, arena0_.address as address2_0_0_, arena0_.name as name3_0_0_ from arenas arena0_ where arena0_.id=?
[DEBUG] Static SQL for entity: model.Match
[DEBUG]  Version select: select id from matches where id =?
[DEBUG]  Snapshot select: select match_.id, match_.date as date2_2_, match_.match_id as match_id3_2_ from matches match_ where match_.id=?
[DEBUG]  Insert 0: insert into matches (date, match_id, id) values (?, ?, ?)
[DEBUG]  Update 0: update matches set date=?, match_id=? where id=?
[DEBUG]  Delete 0: delete from matches where id=?
[DEBUG]  Identity insert: insert into matches (date, match_id) values (?, ?)
[TRACE]  Starting root entity : model.Match
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@640f11a1]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c10f1c3
[TRACE] .. Registering AssociationKey : AssociationKey(table=matches, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c10f1c3
[TRACE] >> Starting entity identifier : model.Match
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=calendar [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=calendar [non-identifier])
[DEBUG] Visiting attribute path : guests
[TRACE] >> Starting attribute Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b529706]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@2374d36a
[TRACE] .... Registering AssociationKey : AssociationKey(table=matches, columns={match_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@2374d36a
[TRACE] >>>> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : guests.coach
[TRACE] >>>> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54d18072]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1506f20f
[TRACE] ...... Registering AssociationKey : AssociationKey(table=teams, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1506f20f
[TRACE] >>>>>> Starting entity identifier : model.Coach
[DEBUG] Visiting attribute path : guests.coach.lastname
[TRACE] >>>>>> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : guests.coach.name
[TRACE] >>>>>> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : guests.coach.team
[TRACE] >>>>>> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47a5b70d]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@1506f20f
[TRACE] <<<< Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Visiting attribute path : guests.name
[TRACE] >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : guests.players
[TRACE] >>>> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@38f116f6]
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@70efb718]
[TRACE] <<<< Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@2374d36a
[TRACE] << Finishing up attribute : Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : statistics
[TRACE] >> Starting attribute Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4e858e0a]
[DEBUG] Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@435fb7b5]
[TRACE] << Finishing up attribute : Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Visiting attribute path : host
[TRACE] >> Starting attribute Attribute(name=host, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e70a728]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@b7838a9
[TRACE] .... Registering AssociationKey : AssociationKey(table=teams, columns={team_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@b7838a9
[TRACE] >>>> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : host.coach
[DEBUG] Property path deemed to be circular : host.coach
[DEBUG] Visiting attribute path : host.name
[TRACE] >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : host.players
[TRACE] >>>> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1c3146bc]
[DEBUG] Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@56c698e3]
[TRACE] <<<< Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@b7838a9
[TRACE] << Finishing up attribute : Attribute(name=host, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c10f1c3
[TRACE]  Finished root entity : model.Match
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Match)
    - Returns
       - EntityReturnImpl(entity=model.Match, querySpaceUid=<gen:0>, path=model.Match)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Match.guests)
             - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:2>, path=model.Match.guests.coach)
                - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:3>, path=model.Match.guests.coach.team)
             - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:4>, path=model.Match.guests.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:5>, path=model.Match.guests.players.<elements>)
          - CollectionAttributeFetchImpl(collection=model.Match.statistics, querySpaceUid=<gen:6>, path=model.Match.statistics)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Statistic, querySpaceUid=<gen:7>, path=model.Match.statistics.<elements>)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:8>, path=model.Match.host)
             - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:9>, path=model.Match.host.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:10>, path=model.Match.host.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Match)
          - SQL table alias mapping - match0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(guests)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {team_id1_8_1_}
                - JOIN (JoinDefinedByMetadata(coach)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=model.Coach)
                      - SQL table alias mapping - coach2_
                      - alias suffix - 2_
                      - suffixed key columns - {person_i1_3_2_}
          - JOIN (JoinDefinedByMetadata(host)) : <gen:0> -> <gen:8>
             - EntityQuerySpaceImpl(uid=<gen:8>, entity=model.Team)
                - SQL table alias mapping - team3_
                - alias suffix - 3_
                - suffixed key columns - {team_id1_8_3_}

[DEBUG] Static select for entity model.Match [NONE]: select match0_.id as id1_2_0_, match0_.date as date2_2_0_, match0_.match_id as match_id3_2_0_, team1_.team_id as team_id1_8_1_, team1_.person_id as person_i3_8_1_, team1_.name as name2_8_1_, coach2_.person_id as person_i1_3_2_, coach2_.lastname as lastname2_3_2_, coach2_.name as name3_3_2_, coach2_.team_id as team_id1_1_2_, team3_.team_id as team_id1_8_3_, team3_.person_id as person_i3_8_3_, team3_.name as name2_8_3_ from matches match0_ left outer join teams team1_ on match0_.match_id=team1_.team_id left outer join coaches coach2_ on team1_.person_id=coach2_.person_id left outer join teams team3_ on match0_.id=team3_.team_id where match0_.id=?
[TRACE]  Starting root entity : model.Match
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19553973]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7bb6ab3a
[TRACE] .. Registering AssociationKey : AssociationKey(table=matches, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7bb6ab3a
[TRACE] >> Starting entity identifier : model.Match
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=calendar [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=calendar [non-identifier])
[DEBUG] Visiting attribute path : guests
[TRACE] >> Starting attribute Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fe7c640]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4c4748bf
[TRACE] .... Registering AssociationKey : AssociationKey(table=matches, columns={match_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4c4748bf
[TRACE] >>>> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : guests.coach
[TRACE] >>>> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ce97ee5]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@32c8e539
[TRACE] ...... Registering AssociationKey : AssociationKey(table=teams, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@32c8e539
[TRACE] >>>>>> Starting entity identifier : model.Coach
[DEBUG] Visiting attribute path : guests.coach.lastname
[TRACE] >>>>>> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : guests.coach.name
[TRACE] >>>>>> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : guests.coach.team
[TRACE] >>>>>> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73dce0e6]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@32c8e539
[TRACE] <<<< Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Visiting attribute path : guests.name
[TRACE] >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : guests.players
[TRACE] >>>> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5a85c92]
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@32811494]
[TRACE] <<<< Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4c4748bf
[TRACE] << Finishing up attribute : Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : statistics
[TRACE] >> Starting attribute Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4795ded0]
[DEBUG] Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53dacd14]
[TRACE] << Finishing up attribute : Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Visiting attribute path : host
[TRACE] >> Starting attribute Attribute(name=host, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14d14731]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@2eced48b
[TRACE] .... Registering AssociationKey : AssociationKey(table=teams, columns={team_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@2eced48b
[TRACE] >>>> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : host.coach
[DEBUG] Property path deemed to be circular : host.coach
[DEBUG] Visiting attribute path : host.name
[TRACE] >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : host.players
[TRACE] >>>> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47c4ecdc]
[DEBUG] Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42f33b5d]
[TRACE] <<<< Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@2eced48b
[TRACE] << Finishing up attribute : Attribute(name=host, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7bb6ab3a
[TRACE]  Finished root entity : model.Match
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Match)
    - Returns
       - EntityReturnImpl(entity=model.Match, querySpaceUid=<gen:0>, path=model.Match)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Match.guests)
             - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:2>, path=model.Match.guests.coach)
                - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:3>, path=model.Match.guests.coach.team)
             - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:4>, path=model.Match.guests.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:5>, path=model.Match.guests.players.<elements>)
          - CollectionAttributeFetchImpl(collection=model.Match.statistics, querySpaceUid=<gen:6>, path=model.Match.statistics)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Statistic, querySpaceUid=<gen:7>, path=model.Match.statistics.<elements>)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:8>, path=model.Match.host)
             - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:9>, path=model.Match.host.players)
                - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:10>, path=model.Match.host.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Match)
          - SQL table alias mapping - match0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}
          - JOIN (JoinDefinedByMetadata(guests)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model.Team)
                - SQL table alias mapping - team1_
                - alias suffix - 1_
                - suffixed key columns - {team_id1_8_1_}
                - JOIN (JoinDefinedByMetadata(coach)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=model.Coach)
                      - SQL table alias mapping - coach2_
                      - alias suffix - 2_
                      - suffixed key columns - {person_i1_3_2_}
          - JOIN (JoinDefinedByMetadata(host)) : <gen:0> -> <gen:8>
             - EntityQuerySpaceImpl(uid=<gen:8>, entity=model.Team)
                - SQL table alias mapping - team3_
                - alias suffix - 3_
                - suffixed key columns - {team_id1_8_3_}

[DEBUG] Static select for entity model.Match [READ]: select match0_.id as id1_2_0_, match0_.date as date2_2_0_, match0_.match_id as match_id3_2_0_, team1_.team_id as team_id1_8_1_, team1_.person_id as person_i3_8_1_, team1_.name as name2_8_1_, coach2_.person_id as person_i1_3_2_, coach2_.lastname as lastname2_3_2_, coach2_.name as name3_3_2_, coach2_.team_id as team_id1_1_2_, team3_.team_id as team_id1_8_3_, team3_.person_id as person_i3_8_3_, team3_.name as name2_8_3_ from matches match0_ left outer join teams team1_ on match0_.match_id=team1_.team_id left outer join coaches coach2_ on team1_.person_id=coach2_.person_id left outer join teams team3_ on match0_.id=team3_.team_id where match0_.id=?
[TRACE]  Starting root entity : model.Match
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c8504fd]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4b7e96a
[TRACE] .. Registering AssociationKey : AssociationKey(table=matches, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4b7e96a
[TRACE] >> Starting entity identifier : model.Match
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=calendar [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=calendar [non-identifier])
[DEBUG] Visiting attribute path : guests
[TRACE] >> Starting attribute Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6475472c]
[TRACE] << Finishing up attribute : Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : statistics
[TRACE] >> Starting attribute Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3f07b12c]
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4bd1f8dd]
[TRACE] << Finishing up attribute : Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Visiting attribute path : host
[TRACE] >> Starting attribute Attribute(name=host, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7096b474]
[TRACE] << Finishing up attribute : Attribute(name=host, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4b7e96a
[TRACE]  Finished root entity : model.Match
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Match)
    - Returns
       - EntityReturnImpl(entity=model.Match, querySpaceUid=<gen:0>, path=model.Match)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Match.guests)
          - CollectionAttributeFetchImpl(collection=model.Match.statistics, querySpaceUid=<gen:2>, path=model.Match.statistics)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Statistic, querySpaceUid=<gen:3>, path=model.Match.statistics.<elements>)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:4>, path=model.Match.host)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Match)
          - SQL table alias mapping - match0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] Static select for entity model.Match [UPGRADE]: select match0_.id as id1_2_0_, match0_.date as date2_2_0_, match0_.match_id as match_id3_2_0_ from matches match0_ where match0_.id=? for update
[TRACE]  Starting root entity : model.Match
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e14c16d]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3c989952
[TRACE] .. Registering AssociationKey : AssociationKey(table=matches, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3c989952
[TRACE] >> Starting entity identifier : model.Match
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=calendar [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=calendar [non-identifier])
[DEBUG] Visiting attribute path : guests
[TRACE] >> Starting attribute Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@784b990c]
[TRACE] << Finishing up attribute : Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : statistics
[TRACE] >> Starting attribute Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3d3ba765]
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25bc0606]
[TRACE] << Finishing up attribute : Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Visiting attribute path : host
[TRACE] >> Starting attribute Attribute(name=host, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d1659ea]
[TRACE] << Finishing up attribute : Attribute(name=host, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3c989952
[TRACE]  Finished root entity : model.Match
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Match)
    - Returns
       - EntityReturnImpl(entity=model.Match, querySpaceUid=<gen:0>, path=model.Match)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Match.guests)
          - CollectionAttributeFetchImpl(collection=model.Match.statistics, querySpaceUid=<gen:2>, path=model.Match.statistics)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Statistic, querySpaceUid=<gen:3>, path=model.Match.statistics.<elements>)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:4>, path=model.Match.host)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Match)
          - SQL table alias mapping - match0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] Static select for entity model.Match [UPGRADE_NOWAIT]: select match0_.id as id1_2_0_, match0_.date as date2_2_0_, match0_.match_id as match_id3_2_0_ from matches match0_ where match0_.id=? for update
[TRACE]  Starting root entity : model.Match
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@793138bd]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1951b871
[TRACE] .. Registering AssociationKey : AssociationKey(table=matches, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1951b871
[TRACE] >> Starting entity identifier : model.Match
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=calendar [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=calendar [non-identifier])
[DEBUG] Visiting attribute path : guests
[TRACE] >> Starting attribute Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c18016b]
[TRACE] << Finishing up attribute : Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : statistics
[TRACE] >> Starting attribute Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@33aeca0b]
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43aaf813]
[TRACE] << Finishing up attribute : Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Visiting attribute path : host
[TRACE] >> Starting attribute Attribute(name=host, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57ac5227]
[TRACE] << Finishing up attribute : Attribute(name=host, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1951b871
[TRACE]  Finished root entity : model.Match
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Match)
    - Returns
       - EntityReturnImpl(entity=model.Match, querySpaceUid=<gen:0>, path=model.Match)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Match.guests)
          - CollectionAttributeFetchImpl(collection=model.Match.statistics, querySpaceUid=<gen:2>, path=model.Match.statistics)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Statistic, querySpaceUid=<gen:3>, path=model.Match.statistics.<elements>)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:4>, path=model.Match.host)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Match)
          - SQL table alias mapping - match0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] Static select for entity model.Match [UPGRADE_SKIPLOCKED]: select match0_.id as id1_2_0_, match0_.date as date2_2_0_, match0_.match_id as match_id3_2_0_ from matches match0_ where match0_.id=? for update
[TRACE]  Starting root entity : model.Match
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4ba302e0]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@e98770d
[TRACE] .. Registering AssociationKey : AssociationKey(table=matches, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@e98770d
[TRACE] >> Starting entity identifier : model.Match
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=calendar [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=calendar [non-identifier])
[DEBUG] Visiting attribute path : guests
[TRACE] >> Starting attribute Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ae67cad]
[TRACE] << Finishing up attribute : Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : statistics
[TRACE] >> Starting attribute Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@2f6e28bc]
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c098bb3]
[TRACE] << Finishing up attribute : Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Visiting attribute path : host
[TRACE] >> Starting attribute Attribute(name=host, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31e4bb20]
[TRACE] << Finishing up attribute : Attribute(name=host, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@e98770d
[TRACE]  Finished root entity : model.Match
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Match)
    - Returns
       - EntityReturnImpl(entity=model.Match, querySpaceUid=<gen:0>, path=model.Match)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Match.guests)
          - CollectionAttributeFetchImpl(collection=model.Match.statistics, querySpaceUid=<gen:2>, path=model.Match.statistics)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Statistic, querySpaceUid=<gen:3>, path=model.Match.statistics.<elements>)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:4>, path=model.Match.host)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Match)
          - SQL table alias mapping - match0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] Static select for entity model.Match [FORCE]: select match0_.id as id1_2_0_, match0_.date as date2_2_0_, match0_.match_id as match_id3_2_0_ from matches match0_ where match0_.id=? for update
[TRACE]  Starting root entity : model.Match
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18cebaa5]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@463b4ac8
[TRACE] .. Registering AssociationKey : AssociationKey(table=matches, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@463b4ac8
[TRACE] >> Starting entity identifier : model.Match
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=calendar [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=calendar [non-identifier])
[DEBUG] Visiting attribute path : guests
[TRACE] >> Starting attribute Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@765f05af]
[TRACE] << Finishing up attribute : Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : statistics
[TRACE] >> Starting attribute Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62f68dff]
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f001896]
[TRACE] << Finishing up attribute : Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Visiting attribute path : host
[TRACE] >> Starting attribute Attribute(name=host, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13f17eb4]
[TRACE] << Finishing up attribute : Attribute(name=host, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@463b4ac8
[TRACE]  Finished root entity : model.Match
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Match)
    - Returns
       - EntityReturnImpl(entity=model.Match, querySpaceUid=<gen:0>, path=model.Match)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Match.guests)
          - CollectionAttributeFetchImpl(collection=model.Match.statistics, querySpaceUid=<gen:2>, path=model.Match.statistics)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Statistic, querySpaceUid=<gen:3>, path=model.Match.statistics.<elements>)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:4>, path=model.Match.host)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Match)
          - SQL table alias mapping - match0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] Static select for entity model.Match [PESSIMISTIC_READ]: select match0_.id as id1_2_0_, match0_.date as date2_2_0_, match0_.match_id as match_id3_2_0_ from matches match0_ where match0_.id=? lock in share mode
[TRACE]  Starting root entity : model.Match
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d0d6318]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4bc28c33
[TRACE] .. Registering AssociationKey : AssociationKey(table=matches, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4bc28c33
[TRACE] >> Starting entity identifier : model.Match
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=calendar [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=calendar [non-identifier])
[DEBUG] Visiting attribute path : guests
[TRACE] >> Starting attribute Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4409e975]
[TRACE] << Finishing up attribute : Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : statistics
[TRACE] >> Starting attribute Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5c153b9e]
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a7686a7]
[TRACE] << Finishing up attribute : Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Visiting attribute path : host
[TRACE] >> Starting attribute Attribute(name=host, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@758a34ce]
[TRACE] << Finishing up attribute : Attribute(name=host, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4bc28c33
[TRACE]  Finished root entity : model.Match
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Match)
    - Returns
       - EntityReturnImpl(entity=model.Match, querySpaceUid=<gen:0>, path=model.Match)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Match.guests)
          - CollectionAttributeFetchImpl(collection=model.Match.statistics, querySpaceUid=<gen:2>, path=model.Match.statistics)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Statistic, querySpaceUid=<gen:3>, path=model.Match.statistics.<elements>)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:4>, path=model.Match.host)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Match)
          - SQL table alias mapping - match0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] Static select for entity model.Match [PESSIMISTIC_WRITE]: select match0_.id as id1_2_0_, match0_.date as date2_2_0_, match0_.match_id as match_id3_2_0_ from matches match0_ where match0_.id=? for update
[TRACE]  Starting root entity : model.Match
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ec3394b]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@bff34c6
[TRACE] .. Registering AssociationKey : AssociationKey(table=matches, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@bff34c6
[TRACE] >> Starting entity identifier : model.Match
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=calendar [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=calendar [non-identifier])
[DEBUG] Visiting attribute path : guests
[TRACE] >> Starting attribute Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1522d8a0]
[TRACE] << Finishing up attribute : Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : statistics
[TRACE] >> Starting attribute Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@312ab28e]
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5644dc81]
[TRACE] << Finishing up attribute : Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Visiting attribute path : host
[TRACE] >> Starting attribute Attribute(name=host, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@246f8b8b]
[TRACE] << Finishing up attribute : Attribute(name=host, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@bff34c6
[TRACE]  Finished root entity : model.Match
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Match)
    - Returns
       - EntityReturnImpl(entity=model.Match, querySpaceUid=<gen:0>, path=model.Match)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Match.guests)
          - CollectionAttributeFetchImpl(collection=model.Match.statistics, querySpaceUid=<gen:2>, path=model.Match.statistics)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Statistic, querySpaceUid=<gen:3>, path=model.Match.statistics.<elements>)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:4>, path=model.Match.host)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Match)
          - SQL table alias mapping - match0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] Static select for entity model.Match [PESSIMISTIC_FORCE_INCREMENT]: select match0_.id as id1_2_0_, match0_.date as date2_2_0_, match0_.match_id as match_id3_2_0_ from matches match0_ where match0_.id=? for update
[TRACE]  Starting root entity : model.Match
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@278bb07e]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4351c8c3
[TRACE] .. Registering AssociationKey : AssociationKey(table=matches, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4351c8c3
[TRACE] >> Starting entity identifier : model.Match
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=calendar [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=calendar [non-identifier])
[DEBUG] Visiting attribute path : guests
[TRACE] >> Starting attribute Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3381b4fc]
[TRACE] << Finishing up attribute : Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : statistics
[TRACE] >> Starting attribute Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6bea52d4]
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11981797]
[TRACE] << Finishing up attribute : Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Visiting attribute path : host
[TRACE] >> Starting attribute Attribute(name=host, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c42d2b7]
[TRACE] << Finishing up attribute : Attribute(name=host, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4351c8c3
[TRACE]  Finished root entity : model.Match
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Match)
    - Returns
       - EntityReturnImpl(entity=model.Match, querySpaceUid=<gen:0>, path=model.Match)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Match.guests)
          - CollectionAttributeFetchImpl(collection=model.Match.statistics, querySpaceUid=<gen:2>, path=model.Match.statistics)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Statistic, querySpaceUid=<gen:3>, path=model.Match.statistics.<elements>)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:4>, path=model.Match.host)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Match)
          - SQL table alias mapping - match0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] Static select for entity model.Match [OPTIMISTIC]: select match0_.id as id1_2_0_, match0_.date as date2_2_0_, match0_.match_id as match_id3_2_0_ from matches match0_ where match0_.id=?
[TRACE]  Starting root entity : model.Match
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@625abb97]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5b1f29fa
[TRACE] .. Registering AssociationKey : AssociationKey(table=matches, columns={id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5b1f29fa
[TRACE] >> Starting entity identifier : model.Match
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=calendar [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=calendar [non-identifier])
[DEBUG] Visiting attribute path : guests
[TRACE] >> Starting attribute Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@aeab9a1]
[TRACE] << Finishing up attribute : Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : statistics
[TRACE] >> Starting attribute Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@40f70521]
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@774698ab]
[TRACE] << Finishing up attribute : Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Visiting attribute path : host
[TRACE] >> Starting attribute Attribute(name=host, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55342f40]
[TRACE] << Finishing up attribute : Attribute(name=host, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5b1f29fa
[TRACE]  Finished root entity : model.Match
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Match)
    - Returns
       - EntityReturnImpl(entity=model.Match, querySpaceUid=<gen:0>, path=model.Match)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Match.guests)
          - CollectionAttributeFetchImpl(collection=model.Match.statistics, querySpaceUid=<gen:2>, path=model.Match.statistics)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Statistic, querySpaceUid=<gen:3>, path=model.Match.statistics.<elements>)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:4>, path=model.Match.host)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Match)
          - SQL table alias mapping - match0_
          - alias suffix - 0_
          - suffixed key columns - {id1_2_0_}

[DEBUG] Static select for entity model.Match [OPTIMISTIC_FORCE_INCREMENT]: select match0_.id as id1_2_0_, match0_.date as date2_2_0_, match0_.match_id as match_id3_2_0_ from matches match0_ where match0_.id=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Match: select match0_.id as id1_2_0_, match0_.date as date2_2_0_, match0_.match_id as match_id3_2_0_ from matches match0_ where match0_.id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Match: select match0_.id as id1_2_0_, match0_.date as date2_2_0_, match0_.match_id as match_id3_2_0_ from matches match0_ where match0_.id=?
[DEBUG] Static SQL for entity: model.Team
[DEBUG]  Version select: select team_id from teams where team_id =?
[DEBUG]  Snapshot select: select team_.team_id, team_.person_id as person_i3_8_, team_.name as name2_8_ from teams team_ where team_.team_id=?
[DEBUG]  Insert 0: insert into teams (person_id, name, team_id) values (?, ?, ?)
[DEBUG]  Update 0: update teams set person_id=?, name=? where team_id=?
[DEBUG]  Delete 0: delete from teams where team_id=?
[DEBUG]  Identity insert: insert into teams (person_id, name) values (?, ?)
[TRACE]  Starting root entity : model.Team
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a4ca3f6]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@72ea6193
[TRACE] .. Registering AssociationKey : AssociationKey(table=teams, columns={team_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@72ea6193
[TRACE] >> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : coach
[TRACE] >> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31aa3ca5]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@45905bff
[TRACE] .... Registering AssociationKey : AssociationKey(table=teams, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@45905bff
[TRACE] >>>> Starting entity identifier : model.Coach
[DEBUG] Visiting attribute path : coach.lastname
[TRACE] >>>> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : coach.name
[TRACE] >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : coach.team
[TRACE] >>>> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a2c13a8]
[TRACE] <<<< Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@45905bff
[TRACE] << Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : players
[TRACE] >> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b6b1987]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b44435b]
[TRACE] << Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@72ea6193
[TRACE]  Finished root entity : model.Team
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Team)
    - Returns
       - EntityReturnImpl(entity=model.Team, querySpaceUid=<gen:0>, path=model.Team)
          - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:1>, path=model.Team.coach)
             - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:2>, path=model.Team.coach.team)
          - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:3>, path=model.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:4>, path=model.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {team_id1_8_0_}
          - JOIN (JoinDefinedByMetadata(coach)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model.Coach)
                - SQL table alias mapping - coach1_
                - alias suffix - 1_
                - suffixed key columns - {person_i1_3_1_}

[DEBUG] Static select for entity model.Team [NONE]: select team0_.team_id as team_id1_8_0_, team0_.person_id as person_i3_8_0_, team0_.name as name2_8_0_, coach1_.person_id as person_i1_3_1_, coach1_.lastname as lastname2_3_1_, coach1_.name as name3_3_1_, coach1_.team_id as team_id1_1_1_ from teams team0_ left outer join coaches coach1_ on team0_.person_id=coach1_.person_id where team0_.team_id=?
[TRACE]  Starting root entity : model.Team
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ccca26f]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@66b7550d
[TRACE] .. Registering AssociationKey : AssociationKey(table=teams, columns={team_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@66b7550d
[TRACE] >> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : coach
[TRACE] >> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3543df7d]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@7c541c15
[TRACE] .... Registering AssociationKey : AssociationKey(table=teams, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@7c541c15
[TRACE] >>>> Starting entity identifier : model.Coach
[DEBUG] Visiting attribute path : coach.lastname
[TRACE] >>>> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : coach.name
[TRACE] >>>> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : coach.team
[TRACE] >>>> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3542162a]
[TRACE] <<<< Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@7c541c15
[TRACE] << Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : players
[TRACE] >> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@698122b2]
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4212a0c8]
[TRACE] << Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@66b7550d
[TRACE]  Finished root entity : model.Team
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Team)
    - Returns
       - EntityReturnImpl(entity=model.Team, querySpaceUid=<gen:0>, path=model.Team)
          - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:1>, path=model.Team.coach)
             - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:2>, path=model.Team.coach.team)
          - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:3>, path=model.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:4>, path=model.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {team_id1_8_0_}
          - JOIN (JoinDefinedByMetadata(coach)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model.Coach)
                - SQL table alias mapping - coach1_
                - alias suffix - 1_
                - suffixed key columns - {person_i1_3_1_}

[DEBUG] Static select for entity model.Team [READ]: select team0_.team_id as team_id1_8_0_, team0_.person_id as person_i3_8_0_, team0_.name as name2_8_0_, coach1_.person_id as person_i1_3_1_, coach1_.lastname as lastname2_3_1_, coach1_.name as name3_3_1_, coach1_.team_id as team_id1_1_1_ from teams team0_ left outer join coaches coach1_ on team0_.person_id=coach1_.person_id where team0_.team_id=?
[TRACE]  Starting root entity : model.Team
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e7aa82b]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3b2c0e88
[TRACE] .. Registering AssociationKey : AssociationKey(table=teams, columns={team_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3b2c0e88
[TRACE] >> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : coach
[TRACE] >> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bd82fed]
[TRACE] << Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : players
[TRACE] >> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@c1bd0be]
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@476b0ae6]
[TRACE] << Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3b2c0e88
[TRACE]  Finished root entity : model.Team
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Team)
    - Returns
       - EntityReturnImpl(entity=model.Team, querySpaceUid=<gen:0>, path=model.Team)
          - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:1>, path=model.Team.coach)
          - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:2>, path=model.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:3>, path=model.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {team_id1_8_0_}

[DEBUG] Static select for entity model.Team [UPGRADE]: select team0_.team_id as team_id1_8_0_, team0_.person_id as person_i3_8_0_, team0_.name as name2_8_0_ from teams team0_ where team0_.team_id=? for update
[TRACE]  Starting root entity : model.Team
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c6804cd]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@655f7ea
[TRACE] .. Registering AssociationKey : AssociationKey(table=teams, columns={team_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@655f7ea
[TRACE] >> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : coach
[TRACE] >> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@549949be]
[TRACE] << Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : players
[TRACE] >> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4b3a45f1]
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@17a87e37]
[TRACE] << Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@655f7ea
[TRACE]  Finished root entity : model.Team
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Team)
    - Returns
       - EntityReturnImpl(entity=model.Team, querySpaceUid=<gen:0>, path=model.Team)
          - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:1>, path=model.Team.coach)
          - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:2>, path=model.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:3>, path=model.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {team_id1_8_0_}

[DEBUG] Static select for entity model.Team [UPGRADE_NOWAIT]: select team0_.team_id as team_id1_8_0_, team0_.person_id as person_i3_8_0_, team0_.name as name2_8_0_ from teams team0_ where team0_.team_id=? for update
[TRACE]  Starting root entity : model.Team
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3eeb318f]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@20a14b55
[TRACE] .. Registering AssociationKey : AssociationKey(table=teams, columns={team_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@20a14b55
[TRACE] >> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : coach
[TRACE] >> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39ad977d]
[TRACE] << Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : players
[TRACE] >> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6da00fb9]
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a202ccb]
[TRACE] << Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@20a14b55
[TRACE]  Finished root entity : model.Team
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Team)
    - Returns
       - EntityReturnImpl(entity=model.Team, querySpaceUid=<gen:0>, path=model.Team)
          - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:1>, path=model.Team.coach)
          - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:2>, path=model.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:3>, path=model.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {team_id1_8_0_}

[DEBUG] Static select for entity model.Team [UPGRADE_SKIPLOCKED]: select team0_.team_id as team_id1_8_0_, team0_.person_id as person_i3_8_0_, team0_.name as name2_8_0_ from teams team0_ where team0_.team_id=? for update
[TRACE]  Starting root entity : model.Team
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20f12539]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@75b25825
[TRACE] .. Registering AssociationKey : AssociationKey(table=teams, columns={team_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@75b25825
[TRACE] >> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : coach
[TRACE] >> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18025ced]
[TRACE] << Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : players
[TRACE] >> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@13cf7d52]
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a3e4aff]
[TRACE] << Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@75b25825
[TRACE]  Finished root entity : model.Team
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Team)
    - Returns
       - EntityReturnImpl(entity=model.Team, querySpaceUid=<gen:0>, path=model.Team)
          - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:1>, path=model.Team.coach)
          - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:2>, path=model.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:3>, path=model.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {team_id1_8_0_}

[DEBUG] Static select for entity model.Team [FORCE]: select team0_.team_id as team_id1_8_0_, team0_.person_id as person_i3_8_0_, team0_.name as name2_8_0_ from teams team0_ where team0_.team_id=? for update
[TRACE]  Starting root entity : model.Team
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5d2a4eed]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@57459491
[TRACE] .. Registering AssociationKey : AssociationKey(table=teams, columns={team_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@57459491
[TRACE] >> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : coach
[TRACE] >> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f0846c6]
[TRACE] << Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : players
[TRACE] >> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@77a98a6a]
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78fbff54]
[TRACE] << Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@57459491
[TRACE]  Finished root entity : model.Team
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Team)
    - Returns
       - EntityReturnImpl(entity=model.Team, querySpaceUid=<gen:0>, path=model.Team)
          - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:1>, path=model.Team.coach)
          - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:2>, path=model.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:3>, path=model.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {team_id1_8_0_}

[DEBUG] Static select for entity model.Team [PESSIMISTIC_READ]: select team0_.team_id as team_id1_8_0_, team0_.person_id as person_i3_8_0_, team0_.name as name2_8_0_ from teams team0_ where team0_.team_id=? lock in share mode
[TRACE]  Starting root entity : model.Team
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e10dc6]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7e22550a
[TRACE] .. Registering AssociationKey : AssociationKey(table=teams, columns={team_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7e22550a
[TRACE] >> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : coach
[TRACE] >> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45e37a7e]
[TRACE] << Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : players
[TRACE] >> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62452cc9]
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6941827a]
[TRACE] << Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7e22550a
[TRACE]  Finished root entity : model.Team
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Team)
    - Returns
       - EntityReturnImpl(entity=model.Team, querySpaceUid=<gen:0>, path=model.Team)
          - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:1>, path=model.Team.coach)
          - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:2>, path=model.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:3>, path=model.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {team_id1_8_0_}

[DEBUG] Static select for entity model.Team [PESSIMISTIC_WRITE]: select team0_.team_id as team_id1_8_0_, team0_.person_id as person_i3_8_0_, team0_.name as name2_8_0_ from teams team0_ where team0_.team_id=? for update
[TRACE]  Starting root entity : model.Team
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a7005d]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5bc9ba1d
[TRACE] .. Registering AssociationKey : AssociationKey(table=teams, columns={team_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5bc9ba1d
[TRACE] >> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : coach
[TRACE] >> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1021f6c9]
[TRACE] << Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : players
[TRACE] >> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7516e4e5]
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@488eb7f2]
[TRACE] << Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5bc9ba1d
[TRACE]  Finished root entity : model.Team
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Team)
    - Returns
       - EntityReturnImpl(entity=model.Team, querySpaceUid=<gen:0>, path=model.Team)
          - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:1>, path=model.Team.coach)
          - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:2>, path=model.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:3>, path=model.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {team_id1_8_0_}

[DEBUG] Static select for entity model.Team [PESSIMISTIC_FORCE_INCREMENT]: select team0_.team_id as team_id1_8_0_, team0_.person_id as person_i3_8_0_, team0_.name as name2_8_0_ from teams team0_ where team0_.team_id=? for update
[TRACE]  Starting root entity : model.Team
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5e81e5ac]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4189d70b
[TRACE] .. Registering AssociationKey : AssociationKey(table=teams, columns={team_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4189d70b
[TRACE] >> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : coach
[TRACE] >> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fa2213]
[TRACE] << Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : players
[TRACE] >> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@3e7634b9]
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f0b0a5e]
[TRACE] << Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4189d70b
[TRACE]  Finished root entity : model.Team
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Team)
    - Returns
       - EntityReturnImpl(entity=model.Team, querySpaceUid=<gen:0>, path=model.Team)
          - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:1>, path=model.Team.coach)
          - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:2>, path=model.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:3>, path=model.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {team_id1_8_0_}

[DEBUG] Static select for entity model.Team [OPTIMISTIC]: select team0_.team_id as team_id1_8_0_, team0_.person_id as person_i3_8_0_, team0_.name as name2_8_0_ from teams team0_ where team0_.team_id=?
[TRACE]  Starting root entity : model.Team
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6035b93b]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@320de594
[TRACE] .. Registering AssociationKey : AssociationKey(table=teams, columns={team_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@320de594
[TRACE] >> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : coach
[TRACE] >> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dd1dc90]
[TRACE] << Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : players
[TRACE] >> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@abf688e]
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@478ee483]
[TRACE] << Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@320de594
[TRACE]  Finished root entity : model.Team
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Team)
    - Returns
       - EntityReturnImpl(entity=model.Team, querySpaceUid=<gen:0>, path=model.Team)
          - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:1>, path=model.Team.coach)
          - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:2>, path=model.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:3>, path=model.Team.players.<elements>)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {team_id1_8_0_}

[DEBUG] Static select for entity model.Team [OPTIMISTIC_FORCE_INCREMENT]: select team0_.team_id as team_id1_8_0_, team0_.person_id as person_i3_8_0_, team0_.name as name2_8_0_ from teams team0_ where team0_.team_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Team: select team0_.team_id as team_id1_8_0_, team0_.person_id as person_i3_8_0_, team0_.name as name2_8_0_ from teams team0_ where team0_.team_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Team: select team0_.team_id as team_id1_8_0_, team0_.person_id as person_i3_8_0_, team0_.name as name2_8_0_ from teams team0_ where team0_.team_id=?
[DEBUG] Static SQL for entity: model.Statistic
[DEBUG]  Version select: select statistic_id from statistics where statistic_id =?
[DEBUG]  Snapshot select: select statistic_.statistic_id, statistic_.match_id as match_id3_6_, statistic_.statisticType_id as statisti4_6_, statistic_.value as value2_6_ from statistics statistic_ where statistic_.statistic_id=?
[DEBUG]  Insert 0: insert into statistics (match_id, statisticType_id, value, statistic_id) values (?, ?, ?, ?)
[DEBUG]  Update 0: update statistics set match_id=?, statisticType_id=?, value=? where statistic_id=?
[DEBUG]  Delete 0: delete from statistics where statistic_id=?
[DEBUG]  Identity insert: insert into statistics (match_id, statisticType_id, value) values (?, ?, ?)
[TRACE]  Starting root entity : model.Statistic
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a7288a3]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2974f221
[TRACE] .. Registering AssociationKey : AssociationKey(table=statistics, columns={statistic_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2974f221
[TRACE] >> Starting entity identifier : model.Statistic
[DEBUG] Visiting attribute path : match
[TRACE] >> Starting attribute Attribute(name=match, type=model.Match [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58fe0499]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@686449f9
[TRACE] .... Registering AssociationKey : AssociationKey(table=statistics, columns={match_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@686449f9
[TRACE] >>>> Starting entity identifier : model.Match
[DEBUG] Visiting attribute path : match.date
[TRACE] >>>> Starting attribute Attribute(name=date, type=calendar [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=date, type=calendar [non-identifier])
[DEBUG] Visiting attribute path : match.guests
[TRACE] >>>> Starting attribute Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@665df3c6]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@68b6f0d6
[TRACE] ...... Registering AssociationKey : AssociationKey(table=matches, columns={match_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@68b6f0d6
[TRACE] >>>>>> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : match.guests.coach
[TRACE] >>>>>> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4044fb95]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Visiting attribute path : match.guests.name
[TRACE] >>>>>> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : match.guests.players
[TRACE] >>>>>> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@aa549e5]
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36f48b4]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@68b6f0d6
[TRACE] <<<< Finishing up attribute : Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : match.statistics
[DEBUG] Property path deemed to be circular : match.statistics
[DEBUG] Visiting attribute path : match.host
[TRACE] >>>> Starting attribute Attribute(name=host, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c00384f]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@3b7ff809
[TRACE] ...... Registering AssociationKey : AssociationKey(table=teams, columns={team_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@3b7ff809
[TRACE] >>>>>> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : match.host.coach
[TRACE] >>>>>> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1bb564e2]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Visiting attribute path : match.host.name
[TRACE] >>>>>> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : match.host.players
[TRACE] >>>>>> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@62e6b5c8]
[DEBUG] Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f792b9b]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@3b7ff809
[TRACE] <<<< Finishing up attribute : Attribute(name=host, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@686449f9
[TRACE] << Finishing up attribute : Attribute(name=match, type=model.Match [non-identifier,association])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b8233cd]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4b20ca2b
[TRACE] .... Registering AssociationKey : AssociationKey(table=statistics, columns={statisticType_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4b20ca2b
[TRACE] >>>> Starting entity identifier : model.StatisticType
[DEBUG] Visiting attribute path : type.description
[TRACE] >>>> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4b20ca2b
[TRACE] << Finishing up attribute : Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Visiting attribute path : value
[TRACE] >> Starting attribute Attribute(name=value, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=value, type=integer [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2974f221
[TRACE]  Finished root entity : model.Statistic
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Statistic)
    - Returns
       - EntityReturnImpl(entity=model.Statistic, querySpaceUid=<gen:0>, path=model.Statistic)
          - EntityAttributeFetchImpl(entity=model.Match, querySpaceUid=<gen:1>, path=model.Statistic.match)
             - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:2>, path=model.Statistic.match.guests)
                - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:3>, path=model.Statistic.match.guests.coach)
                - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:4>, path=model.Statistic.match.guests.players)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:5>, path=model.Statistic.match.guests.players.<elements>)
             - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:6>, path=model.Statistic.match.host)
                - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:7>, path=model.Statistic.match.host.coach)
                - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:8>, path=model.Statistic.match.host.players)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:9>, path=model.Statistic.match.host.players.<elements>)
          - EntityAttributeFetchImpl(entity=model.StatisticType, querySpaceUid=<gen:10>, path=model.Statistic.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Statistic)
          - SQL table alias mapping - statistic0_
          - alias suffix - 0_
          - suffixed key columns - {statisti1_6_0_}
          - JOIN (JoinDefinedByMetadata(match)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model.Match)
                - SQL table alias mapping - match1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(guests)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=model.Team)
                      - SQL table alias mapping - team2_
                      - alias suffix - 2_
                      - suffixed key columns - {team_id1_8_2_}
                - JOIN (JoinDefinedByMetadata(host)) : <gen:1> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=model.Team)
                      - SQL table alias mapping - team3_
                      - alias suffix - 3_
                      - suffixed key columns - {team_id1_8_3_}
          - JOIN (JoinDefinedByMetadata(type)) : <gen:0> -> <gen:10>
             - EntityQuerySpaceImpl(uid=<gen:10>, entity=model.StatisticType)
                - SQL table alias mapping - statistict4_
                - alias suffix - 4_
                - suffixed key columns - {ststisti1_7_4_}

[DEBUG] Static select for entity model.Statistic [NONE]: select statistic0_.statistic_id as statisti1_6_0_, statistic0_.match_id as match_id3_6_0_, statistic0_.statisticType_id as statisti4_6_0_, statistic0_.value as value2_6_0_, match1_.id as id1_2_1_, match1_.date as date2_2_1_, match1_.match_id as match_id3_2_1_, team2_.team_id as team_id1_8_2_, team2_.person_id as person_i3_8_2_, team2_.name as name2_8_2_, team3_.team_id as team_id1_8_3_, team3_.person_id as person_i3_8_3_, team3_.name as name2_8_3_, statistict4_.ststisticType_id as ststisti1_7_4_, statistict4_.description as descript2_7_4_ from statistics statistic0_ left outer join matches match1_ on statistic0_.match_id=match1_.id left outer join teams team2_ on match1_.match_id=team2_.team_id left outer join teams team3_ on match1_.id=team3_.team_id left outer join statisticsType statistict4_ on statistic0_.statisticType_id=statistict4_.ststisticType_id where statistic0_.statistic_id=?
[TRACE]  Starting root entity : model.Statistic
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1cbf6e72]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6aecbb8d
[TRACE] .. Registering AssociationKey : AssociationKey(table=statistics, columns={statistic_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6aecbb8d
[TRACE] >> Starting entity identifier : model.Statistic
[DEBUG] Visiting attribute path : match
[TRACE] >> Starting attribute Attribute(name=match, type=model.Match [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1af146]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4da602fc
[TRACE] .... Registering AssociationKey : AssociationKey(table=statistics, columns={match_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4da602fc
[TRACE] >>>> Starting entity identifier : model.Match
[DEBUG] Visiting attribute path : match.date
[TRACE] >>>> Starting attribute Attribute(name=date, type=calendar [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=date, type=calendar [non-identifier])
[DEBUG] Visiting attribute path : match.guests
[TRACE] >>>> Starting attribute Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a8d39c4]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@25b2cfcb
[TRACE] ...... Registering AssociationKey : AssociationKey(table=matches, columns={match_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@25b2cfcb
[TRACE] >>>>>> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : match.guests.coach
[TRACE] >>>>>> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72758afa]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Visiting attribute path : match.guests.name
[TRACE] >>>>>> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : match.guests.players
[TRACE] >>>>>> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@fb9c7aa]
[DEBUG] Adding QuerySpace : uid = <gen:5> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c398c80]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@25b2cfcb
[TRACE] <<<< Finishing up attribute : Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : match.statistics
[DEBUG] Property path deemed to be circular : match.statistics
[DEBUG] Visiting attribute path : match.host
[TRACE] >>>> Starting attribute Attribute(name=host, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:6> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7fc6de5b]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@21baa903
[TRACE] ...... Registering AssociationKey : AssociationKey(table=teams, columns={team_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@21baa903
[TRACE] >>>>>> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : match.host.coach
[TRACE] >>>>>> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:7> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@607fbe09]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Visiting attribute path : match.host.name
[TRACE] >>>>>> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] <<<<<< Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : match.host.players
[TRACE] >>>>>> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:8> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@60a2630a]
[DEBUG] Adding QuerySpace : uid = <gen:9> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@29df4d43]
[TRACE] <<<<<< Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@21baa903
[TRACE] <<<< Finishing up attribute : Attribute(name=host, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@4da602fc
[TRACE] << Finishing up attribute : Attribute(name=match, type=model.Match [non-identifier,association])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:10> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5dd91bca]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@40cb698e
[TRACE] .... Registering AssociationKey : AssociationKey(table=statistics, columns={statisticType_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@40cb698e
[TRACE] >>>> Starting entity identifier : model.StatisticType
[DEBUG] Visiting attribute path : type.description
[TRACE] >>>> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@40cb698e
[TRACE] << Finishing up attribute : Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Visiting attribute path : value
[TRACE] >> Starting attribute Attribute(name=value, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=value, type=integer [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6aecbb8d
[TRACE]  Finished root entity : model.Statistic
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Statistic)
    - Returns
       - EntityReturnImpl(entity=model.Statistic, querySpaceUid=<gen:0>, path=model.Statistic)
          - EntityAttributeFetchImpl(entity=model.Match, querySpaceUid=<gen:1>, path=model.Statistic.match)
             - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:2>, path=model.Statistic.match.guests)
                - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:3>, path=model.Statistic.match.guests.coach)
                - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:4>, path=model.Statistic.match.guests.players)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:5>, path=model.Statistic.match.guests.players.<elements>)
             - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:6>, path=model.Statistic.match.host)
                - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:7>, path=model.Statistic.match.host.coach)
                - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:8>, path=model.Statistic.match.host.players)
                   - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:9>, path=model.Statistic.match.host.players.<elements>)
          - EntityAttributeFetchImpl(entity=model.StatisticType, querySpaceUid=<gen:10>, path=model.Statistic.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Statistic)
          - SQL table alias mapping - statistic0_
          - alias suffix - 0_
          - suffixed key columns - {statisti1_6_0_}
          - JOIN (JoinDefinedByMetadata(match)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model.Match)
                - SQL table alias mapping - match1_
                - alias suffix - 1_
                - suffixed key columns - {id1_2_1_}
                - JOIN (JoinDefinedByMetadata(guests)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=model.Team)
                      - SQL table alias mapping - team2_
                      - alias suffix - 2_
                      - suffixed key columns - {team_id1_8_2_}
                - JOIN (JoinDefinedByMetadata(host)) : <gen:1> -> <gen:6>
                   - EntityQuerySpaceImpl(uid=<gen:6>, entity=model.Team)
                      - SQL table alias mapping - team3_
                      - alias suffix - 3_
                      - suffixed key columns - {team_id1_8_3_}
          - JOIN (JoinDefinedByMetadata(type)) : <gen:0> -> <gen:10>
             - EntityQuerySpaceImpl(uid=<gen:10>, entity=model.StatisticType)
                - SQL table alias mapping - statistict4_
                - alias suffix - 4_
                - suffixed key columns - {ststisti1_7_4_}

[DEBUG] Static select for entity model.Statistic [READ]: select statistic0_.statistic_id as statisti1_6_0_, statistic0_.match_id as match_id3_6_0_, statistic0_.statisticType_id as statisti4_6_0_, statistic0_.value as value2_6_0_, match1_.id as id1_2_1_, match1_.date as date2_2_1_, match1_.match_id as match_id3_2_1_, team2_.team_id as team_id1_8_2_, team2_.person_id as person_i3_8_2_, team2_.name as name2_8_2_, team3_.team_id as team_id1_8_3_, team3_.person_id as person_i3_8_3_, team3_.name as name2_8_3_, statistict4_.ststisticType_id as ststisti1_7_4_, statistict4_.description as descript2_7_4_ from statistics statistic0_ left outer join matches match1_ on statistic0_.match_id=match1_.id left outer join teams team2_ on match1_.match_id=team2_.team_id left outer join teams team3_ on match1_.id=team3_.team_id left outer join statisticsType statistict4_ on statistic0_.statisticType_id=statistict4_.ststisticType_id where statistic0_.statistic_id=?
[TRACE]  Starting root entity : model.Statistic
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3382f8ae]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@60641ec8
[TRACE] .. Registering AssociationKey : AssociationKey(table=statistics, columns={statistic_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@60641ec8
[TRACE] >> Starting entity identifier : model.Statistic
[DEBUG] Visiting attribute path : match
[TRACE] >> Starting attribute Attribute(name=match, type=model.Match [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75f65e45]
[TRACE] << Finishing up attribute : Attribute(name=match, type=model.Match [non-identifier,association])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6eeade6c]
[TRACE] << Finishing up attribute : Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Visiting attribute path : value
[TRACE] >> Starting attribute Attribute(name=value, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=value, type=integer [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@60641ec8
[TRACE]  Finished root entity : model.Statistic
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Statistic)
    - Returns
       - EntityReturnImpl(entity=model.Statistic, querySpaceUid=<gen:0>, path=model.Statistic)
          - EntityAttributeFetchImpl(entity=model.Match, querySpaceUid=<gen:1>, path=model.Statistic.match)
          - EntityAttributeFetchImpl(entity=model.StatisticType, querySpaceUid=<gen:2>, path=model.Statistic.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Statistic)
          - SQL table alias mapping - statistic0_
          - alias suffix - 0_
          - suffixed key columns - {statisti1_6_0_}

[DEBUG] Static select for entity model.Statistic [UPGRADE]: select statistic0_.statistic_id as statisti1_6_0_, statistic0_.match_id as match_id3_6_0_, statistic0_.statisticType_id as statisti4_6_0_, statistic0_.value as value2_6_0_ from statistics statistic0_ where statistic0_.statistic_id=? for update
[TRACE]  Starting root entity : model.Statistic
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a891c97]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@a5bd950
[TRACE] .. Registering AssociationKey : AssociationKey(table=statistics, columns={statistic_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@a5bd950
[TRACE] >> Starting entity identifier : model.Statistic
[DEBUG] Visiting attribute path : match
[TRACE] >> Starting attribute Attribute(name=match, type=model.Match [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d18aa28]
[TRACE] << Finishing up attribute : Attribute(name=match, type=model.Match [non-identifier,association])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75390459]
[TRACE] << Finishing up attribute : Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Visiting attribute path : value
[TRACE] >> Starting attribute Attribute(name=value, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=value, type=integer [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@a5bd950
[TRACE]  Finished root entity : model.Statistic
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Statistic)
    - Returns
       - EntityReturnImpl(entity=model.Statistic, querySpaceUid=<gen:0>, path=model.Statistic)
          - EntityAttributeFetchImpl(entity=model.Match, querySpaceUid=<gen:1>, path=model.Statistic.match)
          - EntityAttributeFetchImpl(entity=model.StatisticType, querySpaceUid=<gen:2>, path=model.Statistic.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Statistic)
          - SQL table alias mapping - statistic0_
          - alias suffix - 0_
          - suffixed key columns - {statisti1_6_0_}

[DEBUG] Static select for entity model.Statistic [UPGRADE_NOWAIT]: select statistic0_.statistic_id as statisti1_6_0_, statistic0_.match_id as match_id3_6_0_, statistic0_.statisticType_id as statisti4_6_0_, statistic0_.value as value2_6_0_ from statistics statistic0_ where statistic0_.statistic_id=? for update
[TRACE]  Starting root entity : model.Statistic
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7756c3cd]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2313052e
[TRACE] .. Registering AssociationKey : AssociationKey(table=statistics, columns={statistic_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2313052e
[TRACE] >> Starting entity identifier : model.Statistic
[DEBUG] Visiting attribute path : match
[TRACE] >> Starting attribute Attribute(name=match, type=model.Match [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bd2b28e]
[TRACE] << Finishing up attribute : Attribute(name=match, type=model.Match [non-identifier,association])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16746061]
[TRACE] << Finishing up attribute : Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Visiting attribute path : value
[TRACE] >> Starting attribute Attribute(name=value, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=value, type=integer [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2313052e
[TRACE]  Finished root entity : model.Statistic
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Statistic)
    - Returns
       - EntityReturnImpl(entity=model.Statistic, querySpaceUid=<gen:0>, path=model.Statistic)
          - EntityAttributeFetchImpl(entity=model.Match, querySpaceUid=<gen:1>, path=model.Statistic.match)
          - EntityAttributeFetchImpl(entity=model.StatisticType, querySpaceUid=<gen:2>, path=model.Statistic.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Statistic)
          - SQL table alias mapping - statistic0_
          - alias suffix - 0_
          - suffixed key columns - {statisti1_6_0_}

[DEBUG] Static select for entity model.Statistic [UPGRADE_SKIPLOCKED]: select statistic0_.statistic_id as statisti1_6_0_, statistic0_.match_id as match_id3_6_0_, statistic0_.statisticType_id as statisti4_6_0_, statistic0_.value as value2_6_0_ from statistics statistic0_ where statistic0_.statistic_id=? for update
[TRACE]  Starting root entity : model.Statistic
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57fd91c9]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6cfcd46d
[TRACE] .. Registering AssociationKey : AssociationKey(table=statistics, columns={statistic_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6cfcd46d
[TRACE] >> Starting entity identifier : model.Statistic
[DEBUG] Visiting attribute path : match
[TRACE] >> Starting attribute Attribute(name=match, type=model.Match [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52045dbe]
[TRACE] << Finishing up attribute : Attribute(name=match, type=model.Match [non-identifier,association])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@674658f7]
[TRACE] << Finishing up attribute : Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Visiting attribute path : value
[TRACE] >> Starting attribute Attribute(name=value, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=value, type=integer [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6cfcd46d
[TRACE]  Finished root entity : model.Statistic
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Statistic)
    - Returns
       - EntityReturnImpl(entity=model.Statistic, querySpaceUid=<gen:0>, path=model.Statistic)
          - EntityAttributeFetchImpl(entity=model.Match, querySpaceUid=<gen:1>, path=model.Statistic.match)
          - EntityAttributeFetchImpl(entity=model.StatisticType, querySpaceUid=<gen:2>, path=model.Statistic.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Statistic)
          - SQL table alias mapping - statistic0_
          - alias suffix - 0_
          - suffixed key columns - {statisti1_6_0_}

[DEBUG] Static select for entity model.Statistic [FORCE]: select statistic0_.statistic_id as statisti1_6_0_, statistic0_.match_id as match_id3_6_0_, statistic0_.statisticType_id as statisti4_6_0_, statistic0_.value as value2_6_0_ from statistics statistic0_ where statistic0_.statistic_id=? for update
[TRACE]  Starting root entity : model.Statistic
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c8eee0f]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@565b064f
[TRACE] .. Registering AssociationKey : AssociationKey(table=statistics, columns={statistic_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@565b064f
[TRACE] >> Starting entity identifier : model.Statistic
[DEBUG] Visiting attribute path : match
[TRACE] >> Starting attribute Attribute(name=match, type=model.Match [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26425897]
[TRACE] << Finishing up attribute : Attribute(name=match, type=model.Match [non-identifier,association])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73163d48]
[TRACE] << Finishing up attribute : Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Visiting attribute path : value
[TRACE] >> Starting attribute Attribute(name=value, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=value, type=integer [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@565b064f
[TRACE]  Finished root entity : model.Statistic
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Statistic)
    - Returns
       - EntityReturnImpl(entity=model.Statistic, querySpaceUid=<gen:0>, path=model.Statistic)
          - EntityAttributeFetchImpl(entity=model.Match, querySpaceUid=<gen:1>, path=model.Statistic.match)
          - EntityAttributeFetchImpl(entity=model.StatisticType, querySpaceUid=<gen:2>, path=model.Statistic.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Statistic)
          - SQL table alias mapping - statistic0_
          - alias suffix - 0_
          - suffixed key columns - {statisti1_6_0_}

[DEBUG] Static select for entity model.Statistic [PESSIMISTIC_READ]: select statistic0_.statistic_id as statisti1_6_0_, statistic0_.match_id as match_id3_6_0_, statistic0_.statisticType_id as statisti4_6_0_, statistic0_.value as value2_6_0_ from statistics statistic0_ where statistic0_.statistic_id=? lock in share mode
[TRACE]  Starting root entity : model.Statistic
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58c34bb3]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@56a4479a
[TRACE] .. Registering AssociationKey : AssociationKey(table=statistics, columns={statistic_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@56a4479a
[TRACE] >> Starting entity identifier : model.Statistic
[DEBUG] Visiting attribute path : match
[TRACE] >> Starting attribute Attribute(name=match, type=model.Match [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62163b39]
[TRACE] << Finishing up attribute : Attribute(name=match, type=model.Match [non-identifier,association])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20a8a64e]
[TRACE] << Finishing up attribute : Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Visiting attribute path : value
[TRACE] >> Starting attribute Attribute(name=value, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=value, type=integer [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@56a4479a
[TRACE]  Finished root entity : model.Statistic
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Statistic)
    - Returns
       - EntityReturnImpl(entity=model.Statistic, querySpaceUid=<gen:0>, path=model.Statistic)
          - EntityAttributeFetchImpl(entity=model.Match, querySpaceUid=<gen:1>, path=model.Statistic.match)
          - EntityAttributeFetchImpl(entity=model.StatisticType, querySpaceUid=<gen:2>, path=model.Statistic.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Statistic)
          - SQL table alias mapping - statistic0_
          - alias suffix - 0_
          - suffixed key columns - {statisti1_6_0_}

[DEBUG] Static select for entity model.Statistic [PESSIMISTIC_WRITE]: select statistic0_.statistic_id as statisti1_6_0_, statistic0_.match_id as match_id3_6_0_, statistic0_.statisticType_id as statisti4_6_0_, statistic0_.value as value2_6_0_ from statistics statistic0_ where statistic0_.statistic_id=? for update
[TRACE]  Starting root entity : model.Statistic
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62f4ff3b]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1698fc68
[TRACE] .. Registering AssociationKey : AssociationKey(table=statistics, columns={statistic_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1698fc68
[TRACE] >> Starting entity identifier : model.Statistic
[DEBUG] Visiting attribute path : match
[TRACE] >> Starting attribute Attribute(name=match, type=model.Match [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4504d271]
[TRACE] << Finishing up attribute : Attribute(name=match, type=model.Match [non-identifier,association])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@207b8649]
[TRACE] << Finishing up attribute : Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Visiting attribute path : value
[TRACE] >> Starting attribute Attribute(name=value, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=value, type=integer [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1698fc68
[TRACE]  Finished root entity : model.Statistic
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Statistic)
    - Returns
       - EntityReturnImpl(entity=model.Statistic, querySpaceUid=<gen:0>, path=model.Statistic)
          - EntityAttributeFetchImpl(entity=model.Match, querySpaceUid=<gen:1>, path=model.Statistic.match)
          - EntityAttributeFetchImpl(entity=model.StatisticType, querySpaceUid=<gen:2>, path=model.Statistic.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Statistic)
          - SQL table alias mapping - statistic0_
          - alias suffix - 0_
          - suffixed key columns - {statisti1_6_0_}

[DEBUG] Static select for entity model.Statistic [PESSIMISTIC_FORCE_INCREMENT]: select statistic0_.statistic_id as statisti1_6_0_, statistic0_.match_id as match_id3_6_0_, statistic0_.statisticType_id as statisti4_6_0_, statistic0_.value as value2_6_0_ from statistics statistic0_ where statistic0_.statistic_id=? for update
[TRACE]  Starting root entity : model.Statistic
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@65b3a85a]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@34997338
[TRACE] .. Registering AssociationKey : AssociationKey(table=statistics, columns={statistic_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@34997338
[TRACE] >> Starting entity identifier : model.Statistic
[DEBUG] Visiting attribute path : match
[TRACE] >> Starting attribute Attribute(name=match, type=model.Match [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57eda880]
[TRACE] << Finishing up attribute : Attribute(name=match, type=model.Match [non-identifier,association])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b5825fa]
[TRACE] << Finishing up attribute : Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Visiting attribute path : value
[TRACE] >> Starting attribute Attribute(name=value, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=value, type=integer [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@34997338
[TRACE]  Finished root entity : model.Statistic
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Statistic)
    - Returns
       - EntityReturnImpl(entity=model.Statistic, querySpaceUid=<gen:0>, path=model.Statistic)
          - EntityAttributeFetchImpl(entity=model.Match, querySpaceUid=<gen:1>, path=model.Statistic.match)
          - EntityAttributeFetchImpl(entity=model.StatisticType, querySpaceUid=<gen:2>, path=model.Statistic.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Statistic)
          - SQL table alias mapping - statistic0_
          - alias suffix - 0_
          - suffixed key columns - {statisti1_6_0_}

[DEBUG] Static select for entity model.Statistic [OPTIMISTIC]: select statistic0_.statistic_id as statisti1_6_0_, statistic0_.match_id as match_id3_6_0_, statistic0_.statisticType_id as statisti4_6_0_, statistic0_.value as value2_6_0_ from statistics statistic0_ where statistic0_.statistic_id=?
[TRACE]  Starting root entity : model.Statistic
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53d1b9b3]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2cae1042
[TRACE] .. Registering AssociationKey : AssociationKey(table=statistics, columns={statistic_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2cae1042
[TRACE] >> Starting entity identifier : model.Statistic
[DEBUG] Visiting attribute path : match
[TRACE] >> Starting attribute Attribute(name=match, type=model.Match [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@163d04ff]
[TRACE] << Finishing up attribute : Attribute(name=match, type=model.Match [non-identifier,association])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c209437]
[TRACE] << Finishing up attribute : Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Visiting attribute path : value
[TRACE] >> Starting attribute Attribute(name=value, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=value, type=integer [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2cae1042
[TRACE]  Finished root entity : model.Statistic
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Statistic)
    - Returns
       - EntityReturnImpl(entity=model.Statistic, querySpaceUid=<gen:0>, path=model.Statistic)
          - EntityAttributeFetchImpl(entity=model.Match, querySpaceUid=<gen:1>, path=model.Statistic.match)
          - EntityAttributeFetchImpl(entity=model.StatisticType, querySpaceUid=<gen:2>, path=model.Statistic.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Statistic)
          - SQL table alias mapping - statistic0_
          - alias suffix - 0_
          - suffixed key columns - {statisti1_6_0_}

[DEBUG] Static select for entity model.Statistic [OPTIMISTIC_FORCE_INCREMENT]: select statistic0_.statistic_id as statisti1_6_0_, statistic0_.match_id as match_id3_6_0_, statistic0_.statisticType_id as statisti4_6_0_, statistic0_.value as value2_6_0_ from statistics statistic0_ where statistic0_.statistic_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Statistic: select statistic0_.statistic_id as statisti1_6_0_, statistic0_.match_id as match_id3_6_0_, statistic0_.statisticType_id as statisti4_6_0_, statistic0_.value as value2_6_0_ from statistics statistic0_ where statistic0_.statistic_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Statistic: select statistic0_.statistic_id as statisti1_6_0_, statistic0_.match_id as match_id3_6_0_, statistic0_.statisticType_id as statisti4_6_0_, statistic0_.value as value2_6_0_ from statistics statistic0_ where statistic0_.statistic_id=?
[DEBUG] Static SQL for entity: model.Player
[DEBUG]  Version select: select person_id from players where person_id =?
[DEBUG]  Snapshot select: select player_.person_id, player_.lastname as lastname2_3_, player_.name as name3_3_, player_.position_id as position1_4_, player_.team_id as team_id2_4_ from players player_ where player_.person_id=?
[DEBUG]  Insert 0: insert into players (lastname, name, position_id, team_id, person_id) values (?, ?, ?, ?, ?)
[DEBUG]  Update 0: update players set lastname=?, name=?, position_id=?, team_id=? where person_id=?
[DEBUG]  Delete 0: delete from players where person_id=?
[TRACE]  Starting root entity : model.Player
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2262b621]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7e928e2f
[TRACE] .. Registering AssociationKey : AssociationKey(table=players, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7e928e2f
[TRACE] >> Starting entity identifier : model.Player
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@f667fe]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@788fcafb]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7e928e2f
[TRACE]  Finished root entity : model.Player
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Player)
    - Returns
       - EntityReturnImpl(entity=model.Player, querySpaceUid=<gen:0>, path=model.Player)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:1>, path=model.Player.position)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:2>, path=model.Player.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Player [NONE]: select player0_.person_id as person_i1_3_0_, player0_.lastname as lastname2_3_0_, player0_.name as name3_3_0_, player0_.position_id as position1_4_0_, player0_.team_id as team_id2_4_0_ from players player0_ where player0_.person_id=?
[TRACE]  Starting root entity : model.Player
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1698ee84]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@10c626be
[TRACE] .. Registering AssociationKey : AssociationKey(table=players, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@10c626be
[TRACE] >> Starting entity identifier : model.Player
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fc0cc3]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@328cf0e1]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@10c626be
[TRACE]  Finished root entity : model.Player
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Player)
    - Returns
       - EntityReturnImpl(entity=model.Player, querySpaceUid=<gen:0>, path=model.Player)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:1>, path=model.Player.position)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:2>, path=model.Player.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Player [READ]: select player0_.person_id as person_i1_3_0_, player0_.lastname as lastname2_3_0_, player0_.name as name3_3_0_, player0_.position_id as position1_4_0_, player0_.team_id as team_id2_4_0_ from players player0_ where player0_.person_id=?
[TRACE]  Starting root entity : model.Player
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@63b1d4fa]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@42e3ede4
[TRACE] .. Registering AssociationKey : AssociationKey(table=players, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@42e3ede4
[TRACE] >> Starting entity identifier : model.Player
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@201b6b6f]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75459c75]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@42e3ede4
[TRACE]  Finished root entity : model.Player
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Player)
    - Returns
       - EntityReturnImpl(entity=model.Player, querySpaceUid=<gen:0>, path=model.Player)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:1>, path=model.Player.position)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:2>, path=model.Player.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Player [UPGRADE]: select player0_.person_id as person_i1_3_0_, player0_.lastname as lastname2_3_0_, player0_.name as name3_3_0_, player0_.position_id as position1_4_0_, player0_.team_id as team_id2_4_0_ from players player0_ where player0_.person_id=? for update
[TRACE]  Starting root entity : model.Player
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@183e8023]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@45efc20d
[TRACE] .. Registering AssociationKey : AssociationKey(table=players, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@45efc20d
[TRACE] >> Starting entity identifier : model.Player
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e5499cc]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@67ab1c47]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@45efc20d
[TRACE]  Finished root entity : model.Player
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Player)
    - Returns
       - EntityReturnImpl(entity=model.Player, querySpaceUid=<gen:0>, path=model.Player)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:1>, path=model.Player.position)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:2>, path=model.Player.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Player [UPGRADE_NOWAIT]: select player0_.person_id as person_i1_3_0_, player0_.lastname as lastname2_3_0_, player0_.name as name3_3_0_, player0_.position_id as position1_4_0_, player0_.team_id as team_id2_4_0_ from players player0_ where player0_.person_id=? for update
[TRACE]  Starting root entity : model.Player
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b78a709]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@30bcf3c1
[TRACE] .. Registering AssociationKey : AssociationKey(table=players, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@30bcf3c1
[TRACE] >> Starting entity identifier : model.Player
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a3c96e3]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@15cafec7]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@30bcf3c1
[TRACE]  Finished root entity : model.Player
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Player)
    - Returns
       - EntityReturnImpl(entity=model.Player, querySpaceUid=<gen:0>, path=model.Player)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:1>, path=model.Player.position)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:2>, path=model.Player.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Player [UPGRADE_SKIPLOCKED]: select player0_.person_id as person_i1_3_0_, player0_.lastname as lastname2_3_0_, player0_.name as name3_3_0_, player0_.position_id as position1_4_0_, player0_.team_id as team_id2_4_0_ from players player0_ where player0_.person_id=? for update
[TRACE]  Starting root entity : model.Player
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b444398]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@cb191ca
[TRACE] .. Registering AssociationKey : AssociationKey(table=players, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@cb191ca
[TRACE] >> Starting entity identifier : model.Player
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42f48531]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a776e]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@cb191ca
[TRACE]  Finished root entity : model.Player
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Player)
    - Returns
       - EntityReturnImpl(entity=model.Player, querySpaceUid=<gen:0>, path=model.Player)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:1>, path=model.Player.position)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:2>, path=model.Player.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Player [FORCE]: select player0_.person_id as person_i1_3_0_, player0_.lastname as lastname2_3_0_, player0_.name as name3_3_0_, player0_.position_id as position1_4_0_, player0_.team_id as team_id2_4_0_ from players player0_ where player0_.person_id=? for update
[TRACE]  Starting root entity : model.Player
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@792bbc74]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@79145d5a
[TRACE] .. Registering AssociationKey : AssociationKey(table=players, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@79145d5a
[TRACE] >> Starting entity identifier : model.Player
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f2f9244]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4c4d27c8]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@79145d5a
[TRACE]  Finished root entity : model.Player
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Player)
    - Returns
       - EntityReturnImpl(entity=model.Player, querySpaceUid=<gen:0>, path=model.Player)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:1>, path=model.Player.position)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:2>, path=model.Player.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Player [PESSIMISTIC_READ]: select player0_.person_id as person_i1_3_0_, player0_.lastname as lastname2_3_0_, player0_.name as name3_3_0_, player0_.position_id as position1_4_0_, player0_.team_id as team_id2_4_0_ from players player0_ where player0_.person_id=? lock in share mode
[TRACE]  Starting root entity : model.Player
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6821ea29]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@338494fa
[TRACE] .. Registering AssociationKey : AssociationKey(table=players, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@338494fa
[TRACE] >> Starting entity identifier : model.Player
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@505a9d7c]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@758c83d8]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@338494fa
[TRACE]  Finished root entity : model.Player
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Player)
    - Returns
       - EntityReturnImpl(entity=model.Player, querySpaceUid=<gen:0>, path=model.Player)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:1>, path=model.Player.position)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:2>, path=model.Player.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Player [PESSIMISTIC_WRITE]: select player0_.person_id as person_i1_3_0_, player0_.lastname as lastname2_3_0_, player0_.name as name3_3_0_, player0_.position_id as position1_4_0_, player0_.team_id as team_id2_4_0_ from players player0_ where player0_.person_id=? for update
[TRACE]  Starting root entity : model.Player
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@129b4fe2]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5af3a0f
[TRACE] .. Registering AssociationKey : AssociationKey(table=players, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5af3a0f
[TRACE] >> Starting entity identifier : model.Player
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19ae6bb]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10993713]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5af3a0f
[TRACE]  Finished root entity : model.Player
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Player)
    - Returns
       - EntityReturnImpl(entity=model.Player, querySpaceUid=<gen:0>, path=model.Player)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:1>, path=model.Player.position)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:2>, path=model.Player.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Player [PESSIMISTIC_FORCE_INCREMENT]: select player0_.person_id as person_i1_3_0_, player0_.lastname as lastname2_3_0_, player0_.name as name3_3_0_, player0_.position_id as position1_4_0_, player0_.team_id as team_id2_4_0_ from players player0_ where player0_.person_id=? for update
[TRACE]  Starting root entity : model.Player
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58359ebd]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@24b6b8f6
[TRACE] .. Registering AssociationKey : AssociationKey(table=players, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@24b6b8f6
[TRACE] >> Starting entity identifier : model.Player
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@72cf2de5]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2bb7bd00]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@24b6b8f6
[TRACE]  Finished root entity : model.Player
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Player)
    - Returns
       - EntityReturnImpl(entity=model.Player, querySpaceUid=<gen:0>, path=model.Player)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:1>, path=model.Player.position)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:2>, path=model.Player.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Player [OPTIMISTIC]: select player0_.person_id as person_i1_3_0_, player0_.lastname as lastname2_3_0_, player0_.name as name3_3_0_, player0_.position_id as position1_4_0_, player0_.team_id as team_id2_4_0_ from players player0_ where player0_.person_id=?
[TRACE]  Starting root entity : model.Player
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5f031ebd]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4ee37ca3
[TRACE] .. Registering AssociationKey : AssociationKey(table=players, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4ee37ca3
[TRACE] >> Starting entity identifier : model.Player
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@45c8d09f]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53812a9b]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4ee37ca3
[TRACE]  Finished root entity : model.Player
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Player)
    - Returns
       - EntityReturnImpl(entity=model.Player, querySpaceUid=<gen:0>, path=model.Player)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:1>, path=model.Player.position)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:2>, path=model.Player.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Player [OPTIMISTIC_FORCE_INCREMENT]: select player0_.person_id as person_i1_3_0_, player0_.lastname as lastname2_3_0_, player0_.name as name3_3_0_, player0_.position_id as position1_4_0_, player0_.team_id as team_id2_4_0_ from players player0_ where player0_.person_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Player: select player0_.person_id as person_i1_3_0_, player0_.lastname as lastname2_3_0_, player0_.name as name3_3_0_, player0_.position_id as position1_4_0_, player0_.team_id as team_id2_4_0_ from players player0_ where player0_.person_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Player: select player0_.person_id as person_i1_3_0_, player0_.lastname as lastname2_3_0_, player0_.name as name3_3_0_, player0_.position_id as position1_4_0_, player0_.team_id as team_id2_4_0_ from players player0_ where player0_.person_id=?
[DEBUG] Static SQL for entity: model.Person
[DEBUG]  Version select: select person_id from persons where person_id =?
[DEBUG]  Snapshot select: select person_.person_id, person_.lastname as lastname2_3_, person_.name as name3_3_ from ( select person_id, lastname, name, team_id, null as position_id, 1 as clazz_ from coaches union select person_id, lastname, name, team_id, position_id, 2 as clazz_ from players ) person_ where person_.person_id=?
[DEBUG]  Insert 0: insert into persons (lastname, name, person_id) values (?, ?, ?)
[DEBUG]  Update 0: update persons set lastname=?, name=? where person_id=?
[DEBUG]  Delete 0: delete from persons where person_id=?
[TRACE]  Starting root entity : model.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14b030a0]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@41e350f1
[TRACE] .. Registering AssociationKey : AssociationKey(table=( select person_id, lastname, name, team_id, null as position_id, 1 as clazz_ from coaches union select person_id, lastname, name, team_id, position_id, 2 as clazz_ from players ), columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@41e350f1
[TRACE] >> Starting entity identifier : model.Person
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@422c3c7a]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@18230356]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@41e350f1
[TRACE]  Finished root entity : model.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Person)
    - Returns
       - EntityReturnImpl(entity=model.Person, querySpaceUid=<gen:0>, path=model.Person)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:1>, path=model.Person.position)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:2>, path=model.Person.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Person [NONE]: select person0_.person_id as person_i1_3_0_, person0_.lastname as lastname2_3_0_, person0_.name as name3_3_0_, person0_.team_id as team_id1_1_0_, person0_.position_id as position1_4_0_, person0_.team_id as team_id2_4_0_, person0_.clazz_ as clazz_0_ from ( select person_id, lastname, name, team_id, null as position_id, 1 as clazz_ from coaches union select person_id, lastname, name, team_id, position_id, 2 as clazz_ from players ) person0_ where person0_.person_id=?
[TRACE]  Starting root entity : model.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d8305c2]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@56bca85b
[TRACE] .. Registering AssociationKey : AssociationKey(table=( select person_id, lastname, name, team_id, null as position_id, 1 as clazz_ from coaches union select person_id, lastname, name, team_id, position_id, 2 as clazz_ from players ), columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@56bca85b
[TRACE] >> Starting entity identifier : model.Person
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75d0911a]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75e91545]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@56bca85b
[TRACE]  Finished root entity : model.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Person)
    - Returns
       - EntityReturnImpl(entity=model.Person, querySpaceUid=<gen:0>, path=model.Person)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:1>, path=model.Person.position)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:2>, path=model.Person.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Person [READ]: select person0_.person_id as person_i1_3_0_, person0_.lastname as lastname2_3_0_, person0_.name as name3_3_0_, person0_.team_id as team_id1_1_0_, person0_.position_id as position1_4_0_, person0_.team_id as team_id2_4_0_, person0_.clazz_ as clazz_0_ from ( select person_id, lastname, name, team_id, null as position_id, 1 as clazz_ from coaches union select person_id, lastname, name, team_id, position_id, 2 as clazz_ from players ) person0_ where person0_.person_id=?
[TRACE]  Starting root entity : model.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@60d1a32f]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@531c311e
[TRACE] .. Registering AssociationKey : AssociationKey(table=( select person_id, lastname, name, team_id, null as position_id, 1 as clazz_ from coaches union select person_id, lastname, name, team_id, position_id, 2 as clazz_ from players ), columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@531c311e
[TRACE] >> Starting entity identifier : model.Person
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@22b53226]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fcb4808]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@531c311e
[TRACE]  Finished root entity : model.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Person)
    - Returns
       - EntityReturnImpl(entity=model.Person, querySpaceUid=<gen:0>, path=model.Person)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:1>, path=model.Person.position)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:2>, path=model.Person.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Person [UPGRADE]: select person0_.person_id as person_i1_3_0_, person0_.lastname as lastname2_3_0_, person0_.name as name3_3_0_, person0_.team_id as team_id1_1_0_, person0_.position_id as position1_4_0_, person0_.team_id as team_id2_4_0_, person0_.clazz_ as clazz_0_ from ( select person_id, lastname, name, team_id, null as position_id, 1 as clazz_ from coaches union select person_id, lastname, name, team_id, position_id, 2 as clazz_ from players ) person0_ where person0_.person_id=? for update
[TRACE]  Starting root entity : model.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@726e5805]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@40c80397
[TRACE] .. Registering AssociationKey : AssociationKey(table=( select person_id, lastname, name, team_id, null as position_id, 1 as clazz_ from coaches union select person_id, lastname, name, team_id, position_id, 2 as clazz_ from players ), columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@40c80397
[TRACE] >> Starting entity identifier : model.Person
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b672daa]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ea9b7c6]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@40c80397
[TRACE]  Finished root entity : model.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Person)
    - Returns
       - EntityReturnImpl(entity=model.Person, querySpaceUid=<gen:0>, path=model.Person)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:1>, path=model.Person.position)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:2>, path=model.Person.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Person [UPGRADE_NOWAIT]: select person0_.person_id as person_i1_3_0_, person0_.lastname as lastname2_3_0_, person0_.name as name3_3_0_, person0_.team_id as team_id1_1_0_, person0_.position_id as position1_4_0_, person0_.team_id as team_id2_4_0_, person0_.clazz_ as clazz_0_ from ( select person_id, lastname, name, team_id, null as position_id, 1 as clazz_ from coaches union select person_id, lastname, name, team_id, position_id, 2 as clazz_ from players ) person0_ where person0_.person_id=? for update
[TRACE]  Starting root entity : model.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e077866]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@ed3068a
[TRACE] .. Registering AssociationKey : AssociationKey(table=( select person_id, lastname, name, team_id, null as position_id, 1 as clazz_ from coaches union select person_id, lastname, name, team_id, position_id, 2 as clazz_ from players ), columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@ed3068a
[TRACE] >> Starting entity identifier : model.Person
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2b6087]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fffff43]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@ed3068a
[TRACE]  Finished root entity : model.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Person)
    - Returns
       - EntityReturnImpl(entity=model.Person, querySpaceUid=<gen:0>, path=model.Person)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:1>, path=model.Person.position)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:2>, path=model.Person.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Person [UPGRADE_SKIPLOCKED]: select person0_.person_id as person_i1_3_0_, person0_.lastname as lastname2_3_0_, person0_.name as name3_3_0_, person0_.team_id as team_id1_1_0_, person0_.position_id as position1_4_0_, person0_.team_id as team_id2_4_0_, person0_.clazz_ as clazz_0_ from ( select person_id, lastname, name, team_id, null as position_id, 1 as clazz_ from coaches union select person_id, lastname, name, team_id, position_id, 2 as clazz_ from players ) person0_ where person0_.person_id=? for update
[TRACE]  Starting root entity : model.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@a8e6492]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1c7fd41f
[TRACE] .. Registering AssociationKey : AssociationKey(table=( select person_id, lastname, name, team_id, null as position_id, 1 as clazz_ from coaches union select person_id, lastname, name, team_id, position_id, 2 as clazz_ from players ), columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1c7fd41f
[TRACE] >> Starting entity identifier : model.Person
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b77a04f]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b324585]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1c7fd41f
[TRACE]  Finished root entity : model.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Person)
    - Returns
       - EntityReturnImpl(entity=model.Person, querySpaceUid=<gen:0>, path=model.Person)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:1>, path=model.Person.position)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:2>, path=model.Person.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Person [FORCE]: select person0_.person_id as person_i1_3_0_, person0_.lastname as lastname2_3_0_, person0_.name as name3_3_0_, person0_.team_id as team_id1_1_0_, person0_.position_id as position1_4_0_, person0_.team_id as team_id2_4_0_, person0_.clazz_ as clazz_0_ from ( select person_id, lastname, name, team_id, null as position_id, 1 as clazz_ from coaches union select person_id, lastname, name, team_id, position_id, 2 as clazz_ from players ) person0_ where person0_.person_id=? for update
[TRACE]  Starting root entity : model.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e11485]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@60dce7ea
[TRACE] .. Registering AssociationKey : AssociationKey(table=( select person_id, lastname, name, team_id, null as position_id, 1 as clazz_ from coaches union select person_id, lastname, name, team_id, position_id, 2 as clazz_ from players ), columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@60dce7ea
[TRACE] >> Starting entity identifier : model.Person
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@662f5666]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@fd8294b]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@60dce7ea
[TRACE]  Finished root entity : model.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Person)
    - Returns
       - EntityReturnImpl(entity=model.Person, querySpaceUid=<gen:0>, path=model.Person)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:1>, path=model.Person.position)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:2>, path=model.Person.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Person [PESSIMISTIC_READ]: select person0_.person_id as person_i1_3_0_, person0_.lastname as lastname2_3_0_, person0_.name as name3_3_0_, person0_.team_id as team_id1_1_0_, person0_.position_id as position1_4_0_, person0_.team_id as team_id2_4_0_, person0_.clazz_ as clazz_0_ from ( select person_id, lastname, name, team_id, null as position_id, 1 as clazz_ from coaches union select person_id, lastname, name, team_id, position_id, 2 as clazz_ from players ) person0_ where person0_.person_id=? lock in share mode
[TRACE]  Starting root entity : model.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5974109]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@27305e6
[TRACE] .. Registering AssociationKey : AssociationKey(table=( select person_id, lastname, name, team_id, null as position_id, 1 as clazz_ from coaches union select person_id, lastname, name, team_id, position_id, 2 as clazz_ from players ), columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@27305e6
[TRACE] >> Starting entity identifier : model.Person
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ef3efa8]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@502f1f4c]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@27305e6
[TRACE]  Finished root entity : model.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Person)
    - Returns
       - EntityReturnImpl(entity=model.Person, querySpaceUid=<gen:0>, path=model.Person)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:1>, path=model.Person.position)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:2>, path=model.Person.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Person [PESSIMISTIC_WRITE]: select person0_.person_id as person_i1_3_0_, person0_.lastname as lastname2_3_0_, person0_.name as name3_3_0_, person0_.team_id as team_id1_1_0_, person0_.position_id as position1_4_0_, person0_.team_id as team_id2_4_0_, person0_.clazz_ as clazz_0_ from ( select person_id, lastname, name, team_id, null as position_id, 1 as clazz_ from coaches union select person_id, lastname, name, team_id, position_id, 2 as clazz_ from players ) person0_ where person0_.person_id=? for update
[TRACE]  Starting root entity : model.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f8f9349]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@75c9e76b
[TRACE] .. Registering AssociationKey : AssociationKey(table=( select person_id, lastname, name, team_id, null as position_id, 1 as clazz_ from coaches union select person_id, lastname, name, team_id, position_id, 2 as clazz_ from players ), columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@75c9e76b
[TRACE] >> Starting entity identifier : model.Person
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7446d8d5]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c3b6c6e]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@75c9e76b
[TRACE]  Finished root entity : model.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Person)
    - Returns
       - EntityReturnImpl(entity=model.Person, querySpaceUid=<gen:0>, path=model.Person)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:1>, path=model.Person.position)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:2>, path=model.Person.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Person [PESSIMISTIC_FORCE_INCREMENT]: select person0_.person_id as person_i1_3_0_, person0_.lastname as lastname2_3_0_, person0_.name as name3_3_0_, person0_.team_id as team_id1_1_0_, person0_.position_id as position1_4_0_, person0_.team_id as team_id2_4_0_, person0_.clazz_ as clazz_0_ from ( select person_id, lastname, name, team_id, null as position_id, 1 as clazz_ from coaches union select person_id, lastname, name, team_id, position_id, 2 as clazz_ from players ) person0_ where person0_.person_id=? for update
[TRACE]  Starting root entity : model.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4fbda97b]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@75f5fd58
[TRACE] .. Registering AssociationKey : AssociationKey(table=( select person_id, lastname, name, team_id, null as position_id, 1 as clazz_ from coaches union select person_id, lastname, name, team_id, position_id, 2 as clazz_ from players ), columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@75f5fd58
[TRACE] >> Starting entity identifier : model.Person
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37b70343]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@306851c7]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@75f5fd58
[TRACE]  Finished root entity : model.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Person)
    - Returns
       - EntityReturnImpl(entity=model.Person, querySpaceUid=<gen:0>, path=model.Person)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:1>, path=model.Person.position)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:2>, path=model.Person.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Person [OPTIMISTIC]: select person0_.person_id as person_i1_3_0_, person0_.lastname as lastname2_3_0_, person0_.name as name3_3_0_, person0_.team_id as team_id1_1_0_, person0_.position_id as position1_4_0_, person0_.team_id as team_id2_4_0_, person0_.clazz_ as clazz_0_ from ( select person_id, lastname, name, team_id, null as position_id, 1 as clazz_ from coaches union select person_id, lastname, name, team_id, position_id, 2 as clazz_ from players ) person0_ where person0_.person_id=?
[TRACE]  Starting root entity : model.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12bcd0c0]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4879f0f2
[TRACE] .. Registering AssociationKey : AssociationKey(table=( select person_id, lastname, name, team_id, null as position_id, 1 as clazz_ from coaches union select person_id, lastname, name, team_id, position_id, 2 as clazz_ from players ), columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4879f0f2
[TRACE] >> Starting entity identifier : model.Person
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@47db5fa5]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@354fc8f0]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4879f0f2
[TRACE]  Finished root entity : model.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Person)
    - Returns
       - EntityReturnImpl(entity=model.Person, querySpaceUid=<gen:0>, path=model.Person)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:1>, path=model.Person.position)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:2>, path=model.Person.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Person [OPTIMISTIC_FORCE_INCREMENT]: select person0_.person_id as person_i1_3_0_, person0_.lastname as lastname2_3_0_, person0_.name as name3_3_0_, person0_.team_id as team_id1_1_0_, person0_.position_id as position1_4_0_, person0_.team_id as team_id2_4_0_, person0_.clazz_ as clazz_0_ from ( select person_id, lastname, name, team_id, null as position_id, 1 as clazz_ from coaches union select person_id, lastname, name, team_id, position_id, 2 as clazz_ from players ) person0_ where person0_.person_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Person: select person0_.person_id as person_i1_3_0_, person0_.lastname as lastname2_3_0_, person0_.name as name3_3_0_, person0_.team_id as team_id1_1_0_, person0_.position_id as position1_4_0_, person0_.team_id as team_id2_4_0_, person0_.clazz_ as clazz_0_ from ( select person_id, lastname, name, team_id, null as position_id, 1 as clazz_ from coaches union select person_id, lastname, name, team_id, position_id, 2 as clazz_ from players ) person0_ where person0_.person_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Person: select person0_.person_id as person_i1_3_0_, person0_.lastname as lastname2_3_0_, person0_.name as name3_3_0_, person0_.team_id as team_id1_1_0_, person0_.position_id as position1_4_0_, person0_.team_id as team_id2_4_0_, person0_.clazz_ as clazz_0_ from ( select person_id, lastname, name, team_id, null as position_id, 1 as clazz_ from coaches union select person_id, lastname, name, team_id, position_id, 2 as clazz_ from players ) person0_ where person0_.person_id=?
[DEBUG] Static SQL for entity: model.Coach
[DEBUG]  Version select: select person_id from coaches where person_id =?
[DEBUG]  Snapshot select: select coach_.person_id, coach_.lastname as lastname2_3_, coach_.name as name3_3_, coach_.team_id as team_id1_1_ from coaches coach_ where coach_.person_id=?
[DEBUG]  Insert 0: insert into coaches (lastname, name, team_id, person_id) values (?, ?, ?, ?)
[DEBUG]  Update 0: update coaches set lastname=?, name=?, team_id=? where person_id=?
[DEBUG]  Delete 0: delete from coaches where person_id=?
[TRACE]  Starting root entity : model.Coach
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41813449]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4678a2eb
[TRACE] .. Registering AssociationKey : AssociationKey(table=coaches, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4678a2eb
[TRACE] >> Starting entity identifier : model.Coach
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b43fbf6]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4678a2eb
[TRACE]  Finished root entity : model.Coach
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Coach)
    - Returns
       - EntityReturnImpl(entity=model.Coach, querySpaceUid=<gen:0>, path=model.Coach)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Coach.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Coach)
          - SQL table alias mapping - coach0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Coach [NONE]: select coach0_.person_id as person_i1_3_0_, coach0_.lastname as lastname2_3_0_, coach0_.name as name3_3_0_, coach0_.team_id as team_id1_1_0_ from coaches coach0_ where coach0_.person_id=?
[TRACE]  Starting root entity : model.Coach
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1080b026]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@58ebfd03
[TRACE] .. Registering AssociationKey : AssociationKey(table=coaches, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@58ebfd03
[TRACE] >> Starting entity identifier : model.Coach
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b07730f]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@58ebfd03
[TRACE]  Finished root entity : model.Coach
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Coach)
    - Returns
       - EntityReturnImpl(entity=model.Coach, querySpaceUid=<gen:0>, path=model.Coach)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Coach.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Coach)
          - SQL table alias mapping - coach0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Coach [READ]: select coach0_.person_id as person_i1_3_0_, coach0_.lastname as lastname2_3_0_, coach0_.name as name3_3_0_, coach0_.team_id as team_id1_1_0_ from coaches coach0_ where coach0_.person_id=?
[TRACE]  Starting root entity : model.Coach
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1fdfafd2]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@a4b2d8f
[TRACE] .. Registering AssociationKey : AssociationKey(table=coaches, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@a4b2d8f
[TRACE] >> Starting entity identifier : model.Coach
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@dcfda20]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@a4b2d8f
[TRACE]  Finished root entity : model.Coach
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Coach)
    - Returns
       - EntityReturnImpl(entity=model.Coach, querySpaceUid=<gen:0>, path=model.Coach)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Coach.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Coach)
          - SQL table alias mapping - coach0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Coach [UPGRADE]: select coach0_.person_id as person_i1_3_0_, coach0_.lastname as lastname2_3_0_, coach0_.name as name3_3_0_, coach0_.team_id as team_id1_1_0_ from coaches coach0_ where coach0_.person_id=? for update
[TRACE]  Starting root entity : model.Coach
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d304f9d]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@f73dcd6
[TRACE] .. Registering AssociationKey : AssociationKey(table=coaches, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@f73dcd6
[TRACE] >> Starting entity identifier : model.Coach
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c87bfe2]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@f73dcd6
[TRACE]  Finished root entity : model.Coach
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Coach)
    - Returns
       - EntityReturnImpl(entity=model.Coach, querySpaceUid=<gen:0>, path=model.Coach)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Coach.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Coach)
          - SQL table alias mapping - coach0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Coach [UPGRADE_NOWAIT]: select coach0_.person_id as person_i1_3_0_, coach0_.lastname as lastname2_3_0_, coach0_.name as name3_3_0_, coach0_.team_id as team_id1_1_0_ from coaches coach0_ where coach0_.person_id=? for update
[TRACE]  Starting root entity : model.Coach
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2fea7088]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@40499e4f
[TRACE] .. Registering AssociationKey : AssociationKey(table=coaches, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@40499e4f
[TRACE] >> Starting entity identifier : model.Coach
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51cd7ffc]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@40499e4f
[TRACE]  Finished root entity : model.Coach
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Coach)
    - Returns
       - EntityReturnImpl(entity=model.Coach, querySpaceUid=<gen:0>, path=model.Coach)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Coach.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Coach)
          - SQL table alias mapping - coach0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Coach [UPGRADE_SKIPLOCKED]: select coach0_.person_id as person_i1_3_0_, coach0_.lastname as lastname2_3_0_, coach0_.name as name3_3_0_, coach0_.team_id as team_id1_1_0_ from coaches coach0_ where coach0_.person_id=? for update
[TRACE]  Starting root entity : model.Coach
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@30d4b288]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4cc6fa2a
[TRACE] .. Registering AssociationKey : AssociationKey(table=coaches, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4cc6fa2a
[TRACE] >> Starting entity identifier : model.Coach
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40f1be1b]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4cc6fa2a
[TRACE]  Finished root entity : model.Coach
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Coach)
    - Returns
       - EntityReturnImpl(entity=model.Coach, querySpaceUid=<gen:0>, path=model.Coach)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Coach.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Coach)
          - SQL table alias mapping - coach0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Coach [FORCE]: select coach0_.person_id as person_i1_3_0_, coach0_.lastname as lastname2_3_0_, coach0_.name as name3_3_0_, coach0_.team_id as team_id1_1_0_ from coaches coach0_ where coach0_.person_id=? for update
[TRACE]  Starting root entity : model.Coach
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a791b66]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6f2cb653
[TRACE] .. Registering AssociationKey : AssociationKey(table=coaches, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6f2cb653
[TRACE] >> Starting entity identifier : model.Coach
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@14c01636]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6f2cb653
[TRACE]  Finished root entity : model.Coach
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Coach)
    - Returns
       - EntityReturnImpl(entity=model.Coach, querySpaceUid=<gen:0>, path=model.Coach)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Coach.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Coach)
          - SQL table alias mapping - coach0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Coach [PESSIMISTIC_READ]: select coach0_.person_id as person_i1_3_0_, coach0_.lastname as lastname2_3_0_, coach0_.name as name3_3_0_, coach0_.team_id as team_id1_1_0_ from coaches coach0_ where coach0_.person_id=? lock in share mode
[TRACE]  Starting root entity : model.Coach
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@590c73d3]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6b9ce1bf
[TRACE] .. Registering AssociationKey : AssociationKey(table=coaches, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6b9ce1bf
[TRACE] >> Starting entity identifier : model.Coach
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61884cb1]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6b9ce1bf
[TRACE]  Finished root entity : model.Coach
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Coach)
    - Returns
       - EntityReturnImpl(entity=model.Coach, querySpaceUid=<gen:0>, path=model.Coach)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Coach.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Coach)
          - SQL table alias mapping - coach0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Coach [PESSIMISTIC_WRITE]: select coach0_.person_id as person_i1_3_0_, coach0_.lastname as lastname2_3_0_, coach0_.name as name3_3_0_, coach0_.team_id as team_id1_1_0_ from coaches coach0_ where coach0_.person_id=? for update
[TRACE]  Starting root entity : model.Coach
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@75ed9710]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4fc5e095
[TRACE] .. Registering AssociationKey : AssociationKey(table=coaches, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4fc5e095
[TRACE] >> Starting entity identifier : model.Coach
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@435871cb]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4fc5e095
[TRACE]  Finished root entity : model.Coach
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Coach)
    - Returns
       - EntityReturnImpl(entity=model.Coach, querySpaceUid=<gen:0>, path=model.Coach)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Coach.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Coach)
          - SQL table alias mapping - coach0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Coach [PESSIMISTIC_FORCE_INCREMENT]: select coach0_.person_id as person_i1_3_0_, coach0_.lastname as lastname2_3_0_, coach0_.name as name3_3_0_, coach0_.team_id as team_id1_1_0_ from coaches coach0_ where coach0_.person_id=? for update
[TRACE]  Starting root entity : model.Coach
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@609640d5]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@79da1ec0
[TRACE] .. Registering AssociationKey : AssociationKey(table=coaches, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@79da1ec0
[TRACE] >> Starting entity identifier : model.Coach
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@19fb8826]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@79da1ec0
[TRACE]  Finished root entity : model.Coach
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Coach)
    - Returns
       - EntityReturnImpl(entity=model.Coach, querySpaceUid=<gen:0>, path=model.Coach)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Coach.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Coach)
          - SQL table alias mapping - coach0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Coach [OPTIMISTIC]: select coach0_.person_id as person_i1_3_0_, coach0_.lastname as lastname2_3_0_, coach0_.name as name3_3_0_, coach0_.team_id as team_id1_1_0_ from coaches coach0_ where coach0_.person_id=?
[TRACE]  Starting root entity : model.Coach
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@192d74fb]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4bef0fe3
[TRACE] .. Registering AssociationKey : AssociationKey(table=coaches, columns={person_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4bef0fe3
[TRACE] >> Starting entity identifier : model.Coach
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62ea3440]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4bef0fe3
[TRACE]  Finished root entity : model.Coach
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Coach)
    - Returns
       - EntityReturnImpl(entity=model.Coach, querySpaceUid=<gen:0>, path=model.Coach)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Coach.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Coach)
          - SQL table alias mapping - coach0_
          - alias suffix - 0_
          - suffixed key columns - {person_i1_3_0_}

[DEBUG] Static select for entity model.Coach [OPTIMISTIC_FORCE_INCREMENT]: select coach0_.person_id as person_i1_3_0_, coach0_.lastname as lastname2_3_0_, coach0_.name as name3_3_0_, coach0_.team_id as team_id1_1_0_ from coaches coach0_ where coach0_.person_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Coach: select coach0_.person_id as person_i1_3_0_, coach0_.lastname as lastname2_3_0_, coach0_.name as name3_3_0_, coach0_.team_id as team_id1_1_0_ from coaches coach0_ where coach0_.person_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Coach: select coach0_.person_id as person_i1_3_0_, coach0_.lastname as lastname2_3_0_, coach0_.name as name3_3_0_, coach0_.team_id as team_id1_1_0_ from coaches coach0_ where coach0_.person_id=?
[DEBUG] Static SQL for entity: model.Position
[DEBUG]  Version select: select position_id from positions where position_id =?
[DEBUG]  Snapshot select: select position_.position_id, position_.name as name2_5_ from positions position_ where position_.position_id=?
[DEBUG]  Insert 0: insert into positions (name, position_id) values (?, ?)
[DEBUG]  Update 0: update positions set name=? where position_id=?
[DEBUG]  Delete 0: delete from positions where position_id=?
[DEBUG]  Identity insert: insert into positions (name) values (?)
[TRACE]  Starting root entity : model.Position
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27953a83]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@556d0826
[TRACE] .. Registering AssociationKey : AssociationKey(table=positions, columns={position_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@556d0826
[TRACE] >> Starting entity identifier : model.Position
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@556d0826
[TRACE]  Finished root entity : model.Position
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Position)
    - Returns
       - EntityReturnImpl(entity=model.Position, querySpaceUid=<gen:0>, path=model.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_5_0_}

[DEBUG] Static select for entity model.Position [NONE]: select position0_.position_id as position1_5_0_, position0_.name as name2_5_0_ from positions position0_ where position0_.position_id=?
[TRACE]  Starting root entity : model.Position
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66ce957f]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@55b5f5d2
[TRACE] .. Registering AssociationKey : AssociationKey(table=positions, columns={position_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@55b5f5d2
[TRACE] >> Starting entity identifier : model.Position
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@55b5f5d2
[TRACE]  Finished root entity : model.Position
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Position)
    - Returns
       - EntityReturnImpl(entity=model.Position, querySpaceUid=<gen:0>, path=model.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_5_0_}

[DEBUG] Static select for entity model.Position [READ]: select position0_.position_id as position1_5_0_, position0_.name as name2_5_0_ from positions position0_ where position0_.position_id=?
[TRACE]  Starting root entity : model.Position
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5bfa8cc5]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@666b83a4
[TRACE] .. Registering AssociationKey : AssociationKey(table=positions, columns={position_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@666b83a4
[TRACE] >> Starting entity identifier : model.Position
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@666b83a4
[TRACE]  Finished root entity : model.Position
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Position)
    - Returns
       - EntityReturnImpl(entity=model.Position, querySpaceUid=<gen:0>, path=model.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_5_0_}

[DEBUG] Static select for entity model.Position [UPGRADE]: select position0_.position_id as position1_5_0_, position0_.name as name2_5_0_ from positions position0_ where position0_.position_id=? for update
[TRACE]  Starting root entity : model.Position
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@749c877b]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@efde75f
[TRACE] .. Registering AssociationKey : AssociationKey(table=positions, columns={position_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@efde75f
[TRACE] >> Starting entity identifier : model.Position
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@efde75f
[TRACE]  Finished root entity : model.Position
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Position)
    - Returns
       - EntityReturnImpl(entity=model.Position, querySpaceUid=<gen:0>, path=model.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_5_0_}

[DEBUG] Static select for entity model.Position [UPGRADE_NOWAIT]: select position0_.position_id as position1_5_0_, position0_.name as name2_5_0_ from positions position0_ where position0_.position_id=? for update
[TRACE]  Starting root entity : model.Position
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@16ecee1]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3b220bcb
[TRACE] .. Registering AssociationKey : AssociationKey(table=positions, columns={position_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3b220bcb
[TRACE] >> Starting entity identifier : model.Position
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3b220bcb
[TRACE]  Finished root entity : model.Position
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Position)
    - Returns
       - EntityReturnImpl(entity=model.Position, querySpaceUid=<gen:0>, path=model.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_5_0_}

[DEBUG] Static select for entity model.Position [UPGRADE_SKIPLOCKED]: select position0_.position_id as position1_5_0_, position0_.name as name2_5_0_ from positions position0_ where position0_.position_id=? for update
[TRACE]  Starting root entity : model.Position
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2b95e48b]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4a3329b9
[TRACE] .. Registering AssociationKey : AssociationKey(table=positions, columns={position_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4a3329b9
[TRACE] >> Starting entity identifier : model.Position
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4a3329b9
[TRACE]  Finished root entity : model.Position
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Position)
    - Returns
       - EntityReturnImpl(entity=model.Position, querySpaceUid=<gen:0>, path=model.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_5_0_}

[DEBUG] Static select for entity model.Position [FORCE]: select position0_.position_id as position1_5_0_, position0_.name as name2_5_0_ from positions position0_ where position0_.position_id=? for update
[TRACE]  Starting root entity : model.Position
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3dddefd8]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@160ac7fb
[TRACE] .. Registering AssociationKey : AssociationKey(table=positions, columns={position_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@160ac7fb
[TRACE] >> Starting entity identifier : model.Position
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@160ac7fb
[TRACE]  Finished root entity : model.Position
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Position)
    - Returns
       - EntityReturnImpl(entity=model.Position, querySpaceUid=<gen:0>, path=model.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_5_0_}

[DEBUG] Static select for entity model.Position [PESSIMISTIC_READ]: select position0_.position_id as position1_5_0_, position0_.name as name2_5_0_ from positions position0_ where position0_.position_id=? lock in share mode
[TRACE]  Starting root entity : model.Position
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12bfd80d]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@41925502
[TRACE] .. Registering AssociationKey : AssociationKey(table=positions, columns={position_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@41925502
[TRACE] >> Starting entity identifier : model.Position
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@41925502
[TRACE]  Finished root entity : model.Position
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Position)
    - Returns
       - EntityReturnImpl(entity=model.Position, querySpaceUid=<gen:0>, path=model.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_5_0_}

[DEBUG] Static select for entity model.Position [PESSIMISTIC_WRITE]: select position0_.position_id as position1_5_0_, position0_.name as name2_5_0_ from positions position0_ where position0_.position_id=? for update
[TRACE]  Starting root entity : model.Position
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13e3c1c7]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5316e95f
[TRACE] .. Registering AssociationKey : AssociationKey(table=positions, columns={position_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5316e95f
[TRACE] >> Starting entity identifier : model.Position
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5316e95f
[TRACE]  Finished root entity : model.Position
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Position)
    - Returns
       - EntityReturnImpl(entity=model.Position, querySpaceUid=<gen:0>, path=model.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_5_0_}

[DEBUG] Static select for entity model.Position [PESSIMISTIC_FORCE_INCREMENT]: select position0_.position_id as position1_5_0_, position0_.name as name2_5_0_ from positions position0_ where position0_.position_id=? for update
[TRACE]  Starting root entity : model.Position
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f053c80]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6c6c5427
[TRACE] .. Registering AssociationKey : AssociationKey(table=positions, columns={position_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6c6c5427
[TRACE] >> Starting entity identifier : model.Position
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6c6c5427
[TRACE]  Finished root entity : model.Position
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Position)
    - Returns
       - EntityReturnImpl(entity=model.Position, querySpaceUid=<gen:0>, path=model.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_5_0_}

[DEBUG] Static select for entity model.Position [OPTIMISTIC]: select position0_.position_id as position1_5_0_, position0_.name as name2_5_0_ from positions position0_ where position0_.position_id=?
[TRACE]  Starting root entity : model.Position
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@618c5d94]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5b40ceb
[TRACE] .. Registering AssociationKey : AssociationKey(table=positions, columns={position_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5b40ceb
[TRACE] >> Starting entity identifier : model.Position
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5b40ceb
[TRACE]  Finished root entity : model.Position
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Position)
    - Returns
       - EntityReturnImpl(entity=model.Position, querySpaceUid=<gen:0>, path=model.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {position1_5_0_}

[DEBUG] Static select for entity model.Position [OPTIMISTIC_FORCE_INCREMENT]: select position0_.position_id as position1_5_0_, position0_.name as name2_5_0_ from positions position0_ where position0_.position_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Position: select position0_.position_id as position1_5_0_, position0_.name as name2_5_0_ from positions position0_ where position0_.position_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Position: select position0_.position_id as position1_5_0_, position0_.name as name2_5_0_ from positions position0_ where position0_.position_id=?
[DEBUG] Static SQL for entity: model.StatisticType
[DEBUG]  Version select: select ststisticType_id from statisticsType where ststisticType_id =?
[DEBUG]  Snapshot select: select statistict_.ststisticType_id, statistict_.description as descript2_7_ from statisticsType statistict_ where statistict_.ststisticType_id=?
[DEBUG]  Insert 0: insert into statisticsType (description, ststisticType_id) values (?, ?)
[DEBUG]  Update 0: update statisticsType set description=? where ststisticType_id=?
[DEBUG]  Delete 0: delete from statisticsType where ststisticType_id=?
[DEBUG]  Identity insert: insert into statisticsType (description) values (?)
[TRACE]  Starting root entity : model.StatisticType
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@13c3c1e1]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1d8062d2
[TRACE] .. Registering AssociationKey : AssociationKey(table=statisticsType, columns={ststisticType_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1d8062d2
[TRACE] >> Starting entity identifier : model.StatisticType
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1d8062d2
[TRACE]  Finished root entity : model.StatisticType
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.StatisticType)
    - Returns
       - EntityReturnImpl(entity=model.StatisticType, querySpaceUid=<gen:0>, path=model.StatisticType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.StatisticType)
          - SQL table alias mapping - statistict0_
          - alias suffix - 0_
          - suffixed key columns - {ststisti1_7_0_}

[DEBUG] Static select for entity model.StatisticType [NONE]: select statistict0_.ststisticType_id as ststisti1_7_0_, statistict0_.description as descript2_7_0_ from statisticsType statistict0_ where statistict0_.ststisticType_id=?
[TRACE]  Starting root entity : model.StatisticType
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e63ec0b]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3b956878
[TRACE] .. Registering AssociationKey : AssociationKey(table=statisticsType, columns={ststisticType_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3b956878
[TRACE] >> Starting entity identifier : model.StatisticType
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3b956878
[TRACE]  Finished root entity : model.StatisticType
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.StatisticType)
    - Returns
       - EntityReturnImpl(entity=model.StatisticType, querySpaceUid=<gen:0>, path=model.StatisticType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.StatisticType)
          - SQL table alias mapping - statistict0_
          - alias suffix - 0_
          - suffixed key columns - {ststisti1_7_0_}

[DEBUG] Static select for entity model.StatisticType [READ]: select statistict0_.ststisticType_id as ststisti1_7_0_, statistict0_.description as descript2_7_0_ from statisticsType statistict0_ where statistict0_.ststisticType_id=?
[TRACE]  Starting root entity : model.StatisticType
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@36546a22]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@285c08c8
[TRACE] .. Registering AssociationKey : AssociationKey(table=statisticsType, columns={ststisticType_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@285c08c8
[TRACE] >> Starting entity identifier : model.StatisticType
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@285c08c8
[TRACE]  Finished root entity : model.StatisticType
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.StatisticType)
    - Returns
       - EntityReturnImpl(entity=model.StatisticType, querySpaceUid=<gen:0>, path=model.StatisticType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.StatisticType)
          - SQL table alias mapping - statistict0_
          - alias suffix - 0_
          - suffixed key columns - {ststisti1_7_0_}

[DEBUG] Static select for entity model.StatisticType [UPGRADE]: select statistict0_.ststisticType_id as ststisti1_7_0_, statistict0_.description as descript2_7_0_ from statisticsType statistict0_ where statistict0_.ststisticType_id=? for update
[TRACE]  Starting root entity : model.StatisticType
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@295eaa7c]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3918c187
[TRACE] .. Registering AssociationKey : AssociationKey(table=statisticsType, columns={ststisticType_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3918c187
[TRACE] >> Starting entity identifier : model.StatisticType
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3918c187
[TRACE]  Finished root entity : model.StatisticType
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.StatisticType)
    - Returns
       - EntityReturnImpl(entity=model.StatisticType, querySpaceUid=<gen:0>, path=model.StatisticType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.StatisticType)
          - SQL table alias mapping - statistict0_
          - alias suffix - 0_
          - suffixed key columns - {ststisti1_7_0_}

[DEBUG] Static select for entity model.StatisticType [UPGRADE_NOWAIT]: select statistict0_.ststisticType_id as ststisti1_7_0_, statistict0_.description as descript2_7_0_ from statisticsType statistict0_ where statistict0_.ststisticType_id=? for update
[TRACE]  Starting root entity : model.StatisticType
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c88b9fc]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@64dafeed
[TRACE] .. Registering AssociationKey : AssociationKey(table=statisticsType, columns={ststisticType_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@64dafeed
[TRACE] >> Starting entity identifier : model.StatisticType
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@64dafeed
[TRACE]  Finished root entity : model.StatisticType
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.StatisticType)
    - Returns
       - EntityReturnImpl(entity=model.StatisticType, querySpaceUid=<gen:0>, path=model.StatisticType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.StatisticType)
          - SQL table alias mapping - statistict0_
          - alias suffix - 0_
          - suffixed key columns - {ststisti1_7_0_}

[DEBUG] Static select for entity model.StatisticType [UPGRADE_SKIPLOCKED]: select statistict0_.ststisticType_id as ststisti1_7_0_, statistict0_.description as descript2_7_0_ from statisticsType statistict0_ where statistict0_.ststisticType_id=? for update
[TRACE]  Starting root entity : model.StatisticType
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@388ba540]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@47605f2f
[TRACE] .. Registering AssociationKey : AssociationKey(table=statisticsType, columns={ststisticType_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@47605f2f
[TRACE] >> Starting entity identifier : model.StatisticType
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@47605f2f
[TRACE]  Finished root entity : model.StatisticType
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.StatisticType)
    - Returns
       - EntityReturnImpl(entity=model.StatisticType, querySpaceUid=<gen:0>, path=model.StatisticType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.StatisticType)
          - SQL table alias mapping - statistict0_
          - alias suffix - 0_
          - suffixed key columns - {ststisti1_7_0_}

[DEBUG] Static select for entity model.StatisticType [FORCE]: select statistict0_.ststisticType_id as ststisti1_7_0_, statistict0_.description as descript2_7_0_ from statisticsType statistict0_ where statistict0_.ststisticType_id=? for update
[TRACE]  Starting root entity : model.StatisticType
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ece4966]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1dd0e7c4
[TRACE] .. Registering AssociationKey : AssociationKey(table=statisticsType, columns={ststisticType_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1dd0e7c4
[TRACE] >> Starting entity identifier : model.StatisticType
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1dd0e7c4
[TRACE]  Finished root entity : model.StatisticType
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.StatisticType)
    - Returns
       - EntityReturnImpl(entity=model.StatisticType, querySpaceUid=<gen:0>, path=model.StatisticType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.StatisticType)
          - SQL table alias mapping - statistict0_
          - alias suffix - 0_
          - suffixed key columns - {ststisti1_7_0_}

[DEBUG] Static select for entity model.StatisticType [PESSIMISTIC_READ]: select statistict0_.ststisticType_id as ststisti1_7_0_, statistict0_.description as descript2_7_0_ from statisticsType statistict0_ where statistict0_.ststisticType_id=? lock in share mode
[TRACE]  Starting root entity : model.StatisticType
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7894f09b]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3d484181
[TRACE] .. Registering AssociationKey : AssociationKey(table=statisticsType, columns={ststisticType_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3d484181
[TRACE] >> Starting entity identifier : model.StatisticType
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3d484181
[TRACE]  Finished root entity : model.StatisticType
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.StatisticType)
    - Returns
       - EntityReturnImpl(entity=model.StatisticType, querySpaceUid=<gen:0>, path=model.StatisticType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.StatisticType)
          - SQL table alias mapping - statistict0_
          - alias suffix - 0_
          - suffixed key columns - {ststisti1_7_0_}

[DEBUG] Static select for entity model.StatisticType [PESSIMISTIC_WRITE]: select statistict0_.ststisticType_id as ststisti1_7_0_, statistict0_.description as descript2_7_0_ from statisticsType statistict0_ where statistict0_.ststisticType_id=? for update
[TRACE]  Starting root entity : model.StatisticType
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6111ba37]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7be58f16
[TRACE] .. Registering AssociationKey : AssociationKey(table=statisticsType, columns={ststisticType_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7be58f16
[TRACE] >> Starting entity identifier : model.StatisticType
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7be58f16
[TRACE]  Finished root entity : model.StatisticType
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.StatisticType)
    - Returns
       - EntityReturnImpl(entity=model.StatisticType, querySpaceUid=<gen:0>, path=model.StatisticType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.StatisticType)
          - SQL table alias mapping - statistict0_
          - alias suffix - 0_
          - suffixed key columns - {ststisti1_7_0_}

[DEBUG] Static select for entity model.StatisticType [PESSIMISTIC_FORCE_INCREMENT]: select statistict0_.ststisticType_id as ststisti1_7_0_, statistict0_.description as descript2_7_0_ from statisticsType statistict0_ where statistict0_.ststisticType_id=? for update
[TRACE]  Starting root entity : model.StatisticType
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@242aa8d9]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5b11a194
[TRACE] .. Registering AssociationKey : AssociationKey(table=statisticsType, columns={ststisticType_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5b11a194
[TRACE] >> Starting entity identifier : model.StatisticType
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5b11a194
[TRACE]  Finished root entity : model.StatisticType
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.StatisticType)
    - Returns
       - EntityReturnImpl(entity=model.StatisticType, querySpaceUid=<gen:0>, path=model.StatisticType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.StatisticType)
          - SQL table alias mapping - statistict0_
          - alias suffix - 0_
          - suffixed key columns - {ststisti1_7_0_}

[DEBUG] Static select for entity model.StatisticType [OPTIMISTIC]: select statistict0_.ststisticType_id as ststisti1_7_0_, statistict0_.description as descript2_7_0_ from statisticsType statistict0_ where statistict0_.ststisticType_id=?
[TRACE]  Starting root entity : model.StatisticType
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37bd68c3]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@60f7cc1d
[TRACE] .. Registering AssociationKey : AssociationKey(table=statisticsType, columns={ststisticType_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@60f7cc1d
[TRACE] >> Starting entity identifier : model.StatisticType
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@60f7cc1d
[TRACE]  Finished root entity : model.StatisticType
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.StatisticType)
    - Returns
       - EntityReturnImpl(entity=model.StatisticType, querySpaceUid=<gen:0>, path=model.StatisticType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.StatisticType)
          - SQL table alias mapping - statistict0_
          - alias suffix - 0_
          - suffixed key columns - {ststisti1_7_0_}

[DEBUG] Static select for entity model.StatisticType [OPTIMISTIC_FORCE_INCREMENT]: select statistict0_.ststisticType_id as ststisti1_7_0_, statistict0_.description as descript2_7_0_ from statisticsType statistict0_ where statistict0_.ststisticType_id=?
[DEBUG] Static select for action ACTION_MERGE on entity model.StatisticType: select statistict0_.ststisticType_id as ststisti1_7_0_, statistict0_.description as descript2_7_0_ from statisticsType statistict0_ where statistict0_.ststisticType_id=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.StatisticType: select statistict0_.ststisticType_id as ststisti1_7_0_, statistict0_.description as descript2_7_0_ from statisticsType statistict0_ where statistict0_.ststisticType_id=?
[TRACE]  Starting root collection : model.Match.statistics
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1e1d3956]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4f2c9ba6]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@4e28bdd1
[TRACE]  Registering AssociationKey : AssociationKey(table=statistics, columns={match_id}) -> null
[TRACE]  Starting collection element graph : model.Match.statistics
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@73db4768
[TRACE] >> Starting entity identifier : model.Statistic
[DEBUG] Visiting attribute path : match
[DEBUG] Property path deemed to be circular : match
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71b3bc45]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@a8c1f44
[TRACE] .... Registering AssociationKey : AssociationKey(table=statistics, columns={statisticType_id}) -> org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@a8c1f44
[TRACE] >>>> Starting entity identifier : model.StatisticType
[DEBUG] Visiting attribute path : type.description
[TRACE] >>>> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] <<<< Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityAttributeFetchImpl@a8c1f44
[TRACE] << Finishing up attribute : Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Visiting attribute path : value
[TRACE] >> Starting attribute Attribute(name=value, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=value, type=integer [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@73db4768
[TRACE]  Finished collection element graph : model.Match.statistics
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@4e28bdd1
[TRACE]  Finished root collection : model.Match.statistics
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model.Match.statistics)
    - Returns
       - CollectionReturnImpl(collection=model.Match.statistics, querySpaceUid=<gen:0>, path=[model.Match.statistics])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model.Statistic, querySpaceUid=<gen:1>, path=[model.Match.statistics].<elements>)
             - EntityAttributeFetchImpl(entity=model.StatisticType, querySpaceUid=<gen:2>, path=[model.Match.statistics].<elements>.type)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model.Match.statistics)
          - SQL table alias mapping - statistics0_
          - alias suffix - 0_
          - suffixed key columns - {match_id3_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - statisti1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model.Statistic)
                - SQL table alias mapping - statistics0_
                - alias suffix - 1_
                - suffixed key columns - {statisti1_6_1_}
                - JOIN (JoinDefinedByMetadata(type)) : <gen:1> -> <gen:2>
                   - EntityQuerySpaceImpl(uid=<gen:2>, entity=model.StatisticType)
                      - SQL table alias mapping - statistict1_
                      - alias suffix - 2_
                      - suffixed key columns - {ststisti1_7_2_}

[DEBUG] Static select for collection model.Match.statistics: select statistics0_.match_id as match_id3_6_0_, statistics0_.statistic_id as statisti1_6_0_, statistics0_.statistic_id as statisti1_6_1_, statistics0_.match_id as match_id3_6_1_, statistics0_.statisticType_id as statisti4_6_1_, statistics0_.value as value2_6_1_, statistict1_.ststisticType_id as ststisti1_7_2_, statistict1_.description as descript2_7_2_ from statistics statistics0_ left outer join statisticsType statistict1_ on statistics0_.statisticType_id=statistict1_.ststisticType_id where statistics0_.match_id=?
[TRACE]  Starting root collection : model.Team.players
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5ad10c1a]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bb75258]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@c260bdc
[TRACE]  Registering AssociationKey : AssociationKey(table=players, columns={team_id}) -> null
[TRACE]  Starting collection element graph : model.Team.players
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@75e01201
[TRACE] >> Starting entity identifier : model.Player
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2783717b]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Visiting attribute path : team
[DEBUG] Property path deemed to be circular : team
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@75e01201
[TRACE]  Finished collection element graph : model.Team.players
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@c260bdc
[TRACE]  Finished root collection : model.Team.players
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model.Team.players)
    - Returns
       - CollectionReturnImpl(collection=model.Team.players, querySpaceUid=<gen:0>, path=[model.Team.players])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:1>, path=[model.Team.players].<elements>)
             - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:2>, path=[model.Team.players].<elements>.position)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model.Team.players)
          - SQL table alias mapping - players0_
          - alias suffix - 0_
          - suffixed key columns - {team_id2_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - person_i1_3_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model.Player)
                - SQL table alias mapping - players0_
                - alias suffix - 1_
                - suffixed key columns - {person_i1_3_1_}

[DEBUG] Static select for collection model.Team.players: select players0_.team_id as team_id2_4_0_, players0_.person_id as person_i1_4_0_, players0_.person_id as person_i1_3_1_, players0_.lastname as lastname2_3_1_, players0_.name as name3_3_1_, players0_.position_id as position1_4_1_, players0_.team_id as team_id2_4_1_ from players players0_ where players0_.team_id=?
[TRACE] Wrapping up metadata context...
[TRACE] Starting entity [model.Arena]
[TRACE] Building identifier attribute [model.Arena.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [private int model.Arena.id]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [model.Arena.address]
[TRACE] Starting attribute metadata determination [address]
[TRACE]     Determined member [private java.lang.String model.Arena.address]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [model.Arena.name]
[TRACE] Starting attribute metadata determination [name]
[TRACE]     Determined member [private java.lang.String model.Arena.name]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Completed entity [model.Arena]
[TRACE] Starting entity [model.Match]
[TRACE] Building identifier attribute [model.Match.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [private int model.Match.id]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [model.Match.date]
[TRACE] Starting attribute metadata determination [date]
[TRACE]     Determined member [private java.util.GregorianCalendar model.Match.date]
[TRACE]     Determined type [name=calendar, class=org.hibernate.type.CalendarType]
[TRACE] Building attribute [model.Match.guests]
[TRACE] Starting attribute metadata determination [guests]
[TRACE]     Determined member [private model.Team model.Match.guests]
[TRACE]     Determined type [name=model.Team, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [model.Match.statistics]
[TRACE] Starting attribute metadata determination [statistics]
[TRACE]     Determined member [private java.util.Set model.Match.statistics]
[TRACE]     Determined type [name=java.util.Set(model.Match.statistics), class=org.hibernate.type.SetType]
[TRACE] Building attribute [model.Match.host]
[TRACE] Starting attribute metadata determination [host]
[TRACE]     Determined member [private model.Team model.Match.host]
[TRACE]     Determined type [name=model.Team, class=org.hibernate.type.OneToOneType]
[TRACE] Completed entity [model.Match]
[TRACE] Starting entity [model.Team]
[TRACE] Building identifier attribute [model.Team.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [private int model.Team.id]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [model.Team.coach]
[TRACE] Starting attribute metadata determination [coach]
[TRACE]     Determined member [private model.Coach model.Team.coach]
[TRACE]     Determined type [name=model.Coach, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [model.Team.name]
[TRACE] Starting attribute metadata determination [name]
[TRACE]     Determined member [private java.lang.String model.Team.name]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [model.Team.players]
[TRACE] Starting attribute metadata determination [players]
[TRACE]     Determined member [private java.util.Set model.Team.players]
[TRACE]     Determined type [name=java.util.Set(model.Team.players), class=org.hibernate.type.SetType]
[TRACE] Completed entity [model.Team]
[TRACE] Starting entity [model.Statistic]
[TRACE] Building identifier attribute [model.Statistic.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [private int model.Statistic.id]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [model.Statistic.match]
[TRACE] Starting attribute metadata determination [match]
[TRACE]     Determined member [private model.Match model.Statistic.match]
[TRACE]     Determined type [name=model.Match, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [model.Statistic.type]
[TRACE] Starting attribute metadata determination [type]
[TRACE]     Determined member [private model.StatisticType model.Statistic.type]
[TRACE]     Determined type [name=model.StatisticType, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [model.Statistic.value]
[TRACE] Starting attribute metadata determination [value]
[TRACE]     Determined member [private int model.Statistic.value]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Completed entity [model.Statistic]
[TRACE] Starting entity [model.Person]
[TRACE] Building identifier attribute [model.Person.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [int model.Person.id]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [model.Person.lastname]
[TRACE] Starting attribute metadata determination [lastname]
[TRACE]     Determined member [private java.lang.String model.Person.lastname]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [model.Person.name]
[TRACE] Starting attribute metadata determination [name]
[TRACE]     Determined member [private java.lang.String model.Person.name]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Completed entity [model.Person]
[TRACE] Starting entity [model.Player]
[TRACE] Building attribute [model.Player.position]
[TRACE] Starting attribute metadata determination [position]
[TRACE]     Determined member [private model.Position model.Player.position]
[TRACE]     Determined type [name=model.Position, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [model.Player.team]
[TRACE] Starting attribute metadata determination [team]
[TRACE]     Determined member [private model.Team model.Player.team]
[TRACE]     Determined type [name=model.Team, class=org.hibernate.type.ManyToOneType]
[TRACE] Completed entity [model.Player]
[TRACE] Starting entity [model.Coach]
[TRACE] Building attribute [model.Coach.team]
[TRACE] Starting attribute metadata determination [team]
[TRACE]     Determined member [private model.Team model.Coach.team]
[TRACE]     Determined type [name=model.Team, class=org.hibernate.type.ManyToOneType]
[TRACE] Completed entity [model.Coach]
[TRACE] Starting entity [model.Position]
[TRACE] Building identifier attribute [model.Position.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [private int model.Position.id]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [model.Position.name]
[TRACE] Starting attribute metadata determination [name]
[TRACE]     Determined member [private java.lang.String model.Position.name]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Completed entity [model.Position]
[TRACE] Starting entity [model.StatisticType]
[TRACE] Building identifier attribute [model.StatisticType.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [private int model.StatisticType.id]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [model.StatisticType.description]
[TRACE] Starting attribute metadata determination [description]
[TRACE]     Determined member [private java.lang.String model.StatisticType.description]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Completed entity [model.StatisticType]
[TRACE] Normalizing identifier quoting [HT_players]
[TRACE] Normalizing identifier quoting [HT_persons]
[TRACE] Normalizing identifier quoting [HT_coaches]
[TRACE] Initializing service [role=org.hibernate.tool.schema.spi.SchemaManagementTool]
[TRACE] Initializing service [role=org.hibernate.tool.hbm2ddl.ImportSqlCommandExtractor]
[INFO ] HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@675d8c96] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[WARN ] GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:374)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:138)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:66)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:493)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:710)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:726)
	at hiberApp.HiberUtil.getANNSessionFactory(HiberUtil.java:87)
	at hiberApp.HiberUtil.getSessionFactory(HiberUtil.java:43)
	at hiberApp.MainApp.<clinit>(MainApp.java:32)
Caused by: java.sql.SQLException: Error on rename of '.\ior\coaches' to '.\ior\#sql2-26a4-bf' (errno: 152)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2788)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2738)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:899)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:737)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:909)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 16 more
[WARN ] GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:374)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:138)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:66)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:493)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:710)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:726)
	at hiberApp.HiberUtil.getANNSessionFactory(HiberUtil.java:87)
	at hiberApp.HiberUtil.getSessionFactory(HiberUtil.java:43)
	at hiberApp.MainApp.<clinit>(MainApp.java:32)
Caused by: java.sql.SQLException: Error on rename of '.\ior\matches' to '.\ior\#sql2-26a4-bf' (errno: 152)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2788)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2738)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:899)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:737)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:909)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 16 more
[WARN ] GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:374)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:138)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:66)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:493)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:710)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:726)
	at hiberApp.HiberUtil.getANNSessionFactory(HiberUtil.java:87)
	at hiberApp.HiberUtil.getSessionFactory(HiberUtil.java:43)
	at hiberApp.MainApp.<clinit>(MainApp.java:32)
Caused by: java.sql.SQLException: Error on rename of '.\ior\players' to '.\ior\#sql2-26a4-bf' (errno: 152)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2788)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2738)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:899)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:737)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:909)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 16 more
[WARN ] GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:374)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:138)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:66)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:493)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:710)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:726)
	at hiberApp.HiberUtil.getANNSessionFactory(HiberUtil.java:87)
	at hiberApp.HiberUtil.getSessionFactory(HiberUtil.java:43)
	at hiberApp.MainApp.<clinit>(MainApp.java:32)
Caused by: java.sql.SQLException: Error on rename of '.\ior\players' to '.\ior\#sql2-26a4-bf' (errno: 152)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2788)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2738)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:899)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:737)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:909)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 16 more
[WARN ] GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:374)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:138)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:66)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:493)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:710)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:726)
	at hiberApp.HiberUtil.getANNSessionFactory(HiberUtil.java:87)
	at hiberApp.HiberUtil.getSessionFactory(HiberUtil.java:43)
	at hiberApp.MainApp.<clinit>(MainApp.java:32)
Caused by: java.sql.SQLException: Error on rename of '.\ior\statistics' to '.\ior\#sql2-26a4-bf' (errno: 152)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2788)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2738)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:899)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:737)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:909)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 16 more
[WARN ] GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:374)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:138)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:66)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:493)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:710)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:726)
	at hiberApp.HiberUtil.getANNSessionFactory(HiberUtil.java:87)
	at hiberApp.HiberUtil.getSessionFactory(HiberUtil.java:43)
	at hiberApp.MainApp.<clinit>(MainApp.java:32)
Caused by: java.sql.SQLException: Error on rename of '.\ior\statistics' to '.\ior\#sql2-26a4-bf' (errno: 152)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2788)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2738)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:899)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:737)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:909)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 16 more
[WARN ] GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:374)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:241)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:138)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:66)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:493)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:710)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:726)
	at hiberApp.HiberUtil.getANNSessionFactory(HiberUtil.java:87)
	at hiberApp.HiberUtil.getSessionFactory(HiberUtil.java:43)
	at hiberApp.MainApp.<clinit>(MainApp.java:32)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1040)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2788)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2738)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:899)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:737)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:909)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 15 more
[INFO ] HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@4fe89c24] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[WARN ] GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:439)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:315)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:149)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:66)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:493)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:710)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:726)
	at hiberApp.HiberUtil.getANNSessionFactory(HiberUtil.java:87)
	at hiberApp.HiberUtil.getSessionFactory(HiberUtil.java:43)
	at hiberApp.MainApp.<clinit>(MainApp.java:32)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'matches' already exists
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2788)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2738)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:899)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:737)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:909)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 15 more
[WARN ] GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:439)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:149)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:66)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:493)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:710)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:726)
	at hiberApp.HiberUtil.getANNSessionFactory(HiberUtil.java:87)
	at hiberApp.HiberUtil.getSessionFactory(HiberUtil.java:43)
	at hiberApp.MainApp.<clinit>(MainApp.java:32)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot add or update a child row: a foreign key constraint fails ("ior"."#sql-26a4_bf", CONSTRAINT "FK_guests" FOREIGN KEY ("match_id") REFERENCES "teams" ("team_id"))
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1040)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2788)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2738)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:899)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:737)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:909)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 15 more
[WARN ] GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:439)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:149)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:66)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:493)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:710)
	at org.hibernate.cfg.Configuration.buildSessionFactory(Configuration.java:726)
	at hiberApp.HiberUtil.getANNSessionFactory(HiberUtil.java:87)
	at hiberApp.HiberUtil.getSessionFactory(HiberUtil.java:43)
	at hiberApp.MainApp.<clinit>(MainApp.java:32)
Caused by: java.sql.SQLException: Can't create table 'ior.#sql-26a4_bf' (errno: 121)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2788)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2738)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:899)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:737)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:909)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 15 more
[INFO ] HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@5ac86ba5'
[DEBUG] Checking 0 named HQL queries
[DEBUG] Checking 0 named SQL queries
[DEBUG] Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@60d8c0dc
[TRACE] Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
[DEBUG] Registering SessionFactory: f3371f96-7626-466b-81ff-cbef79cbaef3 (<unnamed>)
[DEBUG] Not binding SessionFactory to JNDI, no JNDI name configured
[TRACE] Opening Hibernate Session.  tenant=null, owner=null
[TRACE] Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
[DEBUG] Statistics initialized [enabled=false]
[TRACE] Opened Session [4347061c-30a7-464d-9bb1-924a4de4f873] at timestamp: 15271042504
[DEBUG] begin
[TRACE] Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
[TRACE] Transaction begun via JDBC Connection.setAutoCommit(false)
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
[TRACE] Saving transient instance
[TRACE] Saving [model.Position#<null>]
[TRACE] Adding an EntityIdentityInsertAction for [model.Position] object
[TRACE] Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Position#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Position#<null>]]
[TRACE] Executing insertions beforeQuery resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Position (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@24a1c17f]
[TRACE] Dehydrating entity: [model.Position#<null>]
[DEBUG] Natively generated identity: 1
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@617fe9e1]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@617fe9e1]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@24a1c17f]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@24a1c17f]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Saving transient instance
[TRACE] Saving [model.Position#<null>]
[TRACE] Adding an EntityIdentityInsertAction for [model.Position] object
[TRACE] Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Position#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Position#<null>]]
[TRACE] Executing insertions beforeQuery resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Position (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@5aceec94]
[TRACE] Dehydrating entity: [model.Position#<null>]
[DEBUG] Natively generated identity: 2
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@10b892d5]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@10b892d5]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@5aceec94]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@5aceec94]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Saving transient instance
[TRACE] Saving [model.Position#<null>]
[TRACE] Adding an EntityIdentityInsertAction for [model.Position] object
[TRACE] Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Position#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Position#<null>]]
[TRACE] Executing insertions beforeQuery resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Position (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@579d011c]
[TRACE] Dehydrating entity: [model.Position#<null>]
[DEBUG] Natively generated identity: 3
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@46ab18da]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@46ab18da]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@579d011c]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@579d011c]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Saving transient instance
[TRACE] Saving [model.Position#<null>]
[TRACE] Adding an EntityIdentityInsertAction for [model.Position] object
[TRACE] Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Position#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Position#<null>]]
[TRACE] Executing insertions beforeQuery resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Position (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@7689ddef]
[TRACE] Dehydrating entity: [model.Position#<null>]
[DEBUG] Natively generated identity: 4
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@733c423e]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@733c423e]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@7689ddef]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@7689ddef]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[DEBUG] committing
[TRACE] ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
[TRACE] SessionImpl#beforeTransactionCompletion()
[TRACE] Automatically flushing session
[TRACE] Flushing session
[DEBUG] Processing flush-time cascades
[DEBUG] Dirty checking collections
[TRACE] Flushing entities and processing referenced collections
[TRACE] Processing unreferenced collections
[TRACE] Scheduling collection removes/(re)creates/updates
[DEBUG] Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[DEBUG] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] Listing entities:
[DEBUG] model.Position{name=pomocnik, id=3}
[DEBUG] model.Position{name=napastnik, id=4}
[DEBUG] model.Position{name=bramkarz, id=1}
[DEBUG] model.Position{name=obrońca, id=2}
[TRACE] Executing flush
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Post flush
[TRACE] SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
[TRACE] Preparing to commit transaction via JDBC Connection.commit()
[TRACE] Transaction committed via JDBC Connection.commit()
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] Releasing JDBC resources
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
[TRACE] SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
[TRACE] Closing session [4347061c-30a7-464d-9bb1-924a4de4f873]
[TRACE] Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@127e70c5]
[TRACE] Releasing JDBC resources
[TRACE] Closing logical connection
[TRACE] Logical connection closed
[TRACE] Opening Hibernate Session.  tenant=null, owner=null
[TRACE] Opened Session [fd069172-6ffb-489e-a1ea-5a404243ef8d] at timestamp: 15271042505
[DEBUG] begin
[TRACE] Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
[TRACE] Transaction begun via JDBC Connection.setAutoCommit(false)
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
[TRACE] Saving transient instance
[DEBUG] Generated identifier: 1, using strategy: org.hibernate.id.enhanced.TableGenerator
[TRACE] Saving [model.Coach#1]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Coach
[TRACE] Cascading to save or update: model.Team
[TRACE] ID unsaved-value: 0
[TRACE] Transient instance of: model.Team
[TRACE] Saving transient instance
[TRACE] Saving [model.Team#<null>]
[TRACE] Wrapped collection in role: model.Team.players
[TRACE] Adding an EntityIdentityInsertAction for [model.Team] object
[TRACE] Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Team#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Team#<null>]]
[TRACE] Executing insertions beforeQuery resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Team (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@37fbe4a8]
[TRACE] Dehydrating entity: [model.Team#<null>]
[DEBUG] Natively generated identity: 1
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@10027fc9]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@10027fc9]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@37fbe4a8]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@37fbe4a8]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Coach
[TRACE] Adding an EntityInsertAction for [model.Coach] object
[TRACE] Adding insert with no non-nullable, transient entities: [EntityInsertAction[model.Coach#1]]
[TRACE] Adding resolved non-early insert action.
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Coach
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Coach
[TRACE] Saving transient instance
[DEBUG] Generated identifier: 2, using strategy: org.hibernate.id.enhanced.TableGenerator
[TRACE] Saving [model.Player#2]
[TRACE] Adding an EntityInsertAction for [model.Player] object
[TRACE] Adding insert with no non-nullable, transient entities: [EntityInsertAction[model.Player#2]]
[TRACE] Adding resolved non-early insert action.
[TRACE] ID unsaved-value: 0
[TRACE] Saving transient instance
[DEBUG] Generated identifier: 3, using strategy: org.hibernate.id.enhanced.TableGenerator
[TRACE] Saving [model.Player#3]
[TRACE] Adding an EntityInsertAction for [model.Player] object
[TRACE] Adding insert with no non-nullable, transient entities: [EntityInsertAction[model.Player#3]]
[TRACE] Adding resolved non-early insert action.
[TRACE] ID unsaved-value: 0
[TRACE] Saving transient instance
[DEBUG] Generated identifier: 4, using strategy: org.hibernate.id.enhanced.TableGenerator
[TRACE] Saving [model.Player#4]
[TRACE] Adding an EntityInsertAction for [model.Player] object
[TRACE] Adding insert with no non-nullable, transient entities: [EntityInsertAction[model.Player#4]]
[TRACE] Adding resolved non-early insert action.
[TRACE] ID unsaved-value: 0
[TRACE] Saving transient instance
[DEBUG] Generated identifier: 5, using strategy: org.hibernate.id.enhanced.TableGenerator
[TRACE] Saving [model.Player#5]
[TRACE] Adding an EntityInsertAction for [model.Player] object
[TRACE] Adding insert with no non-nullable, transient entities: [EntityInsertAction[model.Player#5]]
[TRACE] Adding resolved non-early insert action.
[TRACE] ID unsaved-value: 0
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Team#1]
[DEBUG] committing
[TRACE] ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
[TRACE] SessionImpl#beforeTransactionCompletion()
[TRACE] Automatically flushing session
[TRACE] Flushing session
[DEBUG] Processing flush-time cascades
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Coach
[TRACE] Cascading to save or update: model.Team
[TRACE] Persistent instance of: model.Team
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Team#1]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Coach
[DEBUG] Dirty checking collections
[TRACE] Flushing entities and processing referenced collections
[TRACE] model.Team.coach is dirty
[TRACE] Found dirty properties [[model.Team#1]] : [Ljava.lang.String;@2ca65ce4
[TRACE] Updating entity: [model.Team#1]
[DEBUG] Collection found: [model.Team.players#1], was: [<unreferenced>] (initialized)
[TRACE] Processing unreferenced collections
[TRACE] Scheduling collection removes/(re)creates/updates
[DEBUG] Flushed: 5 insertions, 1 updates, 0 deletions to 6 objects
[DEBUG] Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] Listing entities:
[DEBUG] model.Player{name=Szymon, id=4, position=model.Position#2, team=model.Team#1, lastname=Paskuda}
[DEBUG] model.Player{name=Szymon, id=3, position=model.Position#3, team=model.Team#1, lastname=Maślanka}
[DEBUG] model.Team{players=[model.Player#3, model.Player#2, model.Player#5], name=LKS Baterex Nędza, id=1, coach=model.Coach#1}
[DEBUG] model.Player{name=Mateusz, id=2, position=model.Position#1, team=model.Team#1, lastname=Skwirut}
[DEBUG] model.Coach{name=Marek, id=1, team=model.Team#1, lastname=Henzel}
[DEBUG] model.Player{name=Denis, id=5, position=model.Position#4, team=model.Team#1, lastname=Sobik}
[TRACE] Executing flush
[TRACE] Inserting entity: [model.Coach#1]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.batch.spi.BatchBuilder]
[TRACE] Initializing service [role=org.hibernate.jmx.spi.JmxService]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6b9267b]
[TRACE] Dehydrating entity: [model.Coach#1]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6b9267b]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6b9267b]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Inserting entity: [model.Player#2]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@15bcf458]
[TRACE] Dehydrating entity: [model.Player#2]
[TRACE] ID unsaved-value: 0
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@15bcf458]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@15bcf458]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Inserting entity: [model.Player#3]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@43c67247]
[TRACE] Dehydrating entity: [model.Player#3]
[TRACE] ID unsaved-value: 0
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@43c67247]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@43c67247]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Inserting entity: [model.Player#4]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@726386ed]
[TRACE] Dehydrating entity: [model.Player#4]
[TRACE] ID unsaved-value: 0
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@726386ed]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@726386ed]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Inserting entity: [model.Player#5]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@14bb2297]
[TRACE] Dehydrating entity: [model.Player#5]
[TRACE] ID unsaved-value: 0
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@14bb2297]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@14bb2297]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Updating entity: [model.Team#1]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1a15b789]
[TRACE] Dehydrating entity: [model.Team#1]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1a15b789]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1a15b789]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Post flush
[TRACE] SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
[TRACE] Preparing to commit transaction via JDBC Connection.commit()
[TRACE] Transaction committed via JDBC Connection.commit()
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] Releasing JDBC resources
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
[TRACE] SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
[TRACE] Closing session [fd069172-6ffb-489e-a1ea-5a404243ef8d]
[TRACE] Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@6c4f9535]
[DEBUG] HHH000420: Closing un-released batch
[TRACE] Releasing JDBC resources
[TRACE] Closing logical connection
[TRACE] Logical connection closed
[TRACE] Opening Hibernate Session.  tenant=null, owner=null
[TRACE] Opened Session [a1aeb8d3-8102-45e9-a732-47a2a6944372] at timestamp: 15271042508
[DEBUG] begin
[TRACE] Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
[TRACE] Transaction begun via JDBC Connection.setAutoCommit(false)
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
[TRACE] Saving transient instance
[DEBUG] Generated identifier: 6, using strategy: org.hibernate.id.enhanced.TableGenerator
[TRACE] Saving [model.Coach#6]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Coach
[TRACE] Cascading to save or update: model.Team
[TRACE] ID unsaved-value: 0
[TRACE] Transient instance of: model.Team
[TRACE] Saving transient instance
[TRACE] Saving [model.Team#<null>]
[TRACE] Wrapped collection in role: model.Team.players
[TRACE] Adding an EntityIdentityInsertAction for [model.Team] object
[TRACE] Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Team#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Team#<null>]]
[TRACE] Executing insertions beforeQuery resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Team (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@66238be2]
[TRACE] Dehydrating entity: [model.Team#<null>]
[DEBUG] Natively generated identity: 2
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@750fe12e]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@750fe12e]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@66238be2]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@66238be2]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Coach
[TRACE] Adding an EntityInsertAction for [model.Coach] object
[TRACE] Adding insert with no non-nullable, transient entities: [EntityInsertAction[model.Coach#6]]
[TRACE] Adding resolved non-early insert action.
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Coach
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Coach
[TRACE] Saving transient instance
[DEBUG] Generated identifier: 7, using strategy: org.hibernate.id.enhanced.TableGenerator
[TRACE] Saving [model.Player#7]
[TRACE] Adding an EntityInsertAction for [model.Player] object
[TRACE] Adding insert with no non-nullable, transient entities: [EntityInsertAction[model.Player#7]]
[TRACE] Adding resolved non-early insert action.
[TRACE] ID unsaved-value: 0
[TRACE] Saving transient instance
[DEBUG] Generated identifier: 8, using strategy: org.hibernate.id.enhanced.TableGenerator
[TRACE] Saving [model.Player#8]
[TRACE] Adding an EntityInsertAction for [model.Player] object
[TRACE] Adding insert with no non-nullable, transient entities: [EntityInsertAction[model.Player#8]]
[TRACE] Adding resolved non-early insert action.
[TRACE] ID unsaved-value: 0
[TRACE] Saving transient instance
[DEBUG] Generated identifier: 9, using strategy: org.hibernate.id.enhanced.TableGenerator
[TRACE] Saving [model.Player#9]
[TRACE] Adding an EntityInsertAction for [model.Player] object
[TRACE] Adding insert with no non-nullable, transient entities: [EntityInsertAction[model.Player#9]]
[TRACE] Adding resolved non-early insert action.
[TRACE] ID unsaved-value: 0
[TRACE] Saving transient instance
[DEBUG] Generated identifier: 10, using strategy: org.hibernate.id.enhanced.TableGenerator
[TRACE] Saving [model.Player#10]
[TRACE] Adding an EntityInsertAction for [model.Player] object
[TRACE] Adding insert with no non-nullable, transient entities: [EntityInsertAction[model.Player#10]]
[TRACE] Adding resolved non-early insert action.
[TRACE] ID unsaved-value: 0
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Team#2]
[DEBUG] committing
[TRACE] ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
[TRACE] SessionImpl#beforeTransactionCompletion()
[TRACE] Automatically flushing session
[TRACE] Flushing session
[DEBUG] Processing flush-time cascades
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Coach
[TRACE] Cascading to save or update: model.Team
[TRACE] Persistent instance of: model.Team
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Team#2]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Coach
[DEBUG] Dirty checking collections
[TRACE] Flushing entities and processing referenced collections
[TRACE] model.Team.coach is dirty
[TRACE] Found dirty properties [[model.Team#2]] : [Ljava.lang.String;@425357dd
[TRACE] Updating entity: [model.Team#2]
[DEBUG] Collection found: [model.Team.players#2], was: [<unreferenced>] (initialized)
[TRACE] Processing unreferenced collections
[TRACE] Scheduling collection removes/(re)creates/updates
[DEBUG] Flushed: 5 insertions, 1 updates, 0 deletions to 6 objects
[DEBUG] Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] Listing entities:
[DEBUG] model.Player{name=Marcin, id=10, position=model.Position#4, team=model.Team#2, lastname=Burda}
[DEBUG] model.Team{players=[model.Player#8, model.Player#10, model.Player#7], name=LKS Tęcza Wielowieś, id=2, coach=model.Coach#6}
[DEBUG] model.Player{name=Daniel, id=9, position=model.Position#2, team=model.Team#2, lastname=osman}
[DEBUG] model.Player{name=Wojciech, id=8, position=model.Position#3, team=model.Team#2, lastname=Gała}
[DEBUG] model.Player{name=Tomasz, id=7, position=model.Position#1, team=model.Team#2, lastname=Musioł}
[DEBUG] model.Coach{name=Piotr, id=6, team=model.Team#2, lastname=Żaba}
[TRACE] Executing flush
[TRACE] Inserting entity: [model.Coach#6]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@3d4d3fe7]
[TRACE] Dehydrating entity: [model.Coach#6]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@3d4d3fe7]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@3d4d3fe7]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Inserting entity: [model.Player#7]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6ce1f601]
[TRACE] Dehydrating entity: [model.Player#7]
[TRACE] ID unsaved-value: 0
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6ce1f601]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6ce1f601]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Inserting entity: [model.Player#8]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1e886a5b]
[TRACE] Dehydrating entity: [model.Player#8]
[TRACE] ID unsaved-value: 0
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1e886a5b]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@1e886a5b]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Inserting entity: [model.Player#9]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6e33c391]
[TRACE] Dehydrating entity: [model.Player#9]
[TRACE] ID unsaved-value: 0
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6e33c391]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@6e33c391]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Inserting entity: [model.Player#10]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@31c269fd]
[TRACE] Dehydrating entity: [model.Player#10]
[TRACE] ID unsaved-value: 0
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@31c269fd]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@31c269fd]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Updating entity: [model.Team#2]
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@3113a37]
[TRACE] Dehydrating entity: [model.Team#2]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@3113a37]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@3113a37]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Post flush
[TRACE] SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
[TRACE] Preparing to commit transaction via JDBC Connection.commit()
[TRACE] Transaction committed via JDBC Connection.commit()
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] Releasing JDBC resources
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
[TRACE] SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
[TRACE] Closing session [a1aeb8d3-8102-45e9-a732-47a2a6944372]
[TRACE] Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@213e3629]
[DEBUG] HHH000420: Closing un-released batch
[TRACE] Releasing JDBC resources
[TRACE] Closing logical connection
[TRACE] Logical connection closed
[TRACE] Opening Hibernate Session.  tenant=null, owner=null
[TRACE] Opened Session [c851ec42-3f24-44d3-a9a2-9cb031561b43] at timestamp: 15271042510
[DEBUG] begin
[TRACE] Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
[TRACE] Transaction begun via JDBC Connection.setAutoCommit(false)
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
[TRACE] Saving transient instance
[TRACE] Saving [model.Match#<null>]
[TRACE] Wrapped collection in role: model.Match.statistics
[TRACE] Adding an EntityIdentityInsertAction for [model.Match] object
[TRACE] Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Match#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Match#<null>]]
[TRACE] Executing insertions beforeQuery resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] ID unsaved-value: 0
[TRACE] Inserting entity: model.Match (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@5528a42c]
[TRACE] Dehydrating entity: [model.Match#<null>]
[TRACE] ID unsaved-value: 0
[DEBUG] Natively generated identity: 10
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@cc62a3b]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@cc62a3b]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@5528a42c]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@5528a42c]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Saving transient instance
[TRACE] Saving [model.Statistic#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Statistic
[TRACE] Cascading to save or update: model.Match
[TRACE] Persistent instance of: model.Match
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Match#10]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Statistic
[TRACE] Adding an EntityIdentityInsertAction for [model.Statistic] object
[TRACE] Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Statistic#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Statistic#<null>]]
[TRACE] Executing insertions beforeQuery resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Statistic (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@32f61a31]
[TRACE] Dehydrating entity: [model.Statistic#<null>]
[DEBUG] Natively generated identity: 1
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@5305c37d]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@5305c37d]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@32f61a31]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@32f61a31]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Statistic
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Statistic
[TRACE] Saving transient instance
[TRACE] Saving [model.Statistic#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Statistic
[TRACE] Cascading to save or update: model.Match
[TRACE] Persistent instance of: model.Match
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Match#10]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Statistic
[TRACE] Adding an EntityIdentityInsertAction for [model.Statistic] object
[TRACE] Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Statistic#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Statistic#<null>]]
[TRACE] Executing insertions beforeQuery resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Statistic (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@3dddbe65]
[TRACE] Dehydrating entity: [model.Statistic#<null>]
[DEBUG] Natively generated identity: 2
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@66d23e4a]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@66d23e4a]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@3dddbe65]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@3dddbe65]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Statistic
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Statistic
[TRACE] Saving transient instance
[TRACE] Saving [model.Statistic#<null>]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Statistic
[TRACE] Cascading to save or update: model.Match
[TRACE] Persistent instance of: model.Match
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Match#10]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Statistic
[TRACE] Adding an EntityIdentityInsertAction for [model.Statistic] object
[TRACE] Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Statistic#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Statistic#<null>]]
[TRACE] Executing insertions beforeQuery resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Statistic (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@4d9d1b69]
[TRACE] Dehydrating entity: [model.Statistic#<null>]
[DEBUG] Natively generated identity: 3
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@77b21474]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@77b21474]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@4d9d1b69]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@4d9d1b69]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Statistic
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Statistic
[DEBUG] committing
[TRACE] ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
[TRACE] SessionImpl#beforeTransactionCompletion()
[TRACE] Automatically flushing session
[TRACE] Flushing session
[DEBUG] Processing flush-time cascades
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Statistic
[TRACE] Cascading to save or update: model.Match
[TRACE] Persistent instance of: model.Match
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Match#10]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Statistic
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Statistic
[TRACE] Cascading to save or update: model.Match
[TRACE] Persistent instance of: model.Match
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Match#10]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Statistic
[TRACE] Processing cascade ACTION_SAVE_UPDATE for: model.Statistic
[TRACE] Cascading to save or update: model.Match
[TRACE] Persistent instance of: model.Match
[TRACE] Ignoring persistent instance
[TRACE] Object already associated with session: [model.Match#10]
[TRACE] Done processing cascade ACTION_SAVE_UPDATE for: model.Statistic
[DEBUG] Dirty checking collections
[TRACE] Flushing entities and processing referenced collections
[DEBUG] Collection found: [model.Match.statistics#10], was: [<unreferenced>] (initialized)
[TRACE] Processing unreferenced collections
[TRACE] Scheduling collection removes/(re)creates/updates
[DEBUG] Flushed: 0 insertions, 0 updates, 0 deletions to 4 objects
[DEBUG] Flushed: 1 (re)creations, 0 updates, 0 removals to 1 collections
[DEBUG] Listing entities:
[DEBUG] model.Match{date=null, guests=model.Team#2, host=model.Team#1, id=10, statistics=[model.Statistic#2, model.Statistic#1, model.Statistic#3]}
[DEBUG] model.Statistic{match=model.Match#10, id=2, type=null, value=2}
[DEBUG] model.Statistic{match=model.Match#10, id=3, type=null, value=5}
[DEBUG] model.Statistic{match=model.Match#10, id=1, type=null, value=4}
[TRACE] Executing flush
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Post flush
[TRACE] SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
[TRACE] Preparing to commit transaction via JDBC Connection.commit()
[TRACE] Transaction committed via JDBC Connection.commit()
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] Releasing JDBC resources
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
[TRACE] SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
[TRACE] Closing session [c851ec42-3f24-44d3-a9a2-9cb031561b43]
[TRACE] Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@52d10fb8]
[TRACE] Releasing JDBC resources
[TRACE] Closing logical connection
[TRACE] Logical connection closed
[TRACE] Opening Hibernate Session.  tenant=null, owner=null
[TRACE] Opened Session [a9527223-7d5e-4fed-a879-4d338f22f46e] at timestamp: 15271042510
[DEBUG] begin
[TRACE] Preparing to begin transaction via JDBC Connection.setAutoCommit(false)
[TRACE] Transaction begun via JDBC Connection.setAutoCommit(false)
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterBeginCallback
[TRACE] Saving transient instance
[TRACE] Saving [model.Arena#<null>]
[TRACE] Adding an EntityIdentityInsertAction for [model.Arena] object
[TRACE] Executing inserts beforeQuery finding non-nullable transient entities for early insert: [EntityIdentityInsertAction[model.Arena#<null>]]
[TRACE] Adding insert with no non-nullable, transient entities: [EntityIdentityInsertAction[model.Arena#<null>]]
[TRACE] Executing insertions beforeQuery resolved early-insert
[DEBUG] Executing identity-insert immediately
[TRACE] Inserting entity: model.Arena (native id)
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@60d84f61]
[TRACE] Dehydrating entity: [model.Arena#<null>]
[DEBUG] Natively generated identity: 1
[TRACE] Releasing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@503d56b5]
[DEBUG] HHH000387: ResultSet's statement was not registered
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@503d56b5]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@60d84f61]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@60d84f61]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[DEBUG] committing
[TRACE] ResourceLocalTransactionCoordinatorImpl#beforeCompletionCallback
[TRACE] SessionImpl#beforeTransactionCompletion()
[TRACE] Automatically flushing session
[TRACE] Flushing session
[DEBUG] Processing flush-time cascades
[DEBUG] Dirty checking collections
[TRACE] Flushing entities and processing referenced collections
[TRACE] Processing unreferenced collections
[TRACE] Scheduling collection removes/(re)creates/updates
[DEBUG] Flushed: 0 insertions, 0 updates, 0 deletions to 1 objects
[DEBUG] Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[DEBUG] Listing entities:
[DEBUG] model.Arena{address=kkkkkk, name=GOSIR, id=1}
[TRACE] Executing flush
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Post flush
[TRACE] SynchronizationRegistryStandardImpl.notifySynchronizationsBeforeTransactionCompletion
[TRACE] Preparing to commit transaction via JDBC Connection.commit()
[TRACE] Transaction committed via JDBC Connection.commit()
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] Releasing JDBC resources
[TRACE] ResourceLocalTransactionCoordinatorImpl#afterCompletionCallback(true)
[TRACE] SynchronizationRegistryStandardImpl.notifySynchronizationsAfterTransactionCompletion(3)
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] SessionImpl#afterTransactionCompletion(successful=true, delayed=false)
[TRACE] Closing session [a9527223-7d5e-4fed-a879-4d338f22f46e]
[TRACE] Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@72bca894]
[TRACE] Releasing JDBC resources
[TRACE] Closing logical connection
[TRACE] Logical connection closed
[TRACE] Opening Hibernate Session.  tenant=null, owner=null
[TRACE] Opened Session [b587687e-e468-4d7e-98e9-6fa2edad6793] at timestamp: 15271042511
[DEBUG] Rendered criteria query -> select generatedAlias0 from Person as generatedAlias0
[TRACE] Unable to locate HQL query plan in cache; generating (select generatedAlias0 from Person as generatedAlias0)
[TRACE] Initializing service [role=org.hibernate.hql.spi.QueryTranslatorFactory]
[TRACE] HQL param location recognition took 2 019 691 nanoseconds (select generatedAlias0 from Person as generatedAlias0)
[TRACE] Located HQL query plan in cache (select generatedAlias0 from Person as generatedAlias0)
[TRACE] Located HQL query plan in cache (select generatedAlias0 from Person as generatedAlias0)
[TRACE] Find: select generatedAlias0 from Person as generatedAlias0
[TRACE] Named parameters: {}
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@737edcfa]
[TRACE] Registering last query statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@737edcfa]
[TRACE] Bound [1] parameters total
[TRACE] Registering result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@6f330eb9]
[TRACE] Processing result set
[DEBUG] Result set row: 0
[DEBUG] Result row: EntityKey[model.Person#1]
[TRACE] Initializing object from ResultSet: [model.Coach#1]
[TRACE] Hydrating entity: [model.Coach#1]
[DEBUG] Result set row: 1
[DEBUG] Result row: EntityKey[model.Person#6]
[TRACE] Initializing object from ResultSet: [model.Coach#6]
[TRACE] Hydrating entity: [model.Coach#6]
[DEBUG] Result set row: 2
[DEBUG] Result row: EntityKey[model.Person#2]
[TRACE] Initializing object from ResultSet: [model.Player#2]
[TRACE] Hydrating entity: [model.Player#2]
[DEBUG] Result set row: 3
[DEBUG] Result row: EntityKey[model.Person#3]
[TRACE] Initializing object from ResultSet: [model.Player#3]
[TRACE] Hydrating entity: [model.Player#3]
[DEBUG] Result set row: 4
[DEBUG] Result row: EntityKey[model.Person#4]
[TRACE] Initializing object from ResultSet: [model.Player#4]
[TRACE] Hydrating entity: [model.Player#4]
[DEBUG] Result set row: 5
[DEBUG] Result row: EntityKey[model.Person#5]
[TRACE] Initializing object from ResultSet: [model.Player#5]
[TRACE] Hydrating entity: [model.Player#5]
[DEBUG] Result set row: 6
[DEBUG] Result row: EntityKey[model.Person#7]
[TRACE] Initializing object from ResultSet: [model.Player#7]
[TRACE] Hydrating entity: [model.Player#7]
[DEBUG] Result set row: 7
[DEBUG] Result row: EntityKey[model.Person#8]
[TRACE] Initializing object from ResultSet: [model.Player#8]
[TRACE] Hydrating entity: [model.Player#8]
[DEBUG] Result set row: 8
[DEBUG] Result row: EntityKey[model.Person#9]
[TRACE] Initializing object from ResultSet: [model.Player#9]
[TRACE] Hydrating entity: [model.Player#9]
[DEBUG] Result set row: 9
[DEBUG] Result row: EntityKey[model.Person#10]
[TRACE] Initializing object from ResultSet: [model.Player#10]
[TRACE] Hydrating entity: [model.Player#10]
[TRACE] Done processing result set (10 rows)
[TRACE] Total objects hydrated: 10
[DEBUG] Resolving associations for [model.Coach#1]
[TRACE] Loading entity: [model.Team#1]
[TRACE] Creating new proxy for entity
[DEBUG] Done materializing entity [model.Coach#1]
[DEBUG] Resolving associations for [model.Coach#6]
[TRACE] Loading entity: [model.Team#2]
[TRACE] Creating new proxy for entity
[DEBUG] Done materializing entity [model.Coach#6]
[DEBUG] Resolving associations for [model.Player#2]
[TRACE] Loading entity: [model.Position#1]
[TRACE] Creating new proxy for entity
[TRACE] Loading entity: [model.Team#1]
[TRACE] Entity proxy found in session cache
[DEBUG] Done materializing entity [model.Player#2]
[DEBUG] Resolving associations for [model.Player#3]
[TRACE] Loading entity: [model.Position#3]
[TRACE] Creating new proxy for entity
[TRACE] Loading entity: [model.Team#1]
[TRACE] Entity proxy found in session cache
[DEBUG] Done materializing entity [model.Player#3]
[DEBUG] Resolving associations for [model.Player#4]
[TRACE] Loading entity: [model.Position#2]
[TRACE] Creating new proxy for entity
[TRACE] Loading entity: [model.Team#1]
[TRACE] Entity proxy found in session cache
[DEBUG] Done materializing entity [model.Player#4]
[DEBUG] Resolving associations for [model.Player#5]
[TRACE] Loading entity: [model.Position#4]
[TRACE] Creating new proxy for entity
[TRACE] Loading entity: [model.Team#1]
[TRACE] Entity proxy found in session cache
[DEBUG] Done materializing entity [model.Player#5]
[DEBUG] Resolving associations for [model.Player#7]
[TRACE] Loading entity: [model.Position#1]
[TRACE] Entity proxy found in session cache
[TRACE] Loading entity: [model.Team#2]
[TRACE] Entity proxy found in session cache
[DEBUG] Done materializing entity [model.Player#7]
[DEBUG] Resolving associations for [model.Player#8]
[TRACE] Loading entity: [model.Position#3]
[TRACE] Entity proxy found in session cache
[TRACE] Loading entity: [model.Team#2]
[TRACE] Entity proxy found in session cache
[DEBUG] Done materializing entity [model.Player#8]
[DEBUG] Resolving associations for [model.Player#9]
[TRACE] Loading entity: [model.Position#2]
[TRACE] Entity proxy found in session cache
[TRACE] Loading entity: [model.Team#2]
[TRACE] Entity proxy found in session cache
[DEBUG] Done materializing entity [model.Player#9]
[DEBUG] Resolving associations for [model.Player#10]
[TRACE] Loading entity: [model.Position#4]
[TRACE] Entity proxy found in session cache
[TRACE] Loading entity: [model.Team#2]
[TRACE] Entity proxy found in session cache
[DEBUG] Done materializing entity [model.Player#10]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@737edcfa]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@6f330eb9]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@737edcfa]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Initializing non-lazy collections
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] Releasing JDBC resources
[TRACE] Closing session [b587687e-e468-4d7e-98e9-6fa2edad6793]
[TRACE] Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@219f4597]
[TRACE] Releasing JDBC resources
[TRACE] Closing logical connection
[TRACE] Logical connection closed
[TRACE] Closing session [b587687e-e468-4d7e-98e9-6fa2edad6793]
[TRACE] Closing session [b587687e-e468-4d7e-98e9-6fa2edad6793]
[TRACE] Closing session [b587687e-e468-4d7e-98e9-6fa2edad6793]
[TRACE] Closing session [b587687e-e468-4d7e-98e9-6fa2edad6793]
[TRACE] Closing session [b587687e-e468-4d7e-98e9-6fa2edad6793]
[TRACE] Closing session [b587687e-e468-4d7e-98e9-6fa2edad6793]
[TRACE] Closing session [b587687e-e468-4d7e-98e9-6fa2edad6793]
[TRACE] Closing session [b587687e-e468-4d7e-98e9-6fa2edad6793]
[TRACE] Closing session [b587687e-e468-4d7e-98e9-6fa2edad6793]
[TRACE] Opening Hibernate Session.  tenant=null, owner=null
[TRACE] Opened Session [b2af5431-be8c-41db-a8fc-e9305c1ffa36] at timestamp: 15271042513
[TRACE] Unable to locate HQL query plan in cache; generating (From Person)
[TRACE] HQL param location recognition took 5 421 nanoseconds (From Person)
[TRACE] Located HQL query plan in cache (From Person)
[TRACE] Find: From Person
[TRACE] Named parameters: {}
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@46b695ec]
[TRACE] Registering last query statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@46b695ec]
[TRACE] Bound [1] parameters total
[TRACE] Registering result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@11ce2e22]
[TRACE] Processing result set
[DEBUG] Result set row: 0
[DEBUG] Result row: EntityKey[model.Person#1]
[TRACE] Initializing object from ResultSet: [model.Coach#1]
[TRACE] Hydrating entity: [model.Coach#1]
[DEBUG] Result set row: 1
[DEBUG] Result row: EntityKey[model.Person#6]
[TRACE] Initializing object from ResultSet: [model.Coach#6]
[TRACE] Hydrating entity: [model.Coach#6]
[DEBUG] Result set row: 2
[DEBUG] Result row: EntityKey[model.Person#2]
[TRACE] Initializing object from ResultSet: [model.Player#2]
[TRACE] Hydrating entity: [model.Player#2]
[DEBUG] Result set row: 3
[DEBUG] Result row: EntityKey[model.Person#3]
[TRACE] Initializing object from ResultSet: [model.Player#3]
[TRACE] Hydrating entity: [model.Player#3]
[DEBUG] Result set row: 4
[DEBUG] Result row: EntityKey[model.Person#4]
[TRACE] Initializing object from ResultSet: [model.Player#4]
[TRACE] Hydrating entity: [model.Player#4]
[DEBUG] Result set row: 5
[DEBUG] Result row: EntityKey[model.Person#5]
[TRACE] Initializing object from ResultSet: [model.Player#5]
[TRACE] Hydrating entity: [model.Player#5]
[DEBUG] Result set row: 6
[DEBUG] Result row: EntityKey[model.Person#7]
[TRACE] Initializing object from ResultSet: [model.Player#7]
[TRACE] Hydrating entity: [model.Player#7]
[DEBUG] Result set row: 7
[DEBUG] Result row: EntityKey[model.Person#8]
[TRACE] Initializing object from ResultSet: [model.Player#8]
[TRACE] Hydrating entity: [model.Player#8]
[DEBUG] Result set row: 8
[DEBUG] Result row: EntityKey[model.Person#9]
[TRACE] Initializing object from ResultSet: [model.Player#9]
[TRACE] Hydrating entity: [model.Player#9]
[DEBUG] Result set row: 9
[DEBUG] Result row: EntityKey[model.Person#10]
[TRACE] Initializing object from ResultSet: [model.Player#10]
[TRACE] Hydrating entity: [model.Player#10]
[TRACE] Done processing result set (10 rows)
[TRACE] Total objects hydrated: 10
[DEBUG] Resolving associations for [model.Coach#1]
[TRACE] Loading entity: [model.Team#1]
[TRACE] Creating new proxy for entity
[DEBUG] Done materializing entity [model.Coach#1]
[DEBUG] Resolving associations for [model.Coach#6]
[TRACE] Loading entity: [model.Team#2]
[TRACE] Creating new proxy for entity
[DEBUG] Done materializing entity [model.Coach#6]
[DEBUG] Resolving associations for [model.Player#2]
[TRACE] Loading entity: [model.Position#1]
[TRACE] Creating new proxy for entity
[TRACE] Loading entity: [model.Team#1]
[TRACE] Entity proxy found in session cache
[DEBUG] Done materializing entity [model.Player#2]
[DEBUG] Resolving associations for [model.Player#3]
[TRACE] Loading entity: [model.Position#3]
[TRACE] Creating new proxy for entity
[TRACE] Loading entity: [model.Team#1]
[TRACE] Entity proxy found in session cache
[DEBUG] Done materializing entity [model.Player#3]
[DEBUG] Resolving associations for [model.Player#4]
[TRACE] Loading entity: [model.Position#2]
[TRACE] Creating new proxy for entity
[TRACE] Loading entity: [model.Team#1]
[TRACE] Entity proxy found in session cache
[DEBUG] Done materializing entity [model.Player#4]
[DEBUG] Resolving associations for [model.Player#5]
[TRACE] Loading entity: [model.Position#4]
[TRACE] Creating new proxy for entity
[TRACE] Loading entity: [model.Team#1]
[TRACE] Entity proxy found in session cache
[DEBUG] Done materializing entity [model.Player#5]
[DEBUG] Resolving associations for [model.Player#7]
[TRACE] Loading entity: [model.Position#1]
[TRACE] Entity proxy found in session cache
[TRACE] Loading entity: [model.Team#2]
[TRACE] Entity proxy found in session cache
[DEBUG] Done materializing entity [model.Player#7]
[DEBUG] Resolving associations for [model.Player#8]
[TRACE] Loading entity: [model.Position#3]
[TRACE] Entity proxy found in session cache
[TRACE] Loading entity: [model.Team#2]
[TRACE] Entity proxy found in session cache
[DEBUG] Done materializing entity [model.Player#8]
[DEBUG] Resolving associations for [model.Player#9]
[TRACE] Loading entity: [model.Position#2]
[TRACE] Entity proxy found in session cache
[TRACE] Loading entity: [model.Team#2]
[TRACE] Entity proxy found in session cache
[DEBUG] Done materializing entity [model.Player#9]
[DEBUG] Resolving associations for [model.Player#10]
[TRACE] Loading entity: [model.Position#4]
[TRACE] Entity proxy found in session cache
[TRACE] Loading entity: [model.Team#2]
[TRACE] Entity proxy found in session cache
[DEBUG] Done materializing entity [model.Player#10]
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@46b695ec]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@11ce2e22]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@46b695ec]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Initializing non-lazy collections
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] Releasing JDBC resources
[TRACE] Starting createEntityManagerFactory for persistenceUnitName labPU
[TRACE] Attempting to obtain correct EntityManagerFactoryBuilder for persistenceUnitName : labPU
[DEBUG] Incoming config yielded no classloaders; adding standard SE ones
[TRACE] Attempting to parse persistence.xml file : file:/D:/Code/Szkola/HiberLabJPA2017/build/classes/META-INF/persistence.xml
[TRACE] JAR URL from URL Entry: file:/D:/Code/Szkola/HiberLabJPA2017/build/classes/META-INF/persistence.xml >> file:/D:/Code/Szkola/HiberLabJPA2017/build/classes/
[TRACE] Persistence unit name from persistence.xml : labPU
[DEBUG] Located and parsed 1 persistence units; checking each
[DEBUG] Checking persistence-unit [name=labPU, explicit-provider=org.hibernate.jpa.HibernatePersistenceProvider] against incoming persistence unit name [labPU]
[DEBUG] Persistence-unit [labPU] requested PersistenceProvider [org.hibernate.jpa.HibernatePersistenceProvider]
[TRACE] Checking requested PersistenceProvider name [org.hibernate.jpa.HibernatePersistenceProvider] against Hibernate provider names
[DEBUG] PersistenceUnitInfo [
	name: labPU
	persistence provider classname: org.hibernate.jpa.HibernatePersistenceProvider
	classloader: null
	excludeUnlistedClasses: false
	JTA datasource: null
	Non JTA datasource: null
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/D:/Code/Szkola/HiberLabJPA2017/build/classes/
	Shared Cache Mode: null
	Validation Mode: null
	Jar files URLs []
	Managed classes names []
	Mapping files names []
	Properties [
		hibernate.ejb.cfgfile: hibernate.cfg.xml]
[DEBUG] Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[DEBUG] Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[DEBUG] Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[DEBUG] Adding Integrator [org.hibernate.jpa.event.spi.JpaIntegrator].
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Cache71] -> [org.hibernate.dialect.Cache71Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [CUBRID] -> [org.hibernate.dialect.CUBRIDDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2] -> [org.hibernate.dialect.DB2Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2390] -> [org.hibernate.dialect.DB2390Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [DB2400] -> [org.hibernate.dialect.DB2400Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenFive] -> [org.hibernate.dialect.DerbyTenFiveDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenSix] -> [org.hibernate.dialect.DerbyTenSixDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [DerbyTenSeven] -> [org.hibernate.dialect.DerbyTenSevenDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Firebird] -> [org.hibernate.dialect.FirebirdDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [FrontBase] -> [org.hibernate.dialect.FrontBaseDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [H2] -> [org.hibernate.dialect.H2Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [HSQL] -> [org.hibernate.dialect.HSQLDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Informix] -> [org.hibernate.dialect.InformixDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres] -> [org.hibernate.dialect.IngresDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres9] -> [org.hibernate.dialect.Ingres9Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Ingres10] -> [org.hibernate.dialect.Ingres10Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Interbase] -> [org.hibernate.dialect.InterbaseDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [JDataStore] -> [org.hibernate.dialect.JDataStoreDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Mckoi] -> [org.hibernate.dialect.MckoiDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [MimerSQL] -> [org.hibernate.dialect.MimerSQLDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5] -> [org.hibernate.dialect.MySQL5Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL5InnoDB] -> [org.hibernate.dialect.MySQL5InnoDBDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [MySQL57InnoDB] -> [org.hibernate.dialect.MySQL57InnoDBDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle8i] -> [org.hibernate.dialect.Oracle8iDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle9i] -> [org.hibernate.dialect.Oracle9iDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Oracle10g] -> [org.hibernate.dialect.Oracle10gDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Pointbase] -> [org.hibernate.dialect.PointbaseDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgresPlus] -> [org.hibernate.dialect.PostgresPlusDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL81] -> [org.hibernate.dialect.PostgreSQL81Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL82] -> [org.hibernate.dialect.PostgreSQL82Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [PostgreSQL9] -> [org.hibernate.dialect.PostgreSQL9Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Progress] -> [org.hibernate.dialect.ProgressDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [SAPDB] -> [org.hibernate.dialect.SAPDBDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer] -> [org.hibernate.dialect.SQLServerDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer2005] -> [org.hibernate.dialect.SQLServer2005Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [SQLServer2008] -> [org.hibernate.dialect.SQLServer2008Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Sybase11] -> [org.hibernate.dialect.Sybase11Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseAnywhere] -> [org.hibernate.dialect.SybaseAnywhereDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseASE15] -> [org.hibernate.dialect.SybaseASE15Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [SybaseASE157] -> [org.hibernate.dialect.SybaseASE157Dialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [Teradata] -> [org.hibernate.dialect.TeradataDialect]
[TRACE] Registering named strategy selector [org.hibernate.dialect.Dialect] : [TimesTen] -> [org.hibernate.dialect.TimesTenDialect]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Borland] -> [org.hibernate.engine.transaction.jta.platform.internal.BorlandEnterpriseServerJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.BorlandEnterpriseServerJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.BorlandEnterpriseServerJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Bitronix] -> [org.hibernate.engine.transaction.jta.platform.internal.BitronixJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.BitronixJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.BitronixJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JBossAS] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JBossAppServerJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossAppServerJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JBossTS] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JBossStandAloneJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JBossStandAloneJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JOnAS] -> [org.hibernate.engine.transaction.jta.platform.internal.JOnASJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JOnASJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JOnASJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JOTM] -> [org.hibernate.engine.transaction.jta.platform.internal.JOTMJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JOTMJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JOTMJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [JRun4] -> [org.hibernate.engine.transaction.jta.platform.internal.JRun4JtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.JRun4JtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.JRun4JtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [OC4J] -> [org.hibernate.engine.transaction.jta.platform.internal.OC4JJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.OC4JJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.OC4JJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Orion] -> [org.hibernate.engine.transaction.jta.platform.internal.OrionJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.OrionJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.OrionJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Resin] -> [org.hibernate.engine.transaction.jta.platform.internal.ResinJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.ResinJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.ResinJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [SunOne] -> [org.hibernate.engine.transaction.jta.platform.internal.SunOneJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.SunOneJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.SunOneJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [Weblogic] -> [org.hibernate.engine.transaction.jta.platform.internal.WeblogicJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WeblogicJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WeblogicJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [WebSphere] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WebSphereJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [WebSphereExtended] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.engine.transaction.jta.platform.spi.JtaPlatform] : [org.hibernate.service.jta.platform.internal.WebSphereExtendedJtaPlatform] -> [org.hibernate.engine.transaction.jta.platform.internal.WebSphereExtendedJtaPlatform]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jdbc] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [jta] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JDBCTransactionFactory] -> [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.JTATransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder] : [org.hibernate.transaction.CMTTransactionFactory] -> [org.hibernate.resource.transaction.backend.jta.internal.JtaTransactionCoordinatorBuilderImpl]
[TRACE] Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [persistent] -> [org.hibernate.hql.spi.id.persistent.PersistentTableBulkIdStrategy]
[TRACE] Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [global_temporary] -> [org.hibernate.hql.spi.id.global.GlobalTemporaryTableBulkIdStrategy]
[TRACE] Registering named strategy selector [org.hibernate.hql.spi.id.MultiTableBulkIdStrategy] : [local_temporary] -> [org.hibernate.hql.spi.id.local.LocalTemporaryTableBulkIdStrategy]
[TRACE] Registering named strategy selector [org.hibernate.event.spi.EntityCopyObserver] : [disallow] -> [org.hibernate.event.internal.EntityCopyNotAllowedObserver]
[TRACE] Registering named strategy selector [org.hibernate.event.spi.EntityCopyObserver] : [allow] -> [org.hibernate.event.internal.EntityCopyAllowedObserver]
[TRACE] Registering named strategy selector [org.hibernate.event.spi.EntityCopyObserver] : [log] -> [org.hibernate.event.internal.EntityCopyAllowedLoggedObserver]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [default] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-jpa] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [legacy-hbm] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl]
[TRACE] Registering named strategy selector [org.hibernate.boot.model.naming.ImplicitNamingStrategy] : [component-path] -> [org.hibernate.boot.model.naming.ImplicitNamingStrategyComponentPathImpl]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [c3p0] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [org.hibernate.connection.C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] Registering named strategy selector [org.hibernate.engine.jdbc.connections.spi.ConnectionProvider] : [org.hibernate.service.jdbc.connections.internal.C3P0ConnectionProvider] -> [org.hibernate.c3p0.internal.C3P0ConnectionProvider]
[TRACE] trying via [new URL("hibernate.cfg.xml")]
[TRACE] trying via [ClassLoader.getResourceAsStream("hibernate.cfg.xml")]
[TRACE] In resolveEntity(-//Hibernate/Hibernate Configuration DTD//EN, http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Configuration DTD//EN] - [http://www.hibernate.org/dtd/hibernate-configuration-3.0.dtd]
[DEBUG] Recognized hibernate-configuration identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] cfg.xml document did not define namespaces; wrapping in custom event reader to introduce namespace information
[DEBUG] Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[TRACE] Initializing service [role=org.hibernate.engine.config.spi.ConfigurationService]
[TRACE] Initializing service [role=org.hibernate.cache.spi.RegionFactory]
[DEBUG] Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[TRACE] Initializing service [role=org.hibernate.boot.cfgxml.spi.CfgXmlAccessService]
[TRACE] reading mappings from InputStreamAccess : D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\Position.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
[WARN ] HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
[DEBUG] Recognized legacy hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\Position.hbm.xml,type=INPUT_STREAM)
[TRACE] reading mappings from InputStreamAccess : D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\Team.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
[WARN ] HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
[DEBUG] Recognized legacy hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\Team.hbm.xml,type=INPUT_STREAM)
[TRACE] reading mappings from InputStreamAccess : D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\Arena.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
[WARN ] HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
[DEBUG] Recognized legacy hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\Arena.hbm.xml,type=INPUT_STREAM)
[TRACE] reading mappings from InputStreamAccess : D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\Coach.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
[WARN ] HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
[DEBUG] Recognized legacy hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\Coach.hbm.xml,type=INPUT_STREAM)
[TRACE] reading mappings from InputStreamAccess : D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\Player.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
[WARN ] HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
[DEBUG] Recognized legacy hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\Player.hbm.xml,type=INPUT_STREAM)
[TRACE] reading mappings from InputStreamAccess : D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\StatisticType.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
[WARN ] HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
[DEBUG] Recognized legacy hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\StatisticType.hbm.xml,type=INPUT_STREAM)
[TRACE] reading mappings from InputStreamAccess : D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\Person.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
[WARN ] HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
[DEBUG] Recognized legacy hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\Person.hbm.xml,type=INPUT_STREAM)
[TRACE] reading mappings from InputStreamAccess : D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\Match.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
[WARN ] HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
[DEBUG] Recognized legacy hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\Match.hbm.xml,type=INPUT_STREAM)
[TRACE] reading mappings from InputStreamAccess : D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\Statistic.hbm.xml
[TRACE] In resolveEntity(-//Hibernate/Hibernate Mapping DTD 3.0//EN, http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd, null, null)
[DEBUG] Interpreting public/system identifier : [-//Hibernate/Hibernate Mapping DTD 3.0//EN] - [http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd]
[WARN ] HHH90000012: Recognized obsolete hibernate namespace http://hibernate.sourceforge.net/hibernate-mapping. Use namespace http://www.hibernate.org/dtd/hibernate-mapping instead.  Support for obsolete DTD/XSD namespaces may be removed at any time.
[DEBUG] Recognized legacy hibernate-mapping identifier; attempting to resolve on classpath under org/hibernate/
[DEBUG] Performing JAXB binding of hbm.xml document : Origin(name=D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\Statistic.hbm.xml,type=INPUT_STREAM)
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.spi.JdbcServices]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectFactory]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.dialect.spi.DialectResolver]
[TRACE] Initializing service [role=org.hibernate.engine.jdbc.connections.spi.ConnectionProvider]
[INFO ] HHH010002: C3P0 using driver: com.mysql.jdbc.Driver at URL: jdbc:mysql://localhost:6033/ior
[INFO ] HHH10001001: Connection properties: {user=root, password=****}
[INFO ] HHH10001003: Autocommit mode: false
[INFO ] HHH10001007: JDBC isolation level: <unknown>
[DEBUG] Database ->
       name : MySQL
    version : 5.1.34-community
      major : 5
      minor : 1
[DEBUG] Driver ->
       name : MySQL-AB JDBC Driver
    version : mysql-connector-java-5.1.23 ( Revision: ${bzr.revision-id} )
      major : 5
      minor : 1
[DEBUG] JDBC version : 4.0
[INFO ] HHH000400: Using dialect: org.hibernate.dialect.MySQL5InnoDBDialect
[DEBUG] JDBC driver metadata reported database stores quoted identifiers in more than one case
[DEBUG] IdentifierCaseStrategy for both quoted and unquoted identifiers was set to the same strategy [LOWER]; that will likely lead to problems in schema update and validation if using quoted identifiers
[TRACE] Normalizing identifier quoting [ior]
[TRACE] Normalizing identifier quoting [null]
[INFO ] HHH000424: Disabling contextual LOB creation as createClob() method threw error : java.lang.reflect.InvocationTargetException
[TRACE] Initializing service [role=org.hibernate.id.factory.spi.MutableIdentifierGeneratorFactory]
[DEBUG] Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[DEBUG] Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[DEBUG] Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[DEBUG] Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[DEBUG] Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[DEBUG] Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[DEBUG] Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[DEBUG] Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[DEBUG] Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[DEBUG] Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[DEBUG] Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[DEBUG] Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[TRACE] Indexing mapping document [Origin(name=D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\Position.hbm.xml,type=INPUT_STREAM)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\Team.hbm.xml,type=INPUT_STREAM)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\Arena.hbm.xml,type=INPUT_STREAM)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\Coach.hbm.xml,type=INPUT_STREAM)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\Player.hbm.xml,type=INPUT_STREAM)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\StatisticType.hbm.xml,type=INPUT_STREAM)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\Person.hbm.xml,type=INPUT_STREAM)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\Match.hbm.xml,type=INPUT_STREAM)] for purpose of building entity hierarchy ordering
[TRACE] Indexing mapping document [Origin(name=D:\Code\Szkola\HiberLabJPA2017\build\classes\Mapping\Statistic.hbm.xml,type=INPUT_STREAM)] for purpose of building entity hierarchy ordering
[DEBUG] Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[TRACE] Import: model.Position -> model.Position
[TRACE] Import: Position -> model.Position
[TRACE] Normalizing identifier quoting [Positions]
[DEBUG] Mapping class: model.Position -> Positions
[TRACE] Normalizing identifier quoting [ID]
[DEBUG] Mapped property: id -> [ID]
[DEBUG] Forcing column [id] to be non-null as it is part of the primary key for table [positions]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Mapped property: name -> [name]
[TRACE] Import: model.Team -> model.Team
[TRACE] Import: Team -> model.Team
[TRACE] Normalizing identifier quoting [Teams]
[DEBUG] Mapping class: model.Team -> Teams
[TRACE] Normalizing identifier quoting [ID]
[DEBUG] Mapped property: id -> [ID]
[DEBUG] Forcing column [id] to be non-null as it is part of the primary key for table [teams]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Mapped property: name -> [name]
[DEBUG] Mapped property: players -> []
[TRACE] Normalizing identifier quoting [coach]
[DEBUG] Mapped property: coach -> [coach]
[TRACE] Import: model.Arena -> model.Arena
[TRACE] Import: Arena -> model.Arena
[TRACE] Normalizing identifier quoting [Arenas]
[DEBUG] Mapping class: model.Arena -> Arenas
[TRACE] Normalizing identifier quoting [ID]
[DEBUG] Mapped property: id -> [ID]
[DEBUG] Forcing column [id] to be non-null as it is part of the primary key for table [arenas]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Mapped property: name -> [name]
[TRACE] Normalizing identifier quoting [surname]
[DEBUG] Mapped property: address -> [surname]
[TRACE] Import: model.Coach -> model.Coach
[TRACE] Import: Coach -> model.Coach
[TRACE] Normalizing identifier quoting [Coaches]
[DEBUG] Mapping class: model.Coach -> Coaches
[TRACE] Normalizing identifier quoting [ID]
[DEBUG] Mapped property: id -> [ID]
[DEBUG] Forcing column [id] to be non-null as it is part of the primary key for table [coaches]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Mapped property: name -> [name]
[TRACE] Normalizing identifier quoting [lastname]
[DEBUG] Mapped property: lastname -> [lastname]
[TRACE] Normalizing identifier quoting [team]
[DEBUG] Mapped property: team -> [team]
[TRACE] Import: model.Player -> model.Player
[TRACE] Import: Player -> model.Player
[TRACE] Normalizing identifier quoting [Players]
[DEBUG] Mapping class: model.Player -> Players
[TRACE] Normalizing identifier quoting [ID]
[DEBUG] Mapped property: id -> [ID]
[DEBUG] Forcing column [id] to be non-null as it is part of the primary key for table [players]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Mapped property: name -> [name]
[TRACE] Normalizing identifier quoting [lastname]
[DEBUG] Mapped property: lastname -> [lastname]
[TRACE] Normalizing identifier quoting [team]
[DEBUG] Mapped property: team -> [team]
[TRACE] Normalizing identifier quoting [position]
[DEBUG] Mapped property: position -> [position]
[TRACE] Import: model.StatisticType -> model.StatisticType
[TRACE] Import: StatisticType -> model.StatisticType
[TRACE] Normalizing identifier quoting [StatisticType]
[DEBUG] Mapping class: model.StatisticType -> StatisticType
[TRACE] Normalizing identifier quoting [ID]
[DEBUG] Mapped property: id -> [ID]
[DEBUG] Forcing column [id] to be non-null as it is part of the primary key for table [statistictype]
[TRACE] Normalizing identifier quoting [description]
[DEBUG] Mapped property: description -> [description]
[TRACE] Import: model.Person -> model.Person
[TRACE] Import: Person -> model.Person
[TRACE] Normalizing identifier quoting [Persons]
[DEBUG] Mapping class: model.Person -> Persons
[TRACE] Normalizing identifier quoting [ID]
[DEBUG] Mapped property: id -> [ID]
[DEBUG] Forcing column [id] to be non-null as it is part of the primary key for table [persons]
[TRACE] Normalizing identifier quoting [name]
[DEBUG] Mapped property: name -> [name]
[TRACE] Normalizing identifier quoting [lastname]
[DEBUG] Mapped property: lastname -> [lastname]
[TRACE] Import: model.Match -> model.Match
[TRACE] Import: Match -> model.Match
[TRACE] Normalizing identifier quoting [Matches]
[DEBUG] Mapping class: model.Match -> Matches
[TRACE] Normalizing identifier quoting [ID]
[DEBUG] Mapped property: id -> [ID]
[DEBUG] Forcing column [id] to be non-null as it is part of the primary key for table [matches]
[TRACE] Normalizing identifier quoting [Date]
[DEBUG] Mapped property: date -> [Date]
[DEBUG] Mapped property: statistics -> []
[TRACE] Normalizing identifier quoting [guests]
[DEBUG] Mapped property: guests -> [guests]
[TRACE] Normalizing identifier quoting [host]
[DEBUG] Mapped property: host -> [host]
[TRACE] Import: model.Statistic -> model.Statistic
[TRACE] Import: Statistic -> model.Statistic
[TRACE] Normalizing identifier quoting [Statistics]
[DEBUG] Mapping class: model.Statistic -> Statistics
[TRACE] Normalizing identifier quoting [ID]
[DEBUG] Mapped property: id -> [ID]
[DEBUG] Forcing column [id] to be non-null as it is part of the primary key for table [statistics]
[TRACE] Normalizing identifier quoting [value]
[DEBUG] Mapped property: value -> [value]
[TRACE] Normalizing identifier quoting [type]
[DEBUG] Mapped property: type -> [type]
[DEBUG] Skipping annotated class processing of entity [model.Arena], as it has already been processed
[DEBUG] Skipping annotated class processing of entity [model.Match], as it has already been processed
[DEBUG] Skipping annotated class processing of entity [model.Team], as it has already been processed
[DEBUG] Skipping annotated class processing of entity [model.Statistic], as it has already been processed
[DEBUG] Skipping annotated class processing of entity [model.Person], as it has already been processed
[DEBUG] Skipping annotated class processing of entity [model.Player], as it has already been processed
[DEBUG] Skipping annotated class processing of entity [model.Coach], as it has already been processed
[DEBUG] Skipping annotated class processing of entity [model.Position], as it has already been processed
[DEBUG] Skipping annotated class processing of entity [model.StatisticType], as it has already been processed
[DEBUG] Mapping collection: model.Team.players -> Players
[TRACE] Normalizing identifier quoting [team]
[DEBUG] Mapped collection : model.Team.players
[DEBUG]    + table -> Teams
[DEBUG]    + key -> team
[DEBUG]    + one-to-many -> model.Player
[DEBUG] Mapping collection: model.Match.statistics -> Statistics
[TRACE] Normalizing identifier quoting [match_id]
[DEBUG] Mapped collection : model.Match.statistics
[DEBUG]    + table -> Matches
[DEBUG]    + key -> match_id
[DEBUG]    + one-to-many -> model.Statistic
[DEBUG] Resolving reference to class: model.Team
[DEBUG] Resolving reference to class: model.Team
[DEBUG] Resolving reference to class: model.Team
[DEBUG] Resolving reference to class: model.Team
[DEBUG] Resolving reference to class: model.Position
[DEBUG] Resolving reference to class: model.StatisticType
[TRACE] Normalizing identifier quoting [type]
[TRACE] Normalizing identifier quoting [FK2qyliqhja59v49q5ih0ya3ccw]
[DEBUG] Resolving reference to class: model.Match
[DEBUG] Resolving reference to class: model.Coach
[DEBUG] Resolving reference to class: model.Team
[DEBUG] Resolving reference to class: model.Team
[DEBUG] Resolving reference to class: model.Team
[DEBUG] Resolving reference to class: model.Team
[DEBUG] Resolving reference to class: model.Position
[DEBUG] Resolving reference to class: model.StatisticType
[DEBUG] Resolving reference to class: model.Match
[DEBUG] Resolving reference to class: model.Coach
[TRACE] Interpreting BatchFetchStyle from setting : null
[TRACE] Initializing service [role=org.hibernate.resource.transaction.spi.TransactionCoordinatorBuilder]
[DEBUG] Building session factory
[DEBUG] SessionFactory name : null
[DEBUG] Automatic flush during beforeCompletion(): enabled
[DEBUG] Automatic session close at end of transaction: disabled
[DEBUG] Statistics: disabled
[DEBUG] Deleted entity synthetic identifier rollback: disabled
[DEBUG] Default entity-mode: pojo
[DEBUG] Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[DEBUG] Allow initialization of lazy state outside session : disabled
[DEBUG] Using BatchFetchStyle : LEGACY
[DEBUG] Default batch fetch size: -1
[DEBUG] Maximum outer join fetch depth: 2
[DEBUG] Default null ordering: NONE
[DEBUG] Order SQL updates by primary key: disabled
[DEBUG] Order SQL inserts for batching: disabled
[DEBUG] multi-tenancy strategy : NONE
[DEBUG] JTA Track by Thread: enabled
[DEBUG] Query language substitutions: {}
[DEBUG] JPA query language strict compliance: disabled
[DEBUG] Named query checking : enabled
[DEBUG] Second-level cache: enabled
[DEBUG] Second-level query cache: disabled
[DEBUG] Second-level query cache factory: org.hibernate.cache.internal.StandardQueryCacheFactory@bb9e6dc
[DEBUG] Second-level cache region prefix: null
[DEBUG] Optimize second-level cache for minimal puts: disabled
[DEBUG] Structured second-level cache entries: disabled
[DEBUG] Second-level cache direct-reference entries: disabled
[DEBUG] Automatic eviction of collection cache: disabled
[DEBUG] JDBC batch size: 15
[DEBUG] JDBC batch updates for versioned data: enabled
[DEBUG] Scrollable result sets: enabled
[DEBUG] Wrap result sets: disabled
[DEBUG] JDBC3 getGeneratedKeys(): enabled
[DEBUG] JDBC result set fetch size: null
[DEBUG] Connection release mode: AFTER_TRANSACTION
[DEBUG] Generate SQL with comments: disabled
[TRACE] Initializing service [role=org.hibernate.service.spi.SessionFactoryServiceRegistryFactory]
[TRACE] Initializing service [role=org.hibernate.event.service.spi.EventListenerRegistry]
[TRACE] Initializing service [role=org.hibernate.engine.spi.CacheImplementor]
[DEBUG] Session factory constructed with filter configurations : {}
[DEBUG] Instantiating session factory with properties: {sun.desktop=windows, hibernate.format_sql=true, awt.toolkit=sun.awt.windows.WToolkit, dialect=org.hibernate.dialect.MySQL5InnoDBDialect, file.encoding.pkg=sun.io, java.specification.version=1.8, sun.cpu.isalist=amd64, hibernate.c3p0.idle_test_period=30, sun.jnu.encoding=Cp1250, hibernate.dialect=org.hibernate.dialect.MySQL5InnoDBDialect, hibernate.c3p0.min_size=5, java.class.path=D:\Code\Szkola\HiberLabJPA2017\Hiber\antlr-2.7.7.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\c3p0-0.9.2.1.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\cdi-api-1.1.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\classmate-1.3.0.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\dom4j-1.6.1.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\el-api-2.2.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\geronimo-jta_1.1_spec-1.1.1.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\hibernate-c3p0-5.2.3.Final.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\hibernate-commons-annotations-5.0.1.Final.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\hibernate-core-5.2.3.Final.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\hibernate-jpa-2.1-api-1.0.0.Final.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\jandex-2.0.0.Final.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\javassist-3.20.0-GA.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\javax.inject-1.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\jboss-interceptors-api_1.1_spec-1.0.0.Beta1.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\jboss-logging-3.3.0.Final.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\jboss-transaction-api_1.2_spec-1.0.1.Final.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\jsr250-api-1.0.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\log4j-1.2.16.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\mchange-commons-java-0.2.3.4.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\mysql-connector-java-5.1.23-bin.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\slf4j-api-1.7.7.jar;D:\Code\Szkola\HiberLabJPA2017\Hiber\slf4j-log4j12-1.7.7.jar;D:\Code\Szkola\HiberLabJPA2017\build\classes, java.vm.vendor=Oracle Corporation, sun.arch.data.model=64, user.variant=, java.vendor.url=http://java.oracle.com/, user.timezone=Europe/Belgrade, os.name=Windows 10, java.vm.specification.version=1.8, current_session_context_class=thread, sun.java.launcher=SUN_STANDARD, user.country=PL, sun.boot.library.path=C:\Program Files\Java\jdk1.8.0_161\jre\bin, sun.java.command=hiberApp.MainApp, sun.cpu.endian=little, user.home=C:\Users\Skrobson, hibernate.c3p0.max_statements=10, user.language=pl, java.specification.vendor=Oracle Corporation, hibernate.cache.provider_class=org.hibernate.cache.internal.NoCachingRegionFactory, java.home=C:\Program Files\Java\jdk1.8.0_161\jre, file.separator=\, line.separator=
, hibernate.c3p0.timeout=300, java.vm.specification.vendor=Oracle Corporation, java.specification.name=Java Platform API Specification, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.Win32GraphicsEnvironment, cache.provider_class=org.hibernate.cache.internal.NoCachingRegionFactory, sun.boot.class.path=C:\Program Files\Java\jdk1.8.0_161\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_161\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_161\jre\classes, hibernate.hbm2ddl.auto=create, user.script=, connection.password=root, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, hibernate.c3p0.max_size=20, java.runtime.version=1.8.0_161-b12, user.name=Skrobson, path.separator=;, hibernate.connection.username=root, os.version=10.0, java.endorsed.dirs=C:\Program Files\Java\jdk1.8.0_161\jre\lib\endorsed, java.runtime.name=Java(TM) SE Runtime Environment, hibernate.connection.url=jdbc:mysql://localhost:6033/ior, connection.pool_size=1, hibernate.ejb.persistenceUnitName=labPU, file.encoding=UTF-8, java.vm.name=Java HotSpot(TM) 64-Bit Server VM, hibernate.show_sql=true, hibernate.current_session_context_class=thread, show_sql=true, hibernate.connection.driver_class=com.mysql.jdbc.Driver, java.vendor.url.bug=http://bugreport.sun.com/bugreport/, java.io.tmpdir=C:\Users\Skrobson\AppData\Local\Temp\, java.version=1.8.0_161, user.dir=D:\Code\Szkola\HiberLabJPA2017, os.arch=amd64, connection.username=root, java.vm.specification.name=Java Virtual Machine Specification, hibernate.connection.password=****, java.awt.printerjob=sun.awt.windows.WPrinterJob, sun.os.patch.level=, connection.driver_class=com.mysql.jdbc.Driver, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.cfgxml.spi.LoadedConfig@4efc25fc, java.library.path=C:\Program Files\Java\jdk1.8.0_161\bin;C:\WINDOWS\Sun\Java\bin;C:\WINDOWS\system32;C:\WINDOWS;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\ProgramData\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;D:\Programy\Git\cmd;%SystemRoot%\system32;%SystemRoot%;%SystemRoot%\System32\Wbem;%SYSTEMROOT%\System32\WindowsPowerShell\v1.0\;%SYSTEMROOT%\System32\OpenSSH\;D:\Programy\Python\Python36\Scripts\;D:\Programy\Python\Python36\;C:\Users\Skrobson\AppData\Local\Microsoft\WindowsApps;C:\Users\Skrobson\AppData\Local\GitHubDesktop\bin;%USERPROFILE%\AppData\Local\Microsoft\WindowsApps;;., java.vendor=Oracle Corporation, java.vm.info=mixed mode, java.vm.version=25.161-b12, hibernate.bytecode.use_reflection_optimizer=false, sun.io.unicode.encoding=UnicodeLittle, java.ext.dirs=C:\Program Files\Java\jdk1.8.0_161\jre\lib\ext;C:\WINDOWS\Sun\Java\lib\ext, hibernate.connection.pool_size=1, connection.url=jdbc:mysql://localhost:6033/ior, java.class.version=52.0}
[TRACE] Initializing service [role=org.hibernate.engine.query.spi.NativeQueryInterpreter]
[DEBUG] Skipping JACC integration as it was not enabled
[TRACE] Registering external cascade style [persist : STYLE_PERSIST_SKIPLAZY]
[DEBUG] External cascade style regsitration [persist : STYLE_PERSIST_SKIPLAZY] overrode base registration [STYLE_PERSIST]
[DEBUG] Instantiated session factory
[TRACE] Initializing service [role=org.hibernate.persister.spi.PersisterFactory]
[TRACE] Initializing service [role=org.hibernate.persister.spi.PersisterClassResolver]
[TRACE] Initializing service [role=org.hibernate.property.access.spi.PropertyAccessStrategyResolver]
[DEBUG] Not known whether passed class name [model.Arena] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Arena
[DEBUG] Not known whether passed class name [model.Arena] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Arena
[TRACE] Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@6d3af739], incoming type = [org.hibernate.type.StringType@6d3af739]
[TRACE] Skipping duplicate registration of path [address], existing type = [org.hibernate.type.StringType@6d3af739], incoming type = [org.hibernate.type.StringType@6d3af739]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[DEBUG] Not known whether passed class name [model.Team] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Team
[DEBUG] Not known whether passed class name [model.Team] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Team
[TRACE] Skipping duplicate registration of path [coach.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@6d3af739], incoming type = [org.hibernate.type.StringType@6d3af739]
[TRACE] Skipping duplicate registration of path [players], existing type = [org.hibernate.type.SetType(model.Team.players)], incoming type = [org.hibernate.type.SetType(model.Team.players)]
[TRACE] Skipping duplicate registration of path [coach], existing type = [org.hibernate.type.ManyToOneType(model.Coach)], incoming type = [org.hibernate.type.ManyToOneType(model.Coach)]
[TRACE] Skipping duplicate registration of path [coach.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [coach.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[DEBUG] Not known whether passed class name [model.Match] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Match
[DEBUG] Not known whether passed class name [model.Match] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Match
[TRACE] Skipping duplicate registration of path [guests.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [host.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [date], existing type = [org.hibernate.type.CalendarType@31206beb], incoming type = [org.hibernate.type.CalendarType@31206beb]
[TRACE] Skipping duplicate registration of path [statistics], existing type = [org.hibernate.type.SetType(model.Match.statistics)], incoming type = [org.hibernate.type.SetType(model.Match.statistics)]
[TRACE] Skipping duplicate registration of path [guests], existing type = [org.hibernate.type.ManyToOneType(model.Team)], incoming type = [org.hibernate.type.ManyToOneType(model.Team)]
[TRACE] Skipping duplicate registration of path [guests.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [guests.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [host], existing type = [org.hibernate.type.ManyToOneType(model.Team)], incoming type = [org.hibernate.type.ManyToOneType(model.Team)]
[TRACE] Skipping duplicate registration of path [host.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [host.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[DEBUG] Not known whether passed class name [model.Statistic] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Statistic
[DEBUG] Not known whether passed class name [model.Statistic] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Statistic
[TRACE] Skipping duplicate registration of path [type.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [value], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [type], existing type = [org.hibernate.type.ManyToOneType(model.StatisticType)], incoming type = [org.hibernate.type.ManyToOneType(model.StatisticType)]
[TRACE] Skipping duplicate registration of path [type.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [type.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[DEBUG] Not known whether passed class name [model.Player] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Player
[DEBUG] Not known whether passed class name [model.Player] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Player
[TRACE] Skipping duplicate registration of path [team.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [position.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@6d3af739], incoming type = [org.hibernate.type.StringType@6d3af739]
[TRACE] Skipping duplicate registration of path [lastname], existing type = [org.hibernate.type.StringType@6d3af739], incoming type = [org.hibernate.type.StringType@6d3af739]
[TRACE] Skipping duplicate registration of path [team], existing type = [org.hibernate.type.ManyToOneType(model.Team)], incoming type = [org.hibernate.type.ManyToOneType(model.Team)]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [position], existing type = [org.hibernate.type.ManyToOneType(model.Position)], incoming type = [org.hibernate.type.ManyToOneType(model.Position)]
[TRACE] Skipping duplicate registration of path [position.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [position.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[DEBUG] Not known whether passed class name [model.Person] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Person
[DEBUG] Not known whether passed class name [model.Person] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Person
[TRACE] Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@6d3af739], incoming type = [org.hibernate.type.StringType@6d3af739]
[TRACE] Skipping duplicate registration of path [lastname], existing type = [org.hibernate.type.StringType@6d3af739], incoming type = [org.hibernate.type.StringType@6d3af739]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[DEBUG] Not known whether passed class name [model.Coach] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Coach
[DEBUG] Not known whether passed class name [model.Coach] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Coach
[TRACE] Skipping duplicate registration of path [team.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@6d3af739], incoming type = [org.hibernate.type.StringType@6d3af739]
[TRACE] Skipping duplicate registration of path [lastname], existing type = [org.hibernate.type.StringType@6d3af739], incoming type = [org.hibernate.type.StringType@6d3af739]
[TRACE] Skipping duplicate registration of path [team], existing type = [org.hibernate.type.ManyToOneType(model.Team)], incoming type = [org.hibernate.type.ManyToOneType(model.Team)]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [team.id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[DEBUG] Not known whether passed class name [model.Position] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Position
[DEBUG] Not known whether passed class name [model.Position] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.Position
[TRACE] Skipping duplicate registration of path [name], existing type = [org.hibernate.type.StringType@6d3af739], incoming type = [org.hibernate.type.StringType@6d3af739]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[DEBUG] Not known whether passed class name [model.StatisticType] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.StatisticType
[DEBUG] Not known whether passed class name [model.StatisticType] is safe
[DEBUG] No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : model.StatisticType
[TRACE] Skipping duplicate registration of path [description], existing type = [org.hibernate.type.StringType@6d3af739], incoming type = [org.hibernate.type.StringType@6d3af739]
[TRACE] Skipping duplicate registration of path [id], existing type = [org.hibernate.type.IntegerType@78186a70], incoming type = [org.hibernate.type.IntegerType@78186a70]
[DEBUG] Static SQL for collection: model.Match.statistics
[DEBUG]  Row insert: update Statistics set match_id=? where ID=?
[DEBUG]  Row update: update Statistics set  where ID=?
[DEBUG]  Row delete: update Statistics set match_id=null where match_id=? and ID=?
[DEBUG]  One-shot delete: update Statistics set match_id=null where match_id=?
[DEBUG] Static SQL for collection: model.Team.players
[DEBUG]  Row insert: update Players set team=? where ID=?
[DEBUG]  Row update: update Players set  where ID=?
[DEBUG]  Row delete: update Players set team=null where team=? and ID=?
[DEBUG]  One-shot delete: update Players set team=null where team=?
[DEBUG] Static SQL for entity: model.Arena
[DEBUG]  Version select: select ID from Arenas where ID =?
[DEBUG]  Snapshot select: select arena_.ID, arena_.name as name2_0_, arena_.surname as surname3_0_ from Arenas arena_ where arena_.ID=?
[DEBUG]  Insert 0: insert into Arenas (name, surname, ID) values (?, ?, ?)
[DEBUG]  Update 0: update Arenas set name=?, surname=? where ID=?
[DEBUG]  Delete 0: delete from Arenas where ID=?
[DEBUG]  Identity insert: insert into Arenas (name, surname) values (?, ?)
[TRACE]  Starting root entity : model.Arena
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c9bdee9]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7afbf561
[TRACE] .. Registering AssociationKey : AssociationKey(table=Arenas, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7afbf561
[TRACE] >> Starting entity identifier : model.Arena
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=address, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7afbf561
[TRACE]  Finished root entity : model.Arena
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Arena)
    - Returns
       - EntityReturnImpl(entity=model.Arena, querySpaceUid=<gen:0>, path=model.Arena)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Arena)
          - SQL table alias mapping - arena0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

[DEBUG] Static select for entity model.Arena [NONE]: select arena0_.ID as ID1_0_0_, arena0_.name as name2_0_0_, arena0_.surname as surname3_0_0_ from Arenas arena0_ where arena0_.ID=?
[TRACE]  Starting root entity : model.Arena
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f98635e]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@49c8f6e8
[TRACE] .. Registering AssociationKey : AssociationKey(table=Arenas, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@49c8f6e8
[TRACE] >> Starting entity identifier : model.Arena
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=address, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@49c8f6e8
[TRACE]  Finished root entity : model.Arena
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Arena)
    - Returns
       - EntityReturnImpl(entity=model.Arena, querySpaceUid=<gen:0>, path=model.Arena)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Arena)
          - SQL table alias mapping - arena0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

[DEBUG] Static select for entity model.Arena [READ]: select arena0_.ID as ID1_0_0_, arena0_.name as name2_0_0_, arena0_.surname as surname3_0_0_ from Arenas arena0_ where arena0_.ID=?
[TRACE]  Starting root entity : model.Arena
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b0615ae]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4e73b552
[TRACE] .. Registering AssociationKey : AssociationKey(table=Arenas, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4e73b552
[TRACE] >> Starting entity identifier : model.Arena
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=address, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4e73b552
[TRACE]  Finished root entity : model.Arena
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Arena)
    - Returns
       - EntityReturnImpl(entity=model.Arena, querySpaceUid=<gen:0>, path=model.Arena)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Arena)
          - SQL table alias mapping - arena0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

[DEBUG] Static select for entity model.Arena [UPGRADE]: select arena0_.ID as ID1_0_0_, arena0_.name as name2_0_0_, arena0_.surname as surname3_0_0_ from Arenas arena0_ where arena0_.ID=? for update
[TRACE]  Starting root entity : model.Arena
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@221dad51]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2cec704c
[TRACE] .. Registering AssociationKey : AssociationKey(table=Arenas, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2cec704c
[TRACE] >> Starting entity identifier : model.Arena
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=address, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2cec704c
[TRACE]  Finished root entity : model.Arena
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Arena)
    - Returns
       - EntityReturnImpl(entity=model.Arena, querySpaceUid=<gen:0>, path=model.Arena)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Arena)
          - SQL table alias mapping - arena0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

[DEBUG] Static select for entity model.Arena [UPGRADE_NOWAIT]: select arena0_.ID as ID1_0_0_, arena0_.name as name2_0_0_, arena0_.surname as surname3_0_0_ from Arenas arena0_ where arena0_.ID=? for update
[TRACE]  Starting root entity : model.Arena
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@771cbb1a]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2416498e
[TRACE] .. Registering AssociationKey : AssociationKey(table=Arenas, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2416498e
[TRACE] >> Starting entity identifier : model.Arena
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=address, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2416498e
[TRACE]  Finished root entity : model.Arena
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Arena)
    - Returns
       - EntityReturnImpl(entity=model.Arena, querySpaceUid=<gen:0>, path=model.Arena)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Arena)
          - SQL table alias mapping - arena0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

[DEBUG] Static select for entity model.Arena [UPGRADE_SKIPLOCKED]: select arena0_.ID as ID1_0_0_, arena0_.name as name2_0_0_, arena0_.surname as surname3_0_0_ from Arenas arena0_ where arena0_.ID=? for update
[TRACE]  Starting root entity : model.Arena
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6b2e0f78]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@240f6c41
[TRACE] .. Registering AssociationKey : AssociationKey(table=Arenas, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@240f6c41
[TRACE] >> Starting entity identifier : model.Arena
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=address, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@240f6c41
[TRACE]  Finished root entity : model.Arena
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Arena)
    - Returns
       - EntityReturnImpl(entity=model.Arena, querySpaceUid=<gen:0>, path=model.Arena)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Arena)
          - SQL table alias mapping - arena0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

[DEBUG] Static select for entity model.Arena [FORCE]: select arena0_.ID as ID1_0_0_, arena0_.name as name2_0_0_, arena0_.surname as surname3_0_0_ from Arenas arena0_ where arena0_.ID=? for update
[TRACE]  Starting root entity : model.Arena
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3659d7b1]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2015b2cd
[TRACE] .. Registering AssociationKey : AssociationKey(table=Arenas, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2015b2cd
[TRACE] >> Starting entity identifier : model.Arena
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=address, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2015b2cd
[TRACE]  Finished root entity : model.Arena
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Arena)
    - Returns
       - EntityReturnImpl(entity=model.Arena, querySpaceUid=<gen:0>, path=model.Arena)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Arena)
          - SQL table alias mapping - arena0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

[DEBUG] Static select for entity model.Arena [PESSIMISTIC_READ]: select arena0_.ID as ID1_0_0_, arena0_.name as name2_0_0_, arena0_.surname as surname3_0_0_ from Arenas arena0_ where arena0_.ID=? lock in share mode
[TRACE]  Starting root entity : model.Arena
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bdb2c78]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@64693226
[TRACE] .. Registering AssociationKey : AssociationKey(table=Arenas, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@64693226
[TRACE] >> Starting entity identifier : model.Arena
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=address, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@64693226
[TRACE]  Finished root entity : model.Arena
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Arena)
    - Returns
       - EntityReturnImpl(entity=model.Arena, querySpaceUid=<gen:0>, path=model.Arena)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Arena)
          - SQL table alias mapping - arena0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

[DEBUG] Static select for entity model.Arena [PESSIMISTIC_WRITE]: select arena0_.ID as ID1_0_0_, arena0_.name as name2_0_0_, arena0_.surname as surname3_0_0_ from Arenas arena0_ where arena0_.ID=? for update
[TRACE]  Starting root entity : model.Arena
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c758545]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@117bcfdc
[TRACE] .. Registering AssociationKey : AssociationKey(table=Arenas, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@117bcfdc
[TRACE] >> Starting entity identifier : model.Arena
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=address, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@117bcfdc
[TRACE]  Finished root entity : model.Arena
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Arena)
    - Returns
       - EntityReturnImpl(entity=model.Arena, querySpaceUid=<gen:0>, path=model.Arena)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Arena)
          - SQL table alias mapping - arena0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

[DEBUG] Static select for entity model.Arena [PESSIMISTIC_FORCE_INCREMENT]: select arena0_.ID as ID1_0_0_, arena0_.name as name2_0_0_, arena0_.surname as surname3_0_0_ from Arenas arena0_ where arena0_.ID=? for update
[TRACE]  Starting root entity : model.Arena
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73a19967]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5e746d37
[TRACE] .. Registering AssociationKey : AssociationKey(table=Arenas, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5e746d37
[TRACE] >> Starting entity identifier : model.Arena
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=address, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5e746d37
[TRACE]  Finished root entity : model.Arena
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Arena)
    - Returns
       - EntityReturnImpl(entity=model.Arena, querySpaceUid=<gen:0>, path=model.Arena)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Arena)
          - SQL table alias mapping - arena0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

[DEBUG] Static select for entity model.Arena [OPTIMISTIC]: select arena0_.ID as ID1_0_0_, arena0_.name as name2_0_0_, arena0_.surname as surname3_0_0_ from Arenas arena0_ where arena0_.ID=?
[TRACE]  Starting root entity : model.Arena
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6e1b9411]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@21d1b321
[TRACE] .. Registering AssociationKey : AssociationKey(table=Arenas, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@21d1b321
[TRACE] >> Starting entity identifier : model.Arena
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : address
[TRACE] >> Starting attribute Attribute(name=address, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=address, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@21d1b321
[TRACE]  Finished root entity : model.Arena
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Arena)
    - Returns
       - EntityReturnImpl(entity=model.Arena, querySpaceUid=<gen:0>, path=model.Arena)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Arena)
          - SQL table alias mapping - arena0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_0_0_}

[DEBUG] Static select for entity model.Arena [OPTIMISTIC_FORCE_INCREMENT]: select arena0_.ID as ID1_0_0_, arena0_.name as name2_0_0_, arena0_.surname as surname3_0_0_ from Arenas arena0_ where arena0_.ID=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Arena: select arena0_.ID as ID1_0_0_, arena0_.name as name2_0_0_, arena0_.surname as surname3_0_0_ from Arenas arena0_ where arena0_.ID=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Arena: select arena0_.ID as ID1_0_0_, arena0_.name as name2_0_0_, arena0_.surname as surname3_0_0_ from Arenas arena0_ where arena0_.ID=?
[DEBUG] Static SQL for entity: model.Team
[DEBUG]  Version select: select ID from Teams where ID =?
[DEBUG]  Snapshot select: select team_.ID, team_.name as name2_8_, team_.coach as coach3_8_ from Teams team_ where team_.ID=?
[DEBUG]  Insert 0: insert into Teams (name, coach, ID) values (?, ?, ?)
[DEBUG]  Update 0: update Teams set name=?, coach=? where ID=?
[DEBUG]  Delete 0: delete from Teams where ID=?
[DEBUG]  Identity insert: insert into Teams (name, coach) values (?, ?)
[TRACE]  Starting root entity : model.Team
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5ec46cdd]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2324bfe7
[TRACE] .. Registering AssociationKey : AssociationKey(table=Teams, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2324bfe7
[TRACE] >> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : players
[TRACE] >> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@112d1c8e]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d49fd31]
[TRACE] << Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Visiting attribute path : coach
[TRACE] >> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4016ccc1]
[TRACE] << Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2324bfe7
[TRACE]  Finished root entity : model.Team
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Team)
    - Returns
       - EntityReturnImpl(entity=model.Team, querySpaceUid=<gen:0>, path=model.Team)
          - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:1>, path=model.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:2>, path=model.Team.players.<elements>)
          - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:3>, path=model.Team.coach)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_8_0_}

[DEBUG] Static select for entity model.Team [NONE]: select team0_.ID as ID1_8_0_, team0_.name as name2_8_0_, team0_.coach as coach3_8_0_ from Teams team0_ where team0_.ID=?
[TRACE]  Starting root entity : model.Team
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46cb98a3]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3ffb3598
[TRACE] .. Registering AssociationKey : AssociationKey(table=Teams, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3ffb3598
[TRACE] >> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : players
[TRACE] >> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4da9f723]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3b2f4a93]
[TRACE] << Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Visiting attribute path : coach
[TRACE] >> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@213bd3d5]
[TRACE] << Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3ffb3598
[TRACE]  Finished root entity : model.Team
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Team)
    - Returns
       - EntityReturnImpl(entity=model.Team, querySpaceUid=<gen:0>, path=model.Team)
          - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:1>, path=model.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:2>, path=model.Team.players.<elements>)
          - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:3>, path=model.Team.coach)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_8_0_}

[DEBUG] Static select for entity model.Team [READ]: select team0_.ID as ID1_8_0_, team0_.name as name2_8_0_, team0_.coach as coach3_8_0_ from Teams team0_ where team0_.ID=?
[TRACE]  Starting root entity : model.Team
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@470a659f]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@451882b2
[TRACE] .. Registering AssociationKey : AssociationKey(table=Teams, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@451882b2
[TRACE] >> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : players
[TRACE] >> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4a23350]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7b78ed6a]
[TRACE] << Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Visiting attribute path : coach
[TRACE] >> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fca5907]
[TRACE] << Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@451882b2
[TRACE]  Finished root entity : model.Team
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Team)
    - Returns
       - EntityReturnImpl(entity=model.Team, querySpaceUid=<gen:0>, path=model.Team)
          - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:1>, path=model.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:2>, path=model.Team.players.<elements>)
          - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:3>, path=model.Team.coach)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_8_0_}

[DEBUG] Static select for entity model.Team [UPGRADE]: select team0_.ID as ID1_8_0_, team0_.name as name2_8_0_, team0_.coach as coach3_8_0_ from Teams team0_ where team0_.ID=? for update
[TRACE]  Starting root entity : model.Team
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ec65b5e]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7bebcd65
[TRACE] .. Registering AssociationKey : AssociationKey(table=Teams, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7bebcd65
[TRACE] >> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : players
[TRACE] >> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@47447ccf]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7afb1741]
[TRACE] << Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Visiting attribute path : coach
[TRACE] >> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@263bbfeb]
[TRACE] << Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7bebcd65
[TRACE]  Finished root entity : model.Team
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Team)
    - Returns
       - EntityReturnImpl(entity=model.Team, querySpaceUid=<gen:0>, path=model.Team)
          - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:1>, path=model.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:2>, path=model.Team.players.<elements>)
          - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:3>, path=model.Team.coach)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_8_0_}

[DEBUG] Static select for entity model.Team [UPGRADE_NOWAIT]: select team0_.ID as ID1_8_0_, team0_.name as name2_8_0_, team0_.coach as coach3_8_0_ from Teams team0_ where team0_.ID=? for update
[TRACE]  Starting root entity : model.Team
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@31edeac]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@67d86804
[TRACE] .. Registering AssociationKey : AssociationKey(table=Teams, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@67d86804
[TRACE] >> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : players
[TRACE] >> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@45bb2aa1]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e84111a]
[TRACE] << Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Visiting attribute path : coach
[TRACE] >> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4b1a43d8]
[TRACE] << Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@67d86804
[TRACE]  Finished root entity : model.Team
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Team)
    - Returns
       - EntityReturnImpl(entity=model.Team, querySpaceUid=<gen:0>, path=model.Team)
          - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:1>, path=model.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:2>, path=model.Team.players.<elements>)
          - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:3>, path=model.Team.coach)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_8_0_}

[DEBUG] Static select for entity model.Team [UPGRADE_SKIPLOCKED]: select team0_.ID as ID1_8_0_, team0_.name as name2_8_0_, team0_.coach as coach3_8_0_ from Teams team0_ where team0_.ID=? for update
[TRACE]  Starting root entity : model.Team
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6fa69af7]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@73545b80
[TRACE] .. Registering AssociationKey : AssociationKey(table=Teams, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@73545b80
[TRACE] >> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : players
[TRACE] >> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6d469831]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@74db12c2]
[TRACE] << Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Visiting attribute path : coach
[TRACE] >> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2ff15f8c]
[TRACE] << Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@73545b80
[TRACE]  Finished root entity : model.Team
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Team)
    - Returns
       - EntityReturnImpl(entity=model.Team, querySpaceUid=<gen:0>, path=model.Team)
          - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:1>, path=model.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:2>, path=model.Team.players.<elements>)
          - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:3>, path=model.Team.coach)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_8_0_}

[DEBUG] Static select for entity model.Team [FORCE]: select team0_.ID as ID1_8_0_, team0_.name as name2_8_0_, team0_.coach as coach3_8_0_ from Teams team0_ where team0_.ID=? for update
[TRACE]  Starting root entity : model.Team
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ea899a9]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2776015d
[TRACE] .. Registering AssociationKey : AssociationKey(table=Teams, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2776015d
[TRACE] >> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : players
[TRACE] >> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@b174a73]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e3f79a2]
[TRACE] << Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Visiting attribute path : coach
[TRACE] >> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1460c81d]
[TRACE] << Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2776015d
[TRACE]  Finished root entity : model.Team
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Team)
    - Returns
       - EntityReturnImpl(entity=model.Team, querySpaceUid=<gen:0>, path=model.Team)
          - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:1>, path=model.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:2>, path=model.Team.players.<elements>)
          - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:3>, path=model.Team.coach)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_8_0_}

[DEBUG] Static select for entity model.Team [PESSIMISTIC_READ]: select team0_.ID as ID1_8_0_, team0_.name as name2_8_0_, team0_.coach as coach3_8_0_ from Teams team0_ where team0_.ID=? lock in share mode
[TRACE]  Starting root entity : model.Team
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38b5f25]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@327ed9f5
[TRACE] .. Registering AssociationKey : AssociationKey(table=Teams, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@327ed9f5
[TRACE] >> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : players
[TRACE] >> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@67594471]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@756b58a7]
[TRACE] << Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Visiting attribute path : coach
[TRACE] >> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cc04358]
[TRACE] << Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@327ed9f5
[TRACE]  Finished root entity : model.Team
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Team)
    - Returns
       - EntityReturnImpl(entity=model.Team, querySpaceUid=<gen:0>, path=model.Team)
          - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:1>, path=model.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:2>, path=model.Team.players.<elements>)
          - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:3>, path=model.Team.coach)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_8_0_}

[DEBUG] Static select for entity model.Team [PESSIMISTIC_WRITE]: select team0_.ID as ID1_8_0_, team0_.name as name2_8_0_, team0_.coach as coach3_8_0_ from Teams team0_ where team0_.ID=? for update
[TRACE]  Starting root entity : model.Team
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68b58644]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@45e22def
[TRACE] .. Registering AssociationKey : AssociationKey(table=Teams, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@45e22def
[TRACE] >> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : players
[TRACE] >> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@6ae3fb94]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4417af13]
[TRACE] << Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Visiting attribute path : coach
[TRACE] >> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@d48673]
[TRACE] << Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@45e22def
[TRACE]  Finished root entity : model.Team
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Team)
    - Returns
       - EntityReturnImpl(entity=model.Team, querySpaceUid=<gen:0>, path=model.Team)
          - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:1>, path=model.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:2>, path=model.Team.players.<elements>)
          - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:3>, path=model.Team.coach)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_8_0_}

[DEBUG] Static select for entity model.Team [PESSIMISTIC_FORCE_INCREMENT]: select team0_.ID as ID1_8_0_, team0_.name as name2_8_0_, team0_.coach as coach3_8_0_ from Teams team0_ where team0_.ID=? for update
[TRACE]  Starting root entity : model.Team
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@548d5ed3]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@21c7208d
[TRACE] .. Registering AssociationKey : AssociationKey(table=Teams, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@21c7208d
[TRACE] >> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : players
[TRACE] >> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@58516c91]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c129ef6]
[TRACE] << Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Visiting attribute path : coach
[TRACE] >> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@42d73c61]
[TRACE] << Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@21c7208d
[TRACE]  Finished root entity : model.Team
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Team)
    - Returns
       - EntityReturnImpl(entity=model.Team, querySpaceUid=<gen:0>, path=model.Team)
          - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:1>, path=model.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:2>, path=model.Team.players.<elements>)
          - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:3>, path=model.Team.coach)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_8_0_}

[DEBUG] Static select for entity model.Team [OPTIMISTIC]: select team0_.ID as ID1_8_0_, team0_.name as name2_8_0_, team0_.coach as coach3_8_0_ from Teams team0_ where team0_.ID=?
[TRACE]  Starting root entity : model.Team
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5a8cbffe]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@96a75da
[TRACE] .. Registering AssociationKey : AssociationKey(table=Teams, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@96a75da
[TRACE] >> Starting entity identifier : model.Team
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : players
[TRACE] >> Starting attribute Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@61e7bf2f]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1a28b346]
[TRACE] << Finishing up attribute : Attribute(name=players, type=java.util.Set(model.Team.players) [non-identifier,association])
[DEBUG] Visiting attribute path : coach
[TRACE] >> Starting attribute Attribute(name=coach, type=model.Coach [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25e49cb2]
[TRACE] << Finishing up attribute : Attribute(name=coach, type=model.Coach [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@96a75da
[TRACE]  Finished root entity : model.Team
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Team)
    - Returns
       - EntityReturnImpl(entity=model.Team, querySpaceUid=<gen:0>, path=model.Team)
          - CollectionAttributeFetchImpl(collection=model.Team.players, querySpaceUid=<gen:1>, path=model.Team.players)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:2>, path=model.Team.players.<elements>)
          - EntityAttributeFetchImpl(entity=model.Coach, querySpaceUid=<gen:3>, path=model.Team.coach)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Team)
          - SQL table alias mapping - team0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_8_0_}

[DEBUG] Static select for entity model.Team [OPTIMISTIC_FORCE_INCREMENT]: select team0_.ID as ID1_8_0_, team0_.name as name2_8_0_, team0_.coach as coach3_8_0_ from Teams team0_ where team0_.ID=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Team: select team0_.ID as ID1_8_2_, team0_.name as name2_8_2_, team0_.coach as coach3_8_2_, coach1_.ID as ID1_1_0_, coach1_.name as name2_1_0_, coach1_.lastname as lastname3_1_0_, coach1_.team as team4_1_0_, team2_.ID as ID1_8_1_, team2_.name as name2_8_1_, team2_.coach as coach3_8_1_ from Teams team0_ left outer join Coaches coach1_ on team0_.coach=coach1_.ID left outer join Teams team2_ on coach1_.team=team2_.ID where team0_.ID=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Team: select team0_.ID as ID1_8_2_, team0_.name as name2_8_2_, team0_.coach as coach3_8_2_, coach1_.ID as ID1_1_0_, coach1_.name as name2_1_0_, coach1_.lastname as lastname3_1_0_, coach1_.team as team4_1_0_, team2_.ID as ID1_8_1_, team2_.name as name2_8_1_, team2_.coach as coach3_8_1_ from Teams team0_ left outer join Coaches coach1_ on team0_.coach=coach1_.ID left outer join Teams team2_ on coach1_.team=team2_.ID where team0_.ID=?
[DEBUG] Static SQL for entity: model.Match
[DEBUG]  Version select: select ID from Matches where ID =?
[DEBUG]  Snapshot select: select match_.ID, match_.Date as Date2_2_, match_.guests as guests3_2_, match_.host as host4_2_ from Matches match_ where match_.ID=?
[DEBUG]  Insert 0: insert into Matches (Date, guests, host, ID) values (?, ?, ?, ?)
[DEBUG]  Update 0: update Matches set Date=?, guests=?, host=? where ID=?
[DEBUG]  Delete 0: delete from Matches where ID=?
[DEBUG]  Identity insert: insert into Matches (Date, guests, host) values (?, ?, ?)
[TRACE]  Starting root entity : model.Match
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c551ad4]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7d5508e0
[TRACE] .. Registering AssociationKey : AssociationKey(table=Matches, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7d5508e0
[TRACE] >> Starting entity identifier : model.Match
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=calendar [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=calendar [non-identifier])
[DEBUG] Visiting attribute path : statistics
[TRACE] >> Starting attribute Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@554cd74a]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37ed010a]
[TRACE] << Finishing up attribute : Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Visiting attribute path : guests
[TRACE] >> Starting attribute Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@633a2e99]
[TRACE] << Finishing up attribute : Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : host
[TRACE] >> Starting attribute Attribute(name=host, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@367d2816]
[TRACE] << Finishing up attribute : Attribute(name=host, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7d5508e0
[TRACE]  Finished root entity : model.Match
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Match)
    - Returns
       - EntityReturnImpl(entity=model.Match, querySpaceUid=<gen:0>, path=model.Match)
          - CollectionAttributeFetchImpl(collection=model.Match.statistics, querySpaceUid=<gen:1>, path=model.Match.statistics)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Statistic, querySpaceUid=<gen:2>, path=model.Match.statistics.<elements>)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:3>, path=model.Match.guests)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:4>, path=model.Match.host)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Match)
          - SQL table alias mapping - match0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_2_0_}

[DEBUG] Static select for entity model.Match [NONE]: select match0_.ID as ID1_2_0_, match0_.Date as Date2_2_0_, match0_.guests as guests3_2_0_, match0_.host as host4_2_0_ from Matches match0_ where match0_.ID=?
[TRACE]  Starting root entity : model.Match
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b84f14]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5a82ebf8
[TRACE] .. Registering AssociationKey : AssociationKey(table=Matches, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5a82ebf8
[TRACE] >> Starting entity identifier : model.Match
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=calendar [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=calendar [non-identifier])
[DEBUG] Visiting attribute path : statistics
[TRACE] >> Starting attribute Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@68fe48d7]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@379ce046]
[TRACE] << Finishing up attribute : Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Visiting attribute path : guests
[TRACE] >> Starting attribute Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@701bc94e]
[TRACE] << Finishing up attribute : Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : host
[TRACE] >> Starting attribute Attribute(name=host, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d8b319e]
[TRACE] << Finishing up attribute : Attribute(name=host, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5a82ebf8
[TRACE]  Finished root entity : model.Match
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Match)
    - Returns
       - EntityReturnImpl(entity=model.Match, querySpaceUid=<gen:0>, path=model.Match)
          - CollectionAttributeFetchImpl(collection=model.Match.statistics, querySpaceUid=<gen:1>, path=model.Match.statistics)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Statistic, querySpaceUid=<gen:2>, path=model.Match.statistics.<elements>)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:3>, path=model.Match.guests)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:4>, path=model.Match.host)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Match)
          - SQL table alias mapping - match0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_2_0_}

[DEBUG] Static select for entity model.Match [READ]: select match0_.ID as ID1_2_0_, match0_.Date as Date2_2_0_, match0_.guests as guests3_2_0_, match0_.host as host4_2_0_ from Matches match0_ where match0_.ID=?
[TRACE]  Starting root entity : model.Match
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27a97e08]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@77e7246b
[TRACE] .. Registering AssociationKey : AssociationKey(table=Matches, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@77e7246b
[TRACE] >> Starting entity identifier : model.Match
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=calendar [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=calendar [non-identifier])
[DEBUG] Visiting attribute path : statistics
[TRACE] >> Starting attribute Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@5918c260]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3d7b1f1c]
[TRACE] << Finishing up attribute : Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Visiting attribute path : guests
[TRACE] >> Starting attribute Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51ce6f85]
[TRACE] << Finishing up attribute : Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : host
[TRACE] >> Starting attribute Attribute(name=host, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1f44ddab]
[TRACE] << Finishing up attribute : Attribute(name=host, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@77e7246b
[TRACE]  Finished root entity : model.Match
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Match)
    - Returns
       - EntityReturnImpl(entity=model.Match, querySpaceUid=<gen:0>, path=model.Match)
          - CollectionAttributeFetchImpl(collection=model.Match.statistics, querySpaceUid=<gen:1>, path=model.Match.statistics)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Statistic, querySpaceUid=<gen:2>, path=model.Match.statistics.<elements>)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:3>, path=model.Match.guests)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:4>, path=model.Match.host)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Match)
          - SQL table alias mapping - match0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_2_0_}

[DEBUG] Static select for entity model.Match [UPGRADE]: select match0_.ID as ID1_2_0_, match0_.Date as Date2_2_0_, match0_.guests as guests3_2_0_, match0_.host as host4_2_0_ from Matches match0_ where match0_.ID=? for update
[TRACE]  Starting root entity : model.Match
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5017e1]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@65b66b08
[TRACE] .. Registering AssociationKey : AssociationKey(table=Matches, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@65b66b08
[TRACE] >> Starting entity identifier : model.Match
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=calendar [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=calendar [non-identifier])
[DEBUG] Visiting attribute path : statistics
[TRACE] >> Starting attribute Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4726927c]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7eb6b6b6]
[TRACE] << Finishing up attribute : Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Visiting attribute path : guests
[TRACE] >> Starting attribute Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7ed9499e]
[TRACE] << Finishing up attribute : Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : host
[TRACE] >> Starting attribute Attribute(name=host, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28e19366]
[TRACE] << Finishing up attribute : Attribute(name=host, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@65b66b08
[TRACE]  Finished root entity : model.Match
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Match)
    - Returns
       - EntityReturnImpl(entity=model.Match, querySpaceUid=<gen:0>, path=model.Match)
          - CollectionAttributeFetchImpl(collection=model.Match.statistics, querySpaceUid=<gen:1>, path=model.Match.statistics)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Statistic, querySpaceUid=<gen:2>, path=model.Match.statistics.<elements>)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:3>, path=model.Match.guests)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:4>, path=model.Match.host)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Match)
          - SQL table alias mapping - match0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_2_0_}

[DEBUG] Static select for entity model.Match [UPGRADE_NOWAIT]: select match0_.ID as ID1_2_0_, match0_.Date as Date2_2_0_, match0_.guests as guests3_2_0_, match0_.host as host4_2_0_ from Matches match0_ where match0_.ID=? for update
[TRACE]  Starting root entity : model.Match
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5b275174]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@10ef5fa0
[TRACE] .. Registering AssociationKey : AssociationKey(table=Matches, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@10ef5fa0
[TRACE] >> Starting entity identifier : model.Match
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=calendar [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=calendar [non-identifier])
[DEBUG] Visiting attribute path : statistics
[TRACE] >> Starting attribute Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@244e619a]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10acd6]
[TRACE] << Finishing up attribute : Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Visiting attribute path : guests
[TRACE] >> Starting attribute Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@61dde151]
[TRACE] << Finishing up attribute : Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : host
[TRACE] >> Starting attribute Attribute(name=host, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b25b095]
[TRACE] << Finishing up attribute : Attribute(name=host, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@10ef5fa0
[TRACE]  Finished root entity : model.Match
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Match)
    - Returns
       - EntityReturnImpl(entity=model.Match, querySpaceUid=<gen:0>, path=model.Match)
          - CollectionAttributeFetchImpl(collection=model.Match.statistics, querySpaceUid=<gen:1>, path=model.Match.statistics)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Statistic, querySpaceUid=<gen:2>, path=model.Match.statistics.<elements>)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:3>, path=model.Match.guests)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:4>, path=model.Match.host)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Match)
          - SQL table alias mapping - match0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_2_0_}

[DEBUG] Static select for entity model.Match [UPGRADE_SKIPLOCKED]: select match0_.ID as ID1_2_0_, match0_.Date as Date2_2_0_, match0_.guests as guests3_2_0_, match0_.host as host4_2_0_ from Matches match0_ where match0_.ID=? for update
[TRACE]  Starting root entity : model.Match
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5cb042da]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@59c33386
[TRACE] .. Registering AssociationKey : AssociationKey(table=Matches, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@59c33386
[TRACE] >> Starting entity identifier : model.Match
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=calendar [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=calendar [non-identifier])
[DEBUG] Visiting attribute path : statistics
[TRACE] >> Starting attribute Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@571a9686]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@719d35e8]
[TRACE] << Finishing up attribute : Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Visiting attribute path : guests
[TRACE] >> Starting attribute Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2f651f93]
[TRACE] << Finishing up attribute : Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : host
[TRACE] >> Starting attribute Attribute(name=host, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ffa56fa]
[TRACE] << Finishing up attribute : Attribute(name=host, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@59c33386
[TRACE]  Finished root entity : model.Match
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Match)
    - Returns
       - EntityReturnImpl(entity=model.Match, querySpaceUid=<gen:0>, path=model.Match)
          - CollectionAttributeFetchImpl(collection=model.Match.statistics, querySpaceUid=<gen:1>, path=model.Match.statistics)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Statistic, querySpaceUid=<gen:2>, path=model.Match.statistics.<elements>)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:3>, path=model.Match.guests)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:4>, path=model.Match.host)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Match)
          - SQL table alias mapping - match0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_2_0_}

[DEBUG] Static select for entity model.Match [FORCE]: select match0_.ID as ID1_2_0_, match0_.Date as Date2_2_0_, match0_.guests as guests3_2_0_, match0_.host as host4_2_0_ from Matches match0_ where match0_.ID=? for update
[TRACE]  Starting root entity : model.Match
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c575325]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@747d1932
[TRACE] .. Registering AssociationKey : AssociationKey(table=Matches, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@747d1932
[TRACE] >> Starting entity identifier : model.Match
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=calendar [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=calendar [non-identifier])
[DEBUG] Visiting attribute path : statistics
[TRACE] >> Starting attribute Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@736309a9]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e93dcb9]
[TRACE] << Finishing up attribute : Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Visiting attribute path : guests
[TRACE] >> Starting attribute Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@188b6035]
[TRACE] << Finishing up attribute : Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : host
[TRACE] >> Starting attribute Attribute(name=host, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4a34e9f]
[TRACE] << Finishing up attribute : Attribute(name=host, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@747d1932
[TRACE]  Finished root entity : model.Match
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Match)
    - Returns
       - EntityReturnImpl(entity=model.Match, querySpaceUid=<gen:0>, path=model.Match)
          - CollectionAttributeFetchImpl(collection=model.Match.statistics, querySpaceUid=<gen:1>, path=model.Match.statistics)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Statistic, querySpaceUid=<gen:2>, path=model.Match.statistics.<elements>)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:3>, path=model.Match.guests)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:4>, path=model.Match.host)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Match)
          - SQL table alias mapping - match0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_2_0_}

[DEBUG] Static select for entity model.Match [PESSIMISTIC_READ]: select match0_.ID as ID1_2_0_, match0_.Date as Date2_2_0_, match0_.guests as guests3_2_0_, match0_.host as host4_2_0_ from Matches match0_ where match0_.ID=? lock in share mode
[TRACE]  Starting root entity : model.Match
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6f6621e3]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3fc05ea2
[TRACE] .. Registering AssociationKey : AssociationKey(table=Matches, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3fc05ea2
[TRACE] >> Starting entity identifier : model.Match
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=calendar [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=calendar [non-identifier])
[DEBUG] Visiting attribute path : statistics
[TRACE] >> Starting attribute Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@7c891ba7]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6240651f]
[TRACE] << Finishing up attribute : Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Visiting attribute path : guests
[TRACE] >> Starting attribute Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3cf7298d]
[TRACE] << Finishing up attribute : Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : host
[TRACE] >> Starting attribute Attribute(name=host, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1ff55ff]
[TRACE] << Finishing up attribute : Attribute(name=host, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3fc05ea2
[TRACE]  Finished root entity : model.Match
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Match)
    - Returns
       - EntityReturnImpl(entity=model.Match, querySpaceUid=<gen:0>, path=model.Match)
          - CollectionAttributeFetchImpl(collection=model.Match.statistics, querySpaceUid=<gen:1>, path=model.Match.statistics)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Statistic, querySpaceUid=<gen:2>, path=model.Match.statistics.<elements>)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:3>, path=model.Match.guests)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:4>, path=model.Match.host)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Match)
          - SQL table alias mapping - match0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_2_0_}

[DEBUG] Static select for entity model.Match [PESSIMISTIC_WRITE]: select match0_.ID as ID1_2_0_, match0_.Date as Date2_2_0_, match0_.guests as guests3_2_0_, match0_.host as host4_2_0_ from Matches match0_ where match0_.ID=? for update
[TRACE]  Starting root entity : model.Match
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@351f2244]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5496c165
[TRACE] .. Registering AssociationKey : AssociationKey(table=Matches, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5496c165
[TRACE] >> Starting entity identifier : model.Match
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=calendar [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=calendar [non-identifier])
[DEBUG] Visiting attribute path : statistics
[TRACE] >> Starting attribute Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@51a8313b]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2a03d65c]
[TRACE] << Finishing up attribute : Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Visiting attribute path : guests
[TRACE] >> Starting attribute Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6642dc5a]
[TRACE] << Finishing up attribute : Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : host
[TRACE] >> Starting attribute Attribute(name=host, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43da41e]
[TRACE] << Finishing up attribute : Attribute(name=host, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5496c165
[TRACE]  Finished root entity : model.Match
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Match)
    - Returns
       - EntityReturnImpl(entity=model.Match, querySpaceUid=<gen:0>, path=model.Match)
          - CollectionAttributeFetchImpl(collection=model.Match.statistics, querySpaceUid=<gen:1>, path=model.Match.statistics)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Statistic, querySpaceUid=<gen:2>, path=model.Match.statistics.<elements>)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:3>, path=model.Match.guests)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:4>, path=model.Match.host)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Match)
          - SQL table alias mapping - match0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_2_0_}

[DEBUG] Static select for entity model.Match [PESSIMISTIC_FORCE_INCREMENT]: select match0_.ID as ID1_2_0_, match0_.Date as Date2_2_0_, match0_.guests as guests3_2_0_, match0_.host as host4_2_0_ from Matches match0_ where match0_.ID=? for update
[TRACE]  Starting root entity : model.Match
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@148c7c4b]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2009f9b0
[TRACE] .. Registering AssociationKey : AssociationKey(table=Matches, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2009f9b0
[TRACE] >> Starting entity identifier : model.Match
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=calendar [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=calendar [non-identifier])
[DEBUG] Visiting attribute path : statistics
[TRACE] >> Starting attribute Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@50d951e7]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@39ad12b6]
[TRACE] << Finishing up attribute : Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Visiting attribute path : guests
[TRACE] >> Starting attribute Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4eb45fec]
[TRACE] << Finishing up attribute : Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : host
[TRACE] >> Starting attribute Attribute(name=host, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@211febf3]
[TRACE] << Finishing up attribute : Attribute(name=host, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2009f9b0
[TRACE]  Finished root entity : model.Match
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Match)
    - Returns
       - EntityReturnImpl(entity=model.Match, querySpaceUid=<gen:0>, path=model.Match)
          - CollectionAttributeFetchImpl(collection=model.Match.statistics, querySpaceUid=<gen:1>, path=model.Match.statistics)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Statistic, querySpaceUid=<gen:2>, path=model.Match.statistics.<elements>)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:3>, path=model.Match.guests)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:4>, path=model.Match.host)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Match)
          - SQL table alias mapping - match0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_2_0_}

[DEBUG] Static select for entity model.Match [OPTIMISTIC]: select match0_.ID as ID1_2_0_, match0_.Date as Date2_2_0_, match0_.guests as guests3_2_0_, match0_.host as host4_2_0_ from Matches match0_ where match0_.ID=?
[TRACE]  Starting root entity : model.Match
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bd3d05e]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6aba5d30
[TRACE] .. Registering AssociationKey : AssociationKey(table=Matches, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6aba5d30
[TRACE] >> Starting entity identifier : model.Match
[DEBUG] Visiting attribute path : date
[TRACE] >> Starting attribute Attribute(name=date, type=calendar [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=date, type=calendar [non-identifier])
[DEBUG] Visiting attribute path : statistics
[TRACE] >> Starting attribute Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@61d34b4]
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@588307f7]
[TRACE] << Finishing up attribute : Attribute(name=statistics, type=java.util.Set(model.Match.statistics) [non-identifier,association])
[DEBUG] Visiting attribute path : guests
[TRACE] >> Starting attribute Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:3> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7df76d99]
[TRACE] << Finishing up attribute : Attribute(name=guests, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : host
[TRACE] >> Starting attribute Attribute(name=host, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:4> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@459cfcca]
[TRACE] << Finishing up attribute : Attribute(name=host, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6aba5d30
[TRACE]  Finished root entity : model.Match
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Match)
    - Returns
       - EntityReturnImpl(entity=model.Match, querySpaceUid=<gen:0>, path=model.Match)
          - CollectionAttributeFetchImpl(collection=model.Match.statistics, querySpaceUid=<gen:1>, path=model.Match.statistics)
             - (collection element) CollectionFetchableElementEntityGraph(entity=model.Statistic, querySpaceUid=<gen:2>, path=model.Match.statistics.<elements>)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:3>, path=model.Match.guests)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:4>, path=model.Match.host)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Match)
          - SQL table alias mapping - match0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_2_0_}

[DEBUG] Static select for entity model.Match [OPTIMISTIC_FORCE_INCREMENT]: select match0_.ID as ID1_2_0_, match0_.Date as Date2_2_0_, match0_.guests as guests3_2_0_, match0_.host as host4_2_0_ from Matches match0_ where match0_.ID=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Match: select match0_.ID as ID1_2_3_, match0_.Date as Date2_2_3_, match0_.guests as guests3_2_3_, match0_.host as host4_2_3_, team1_.ID as ID1_8_0_, team1_.name as name2_8_0_, team1_.coach as coach3_8_0_, coach2_.ID as ID1_1_1_, coach2_.name as name2_1_1_, coach2_.lastname as lastname3_1_1_, coach2_.team as team4_1_1_, team3_.ID as ID1_8_2_, team3_.name as name2_8_2_, team3_.coach as coach3_8_2_ from Matches match0_ inner join Teams team1_ on match0_.guests=team1_.ID left outer join Coaches coach2_ on team1_.coach=coach2_.ID inner join Teams team3_ on match0_.host=team3_.ID where match0_.ID=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Match: select match0_.ID as ID1_2_3_, match0_.Date as Date2_2_3_, match0_.guests as guests3_2_3_, match0_.host as host4_2_3_, team1_.ID as ID1_8_0_, team1_.name as name2_8_0_, team1_.coach as coach3_8_0_, coach2_.ID as ID1_1_1_, coach2_.name as name2_1_1_, coach2_.lastname as lastname3_1_1_, coach2_.team as team4_1_1_, team3_.ID as ID1_8_2_, team3_.name as name2_8_2_, team3_.coach as coach3_8_2_ from Matches match0_ inner join Teams team1_ on match0_.guests=team1_.ID left outer join Coaches coach2_ on team1_.coach=coach2_.ID inner join Teams team3_ on match0_.host=team3_.ID where match0_.ID=?
[DEBUG] Static SQL for entity: model.Statistic
[DEBUG]  Version select: select ID from Statistics where ID =?
[DEBUG]  Snapshot select: select statistic_.ID, statistic_.value as value2_6_, statistic_.type as type3_6_ from Statistics statistic_ where statistic_.ID=?
[DEBUG]  Insert 0: insert into Statistics (value, type, ID) values (?, ?, ?)
[DEBUG]  Update 0: update Statistics set value=?, type=? where ID=?
[DEBUG]  Delete 0: delete from Statistics where ID=?
[DEBUG]  Identity insert: insert into Statistics (value, type) values (?, ?)
[TRACE]  Starting root entity : model.Statistic
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2acbc859]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6ab7ce48
[TRACE] .. Registering AssociationKey : AssociationKey(table=Statistics, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6ab7ce48
[TRACE] >> Starting entity identifier : model.Statistic
[DEBUG] Visiting attribute path : value
[TRACE] >> Starting attribute Attribute(name=value, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=value, type=integer [non-identifier])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c6aed22]
[TRACE] << Finishing up attribute : Attribute(name=type, type=model.StatisticType [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6ab7ce48
[TRACE]  Finished root entity : model.Statistic
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Statistic)
    - Returns
       - EntityReturnImpl(entity=model.Statistic, querySpaceUid=<gen:0>, path=model.Statistic)
          - EntityAttributeFetchImpl(entity=model.StatisticType, querySpaceUid=<gen:1>, path=model.Statistic.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Statistic)
          - SQL table alias mapping - statistic0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_6_0_}

[DEBUG] Static select for entity model.Statistic [NONE]: select statistic0_.ID as ID1_6_0_, statistic0_.value as value2_6_0_, statistic0_.type as type3_6_0_ from Statistics statistic0_ where statistic0_.ID=?
[TRACE]  Starting root entity : model.Statistic
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@e322ec9]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7acfb656
[TRACE] .. Registering AssociationKey : AssociationKey(table=Statistics, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7acfb656
[TRACE] >> Starting entity identifier : model.Statistic
[DEBUG] Visiting attribute path : value
[TRACE] >> Starting attribute Attribute(name=value, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=value, type=integer [non-identifier])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e5ee2c9]
[TRACE] << Finishing up attribute : Attribute(name=type, type=model.StatisticType [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7acfb656
[TRACE]  Finished root entity : model.Statistic
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Statistic)
    - Returns
       - EntityReturnImpl(entity=model.Statistic, querySpaceUid=<gen:0>, path=model.Statistic)
          - EntityAttributeFetchImpl(entity=model.StatisticType, querySpaceUid=<gen:1>, path=model.Statistic.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Statistic)
          - SQL table alias mapping - statistic0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_6_0_}

[DEBUG] Static select for entity model.Statistic [READ]: select statistic0_.ID as ID1_6_0_, statistic0_.value as value2_6_0_, statistic0_.type as type3_6_0_ from Statistics statistic0_ where statistic0_.ID=?
[TRACE]  Starting root entity : model.Statistic
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@55a609dd]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4afd21c6
[TRACE] .. Registering AssociationKey : AssociationKey(table=Statistics, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4afd21c6
[TRACE] >> Starting entity identifier : model.Statistic
[DEBUG] Visiting attribute path : value
[TRACE] >> Starting attribute Attribute(name=value, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=value, type=integer [non-identifier])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d0753c9]
[TRACE] << Finishing up attribute : Attribute(name=type, type=model.StatisticType [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4afd21c6
[TRACE]  Finished root entity : model.Statistic
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Statistic)
    - Returns
       - EntityReturnImpl(entity=model.Statistic, querySpaceUid=<gen:0>, path=model.Statistic)
          - EntityAttributeFetchImpl(entity=model.StatisticType, querySpaceUid=<gen:1>, path=model.Statistic.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Statistic)
          - SQL table alias mapping - statistic0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_6_0_}

[DEBUG] Static select for entity model.Statistic [UPGRADE]: select statistic0_.ID as ID1_6_0_, statistic0_.value as value2_6_0_, statistic0_.type as type3_6_0_ from Statistics statistic0_ where statistic0_.ID=? for update
[TRACE]  Starting root entity : model.Statistic
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1416a80a]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@719bb3b4
[TRACE] .. Registering AssociationKey : AssociationKey(table=Statistics, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@719bb3b4
[TRACE] >> Starting entity identifier : model.Statistic
[DEBUG] Visiting attribute path : value
[TRACE] >> Starting attribute Attribute(name=value, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=value, type=integer [non-identifier])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@52cb4f50]
[TRACE] << Finishing up attribute : Attribute(name=type, type=model.StatisticType [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@719bb3b4
[TRACE]  Finished root entity : model.Statistic
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Statistic)
    - Returns
       - EntityReturnImpl(entity=model.Statistic, querySpaceUid=<gen:0>, path=model.Statistic)
          - EntityAttributeFetchImpl(entity=model.StatisticType, querySpaceUid=<gen:1>, path=model.Statistic.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Statistic)
          - SQL table alias mapping - statistic0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_6_0_}

[DEBUG] Static select for entity model.Statistic [UPGRADE_NOWAIT]: select statistic0_.ID as ID1_6_0_, statistic0_.value as value2_6_0_, statistic0_.type as type3_6_0_ from Statistics statistic0_ where statistic0_.ID=? for update
[TRACE]  Starting root entity : model.Statistic
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@25a5c7db]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4d27d9d
[TRACE] .. Registering AssociationKey : AssociationKey(table=Statistics, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4d27d9d
[TRACE] >> Starting entity identifier : model.Statistic
[DEBUG] Visiting attribute path : value
[TRACE] >> Starting attribute Attribute(name=value, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=value, type=integer [non-identifier])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@28f878a0]
[TRACE] << Finishing up attribute : Attribute(name=type, type=model.StatisticType [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4d27d9d
[TRACE]  Finished root entity : model.Statistic
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Statistic)
    - Returns
       - EntityReturnImpl(entity=model.Statistic, querySpaceUid=<gen:0>, path=model.Statistic)
          - EntityAttributeFetchImpl(entity=model.StatisticType, querySpaceUid=<gen:1>, path=model.Statistic.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Statistic)
          - SQL table alias mapping - statistic0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_6_0_}

[DEBUG] Static select for entity model.Statistic [UPGRADE_SKIPLOCKED]: select statistic0_.ID as ID1_6_0_, statistic0_.value as value2_6_0_, statistic0_.type as type3_6_0_ from Statistics statistic0_ where statistic0_.ID=? for update
[TRACE]  Starting root entity : model.Statistic
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20411320]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2b5183ec
[TRACE] .. Registering AssociationKey : AssociationKey(table=Statistics, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2b5183ec
[TRACE] >> Starting entity identifier : model.Statistic
[DEBUG] Visiting attribute path : value
[TRACE] >> Starting attribute Attribute(name=value, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=value, type=integer [non-identifier])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3c782d8e]
[TRACE] << Finishing up attribute : Attribute(name=type, type=model.StatisticType [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2b5183ec
[TRACE]  Finished root entity : model.Statistic
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Statistic)
    - Returns
       - EntityReturnImpl(entity=model.Statistic, querySpaceUid=<gen:0>, path=model.Statistic)
          - EntityAttributeFetchImpl(entity=model.StatisticType, querySpaceUid=<gen:1>, path=model.Statistic.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Statistic)
          - SQL table alias mapping - statistic0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_6_0_}

[DEBUG] Static select for entity model.Statistic [FORCE]: select statistic0_.ID as ID1_6_0_, statistic0_.value as value2_6_0_, statistic0_.type as type3_6_0_ from Statistics statistic0_ where statistic0_.ID=? for update
[TRACE]  Starting root entity : model.Statistic
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@572e6fd9]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7f5eae0f
[TRACE] .. Registering AssociationKey : AssociationKey(table=Statistics, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7f5eae0f
[TRACE] >> Starting entity identifier : model.Statistic
[DEBUG] Visiting attribute path : value
[TRACE] >> Starting attribute Attribute(name=value, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=value, type=integer [non-identifier])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@58b71ceb]
[TRACE] << Finishing up attribute : Attribute(name=type, type=model.StatisticType [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7f5eae0f
[TRACE]  Finished root entity : model.Statistic
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Statistic)
    - Returns
       - EntityReturnImpl(entity=model.Statistic, querySpaceUid=<gen:0>, path=model.Statistic)
          - EntityAttributeFetchImpl(entity=model.StatisticType, querySpaceUid=<gen:1>, path=model.Statistic.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Statistic)
          - SQL table alias mapping - statistic0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_6_0_}

[DEBUG] Static select for entity model.Statistic [PESSIMISTIC_READ]: select statistic0_.ID as ID1_6_0_, statistic0_.value as value2_6_0_, statistic0_.type as type3_6_0_ from Statistics statistic0_ where statistic0_.ID=? lock in share mode
[TRACE]  Starting root entity : model.Statistic
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@255e5e2e]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@12abdfb
[TRACE] .. Registering AssociationKey : AssociationKey(table=Statistics, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@12abdfb
[TRACE] >> Starting entity identifier : model.Statistic
[DEBUG] Visiting attribute path : value
[TRACE] >> Starting attribute Attribute(name=value, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=value, type=integer [non-identifier])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@b0e5507]
[TRACE] << Finishing up attribute : Attribute(name=type, type=model.StatisticType [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@12abdfb
[TRACE]  Finished root entity : model.Statistic
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Statistic)
    - Returns
       - EntityReturnImpl(entity=model.Statistic, querySpaceUid=<gen:0>, path=model.Statistic)
          - EntityAttributeFetchImpl(entity=model.StatisticType, querySpaceUid=<gen:1>, path=model.Statistic.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Statistic)
          - SQL table alias mapping - statistic0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_6_0_}

[DEBUG] Static select for entity model.Statistic [PESSIMISTIC_WRITE]: select statistic0_.ID as ID1_6_0_, statistic0_.value as value2_6_0_, statistic0_.type as type3_6_0_ from Statistics statistic0_ where statistic0_.ID=? for update
[TRACE]  Starting root entity : model.Statistic
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6bbe50c9]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3c46dcbe
[TRACE] .. Registering AssociationKey : AssociationKey(table=Statistics, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3c46dcbe
[TRACE] >> Starting entity identifier : model.Statistic
[DEBUG] Visiting attribute path : value
[TRACE] >> Starting attribute Attribute(name=value, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=value, type=integer [non-identifier])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@68577ba8]
[TRACE] << Finishing up attribute : Attribute(name=type, type=model.StatisticType [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3c46dcbe
[TRACE]  Finished root entity : model.Statistic
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Statistic)
    - Returns
       - EntityReturnImpl(entity=model.Statistic, querySpaceUid=<gen:0>, path=model.Statistic)
          - EntityAttributeFetchImpl(entity=model.StatisticType, querySpaceUid=<gen:1>, path=model.Statistic.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Statistic)
          - SQL table alias mapping - statistic0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_6_0_}

[DEBUG] Static select for entity model.Statistic [PESSIMISTIC_FORCE_INCREMENT]: select statistic0_.ID as ID1_6_0_, statistic0_.value as value2_6_0_, statistic0_.type as type3_6_0_ from Statistics statistic0_ where statistic0_.ID=? for update
[TRACE]  Starting root entity : model.Statistic
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1108adc8]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@8a98f38
[TRACE] .. Registering AssociationKey : AssociationKey(table=Statistics, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@8a98f38
[TRACE] >> Starting entity identifier : model.Statistic
[DEBUG] Visiting attribute path : value
[TRACE] >> Starting attribute Attribute(name=value, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=value, type=integer [non-identifier])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@20011bf]
[TRACE] << Finishing up attribute : Attribute(name=type, type=model.StatisticType [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@8a98f38
[TRACE]  Finished root entity : model.Statistic
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Statistic)
    - Returns
       - EntityReturnImpl(entity=model.Statistic, querySpaceUid=<gen:0>, path=model.Statistic)
          - EntityAttributeFetchImpl(entity=model.StatisticType, querySpaceUid=<gen:1>, path=model.Statistic.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Statistic)
          - SQL table alias mapping - statistic0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_6_0_}

[DEBUG] Static select for entity model.Statistic [OPTIMISTIC]: select statistic0_.ID as ID1_6_0_, statistic0_.value as value2_6_0_, statistic0_.type as type3_6_0_ from Statistics statistic0_ where statistic0_.ID=?
[TRACE]  Starting root entity : model.Statistic
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51d9b06c]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5eb2172
[TRACE] .. Registering AssociationKey : AssociationKey(table=Statistics, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5eb2172
[TRACE] >> Starting entity identifier : model.Statistic
[DEBUG] Visiting attribute path : value
[TRACE] >> Starting attribute Attribute(name=value, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=value, type=integer [non-identifier])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@41ffaeb8]
[TRACE] << Finishing up attribute : Attribute(name=type, type=model.StatisticType [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5eb2172
[TRACE]  Finished root entity : model.Statistic
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Statistic)
    - Returns
       - EntityReturnImpl(entity=model.Statistic, querySpaceUid=<gen:0>, path=model.Statistic)
          - EntityAttributeFetchImpl(entity=model.StatisticType, querySpaceUid=<gen:1>, path=model.Statistic.type)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Statistic)
          - SQL table alias mapping - statistic0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_6_0_}

[DEBUG] Static select for entity model.Statistic [OPTIMISTIC_FORCE_INCREMENT]: select statistic0_.ID as ID1_6_0_, statistic0_.value as value2_6_0_, statistic0_.type as type3_6_0_ from Statistics statistic0_ where statistic0_.ID=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Statistic: select statistic0_.ID as ID1_6_1_, statistic0_.value as value2_6_1_, statistic0_.type as type3_6_1_, statistict1_.ID as ID1_7_0_, statistict1_.description as descript2_7_0_ from Statistics statistic0_ left outer join StatisticType statistict1_ on statistic0_.type=statistict1_.ID where statistic0_.ID=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Statistic: select statistic0_.ID as ID1_6_1_, statistic0_.value as value2_6_1_, statistic0_.type as type3_6_1_, statistict1_.ID as ID1_7_0_, statistict1_.description as descript2_7_0_ from Statistics statistic0_ left outer join StatisticType statistict1_ on statistic0_.type=statistict1_.ID where statistic0_.ID=?
[DEBUG] Static SQL for entity: model.Player
[DEBUG]  Version select: select ID from Players where ID =?
[DEBUG]  Snapshot select: select player_.ID, player_.name as name2_4_, player_.lastname as lastname3_4_, player_.team as team4_4_, player_.position as position5_4_ from Players player_ where player_.ID=?
[DEBUG]  Insert 0: insert into Players (name, lastname, team, position, ID) values (?, ?, ?, ?, ?)
[DEBUG]  Update 0: update Players set name=?, lastname=?, team=?, position=? where ID=?
[DEBUG]  Delete 0: delete from Players where ID=?
[DEBUG]  Identity insert: insert into Players (name, lastname, team, position) values (?, ?, ?, ?)
[TRACE]  Starting root entity : model.Player
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@43f0c2d1]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5fb65013
[TRACE] .. Registering AssociationKey : AssociationKey(table=Players, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5fb65013
[TRACE] >> Starting entity identifier : model.Player
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@38a1a26]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3fbcfe81]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5fb65013
[TRACE]  Finished root entity : model.Player
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Player)
    - Returns
       - EntityReturnImpl(entity=model.Player, querySpaceUid=<gen:0>, path=model.Player)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Player.team)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:2>, path=model.Player.position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_4_0_}

[DEBUG] Static select for entity model.Player [NONE]: select player0_.ID as ID1_4_0_, player0_.name as name2_4_0_, player0_.lastname as lastname3_4_0_, player0_.team as team4_4_0_, player0_.position as position5_4_0_ from Players player0_ where player0_.ID=?
[TRACE]  Starting root entity : model.Player
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a1f45ed]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1744a475
[TRACE] .. Registering AssociationKey : AssociationKey(table=Players, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1744a475
[TRACE] >> Starting entity identifier : model.Player
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@444cc791]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c5c616f]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1744a475
[TRACE]  Finished root entity : model.Player
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Player)
    - Returns
       - EntityReturnImpl(entity=model.Player, querySpaceUid=<gen:0>, path=model.Player)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Player.team)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:2>, path=model.Player.position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_4_0_}

[DEBUG] Static select for entity model.Player [READ]: select player0_.ID as ID1_4_0_, player0_.name as name2_4_0_, player0_.lastname as lastname3_4_0_, player0_.team as team4_4_0_, player0_.position as position5_4_0_ from Players player0_ where player0_.ID=?
[TRACE]  Starting root entity : model.Player
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1c6c6f24]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2eb917d0
[TRACE] .. Registering AssociationKey : AssociationKey(table=Players, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2eb917d0
[TRACE] >> Starting entity identifier : model.Player
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@c6b2dd9]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@73437222]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2eb917d0
[TRACE]  Finished root entity : model.Player
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Player)
    - Returns
       - EntityReturnImpl(entity=model.Player, querySpaceUid=<gen:0>, path=model.Player)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Player.team)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:2>, path=model.Player.position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_4_0_}

[DEBUG] Static select for entity model.Player [UPGRADE]: select player0_.ID as ID1_4_0_, player0_.name as name2_4_0_, player0_.lastname as lastname3_4_0_, player0_.team as team4_4_0_, player0_.position as position5_4_0_ from Players player0_ where player0_.ID=? for update
[TRACE]  Starting root entity : model.Player
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ca93621]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6a48a7f3
[TRACE] .. Registering AssociationKey : AssociationKey(table=Players, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6a48a7f3
[TRACE] >> Starting entity identifier : model.Player
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3f985a86]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@57a2ed35]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6a48a7f3
[TRACE]  Finished root entity : model.Player
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Player)
    - Returns
       - EntityReturnImpl(entity=model.Player, querySpaceUid=<gen:0>, path=model.Player)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Player.team)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:2>, path=model.Player.position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_4_0_}

[DEBUG] Static select for entity model.Player [UPGRADE_NOWAIT]: select player0_.ID as ID1_4_0_, player0_.name as name2_4_0_, player0_.lastname as lastname3_4_0_, player0_.team as team4_4_0_, player0_.position as position5_4_0_ from Players player0_ where player0_.ID=? for update
[TRACE]  Starting root entity : model.Player
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@12ffd1de]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3d278b4d
[TRACE] .. Registering AssociationKey : AssociationKey(table=Players, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3d278b4d
[TRACE] >> Starting entity identifier : model.Player
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4096aa05]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@9d3c67]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3d278b4d
[TRACE]  Finished root entity : model.Player
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Player)
    - Returns
       - EntityReturnImpl(entity=model.Player, querySpaceUid=<gen:0>, path=model.Player)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Player.team)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:2>, path=model.Player.position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_4_0_}

[DEBUG] Static select for entity model.Player [UPGRADE_SKIPLOCKED]: select player0_.ID as ID1_4_0_, player0_.name as name2_4_0_, player0_.lastname as lastname3_4_0_, player0_.team as team4_4_0_, player0_.position as position5_4_0_ from Players player0_ where player0_.ID=? for update
[TRACE]  Starting root entity : model.Player
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6c806c8b]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6dfcffb5
[TRACE] .. Registering AssociationKey : AssociationKey(table=Players, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6dfcffb5
[TRACE] >> Starting entity identifier : model.Player
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@184fb68d]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71d8cfe7]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6dfcffb5
[TRACE]  Finished root entity : model.Player
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Player)
    - Returns
       - EntityReturnImpl(entity=model.Player, querySpaceUid=<gen:0>, path=model.Player)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Player.team)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:2>, path=model.Player.position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_4_0_}

[DEBUG] Static select for entity model.Player [FORCE]: select player0_.ID as ID1_4_0_, player0_.name as name2_4_0_, player0_.lastname as lastname3_4_0_, player0_.team as team4_4_0_, player0_.position as position5_4_0_ from Players player0_ where player0_.ID=? for update
[TRACE]  Starting root entity : model.Player
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1e530163]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@14d8444b
[TRACE] .. Registering AssociationKey : AssociationKey(table=Players, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@14d8444b
[TRACE] >> Starting entity identifier : model.Player
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@71466383]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@46d63dbb]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@14d8444b
[TRACE]  Finished root entity : model.Player
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Player)
    - Returns
       - EntityReturnImpl(entity=model.Player, querySpaceUid=<gen:0>, path=model.Player)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Player.team)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:2>, path=model.Player.position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_4_0_}

[DEBUG] Static select for entity model.Player [PESSIMISTIC_READ]: select player0_.ID as ID1_4_0_, player0_.name as name2_4_0_, player0_.lastname as lastname3_4_0_, player0_.team as team4_4_0_, player0_.position as position5_4_0_ from Players player0_ where player0_.ID=? lock in share mode
[TRACE]  Starting root entity : model.Player
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4088741b]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@16a49a5d
[TRACE] .. Registering AssociationKey : AssociationKey(table=Players, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@16a49a5d
[TRACE] >> Starting entity identifier : model.Player
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@54bca971]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23706db8]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@16a49a5d
[TRACE]  Finished root entity : model.Player
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Player)
    - Returns
       - EntityReturnImpl(entity=model.Player, querySpaceUid=<gen:0>, path=model.Player)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Player.team)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:2>, path=model.Player.position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_4_0_}

[DEBUG] Static select for entity model.Player [PESSIMISTIC_WRITE]: select player0_.ID as ID1_4_0_, player0_.name as name2_4_0_, player0_.lastname as lastname3_4_0_, player0_.team as team4_4_0_, player0_.position as position5_4_0_ from Players player0_ where player0_.ID=? for update
[TRACE]  Starting root entity : model.Player
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@205bed61]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@129fed45
[TRACE] .. Registering AssociationKey : AssociationKey(table=Players, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@129fed45
[TRACE] >> Starting entity identifier : model.Player
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23592946]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3e48d38]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@129fed45
[TRACE]  Finished root entity : model.Player
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Player)
    - Returns
       - EntityReturnImpl(entity=model.Player, querySpaceUid=<gen:0>, path=model.Player)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Player.team)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:2>, path=model.Player.position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_4_0_}

[DEBUG] Static select for entity model.Player [PESSIMISTIC_FORCE_INCREMENT]: select player0_.ID as ID1_4_0_, player0_.name as name2_4_0_, player0_.lastname as lastname3_4_0_, player0_.team as team4_4_0_, player0_.position as position5_4_0_ from Players player0_ where player0_.ID=? for update
[TRACE]  Starting root entity : model.Player
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7c2b58c0]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@11b377c5
[TRACE] .. Registering AssociationKey : AssociationKey(table=Players, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@11b377c5
[TRACE] >> Starting entity identifier : model.Player
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7bca6fac]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5c60b0a0]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@11b377c5
[TRACE]  Finished root entity : model.Player
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Player)
    - Returns
       - EntityReturnImpl(entity=model.Player, querySpaceUid=<gen:0>, path=model.Player)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Player.team)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:2>, path=model.Player.position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_4_0_}

[DEBUG] Static select for entity model.Player [OPTIMISTIC]: select player0_.ID as ID1_4_0_, player0_.name as name2_4_0_, player0_.lastname as lastname3_4_0_, player0_.team as team4_4_0_, player0_.position as position5_4_0_ from Players player0_ where player0_.ID=?
[TRACE]  Starting root entity : model.Player
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a2b1eb4]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@702c436b
[TRACE] .. Registering AssociationKey : AssociationKey(table=Players, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@702c436b
[TRACE] >> Starting entity identifier : model.Player
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5833f5cd]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10fbbdb]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@702c436b
[TRACE]  Finished root entity : model.Player
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Player)
    - Returns
       - EntityReturnImpl(entity=model.Player, querySpaceUid=<gen:0>, path=model.Player)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Player.team)
          - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:2>, path=model.Player.position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Player)
          - SQL table alias mapping - player0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_4_0_}

[DEBUG] Static select for entity model.Player [OPTIMISTIC_FORCE_INCREMENT]: select player0_.ID as ID1_4_0_, player0_.name as name2_4_0_, player0_.lastname as lastname3_4_0_, player0_.team as team4_4_0_, player0_.position as position5_4_0_ from Players player0_ where player0_.ID=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Player: select player0_.ID as ID1_4_3_, player0_.name as name2_4_3_, player0_.lastname as lastname3_4_3_, player0_.team as team4_4_3_, player0_.position as position5_4_3_, team1_.ID as ID1_8_0_, team1_.name as name2_8_0_, team1_.coach as coach3_8_0_, coach2_.ID as ID1_1_1_, coach2_.name as name2_1_1_, coach2_.lastname as lastname3_1_1_, coach2_.team as team4_1_1_, position3_.ID as ID1_5_2_, position3_.name as name2_5_2_ from Players player0_ left outer join Teams team1_ on player0_.team=team1_.ID left outer join Coaches coach2_ on team1_.coach=coach2_.ID left outer join Positions position3_ on player0_.position=position3_.ID where player0_.ID=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Player: select player0_.ID as ID1_4_3_, player0_.name as name2_4_3_, player0_.lastname as lastname3_4_3_, player0_.team as team4_4_3_, player0_.position as position5_4_3_, team1_.ID as ID1_8_0_, team1_.name as name2_8_0_, team1_.coach as coach3_8_0_, coach2_.ID as ID1_1_1_, coach2_.name as name2_1_1_, coach2_.lastname as lastname3_1_1_, coach2_.team as team4_1_1_, position3_.ID as ID1_5_2_, position3_.name as name2_5_2_ from Players player0_ left outer join Teams team1_ on player0_.team=team1_.ID left outer join Coaches coach2_ on team1_.coach=coach2_.ID left outer join Positions position3_ on player0_.position=position3_.ID where player0_.ID=?
[DEBUG] Static SQL for entity: model.Person
[DEBUG]  Version select: select ID from Persons where ID =?
[DEBUG]  Snapshot select: select person_.ID, person_.name as name2_3_, person_.lastname as lastname3_3_ from Persons person_ where person_.ID=?
[DEBUG]  Insert 0: insert into Persons (name, lastname, ID) values (?, ?, ?)
[DEBUG]  Update 0: update Persons set name=?, lastname=? where ID=?
[DEBUG]  Delete 0: delete from Persons where ID=?
[DEBUG]  Identity insert: insert into Persons (name, lastname) values (?, ?)
[TRACE]  Starting root entity : model.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@23f3dbf0]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@31d6f3fe
[TRACE] .. Registering AssociationKey : AssociationKey(table=Persons, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@31d6f3fe
[TRACE] >> Starting entity identifier : model.Person
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@31d6f3fe
[TRACE]  Finished root entity : model.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Person)
    - Returns
       - EntityReturnImpl(entity=model.Person, querySpaceUid=<gen:0>, path=model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_3_0_}

[DEBUG] Static select for entity model.Person [NONE]: select person0_.ID as ID1_3_0_, person0_.name as name2_3_0_, person0_.lastname as lastname3_3_0_ from Persons person0_ where person0_.ID=?
[TRACE]  Starting root entity : model.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@760cf594]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@aa149ed
[TRACE] .. Registering AssociationKey : AssociationKey(table=Persons, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@aa149ed
[TRACE] >> Starting entity identifier : model.Person
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@aa149ed
[TRACE]  Finished root entity : model.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Person)
    - Returns
       - EntityReturnImpl(entity=model.Person, querySpaceUid=<gen:0>, path=model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_3_0_}

[DEBUG] Static select for entity model.Person [READ]: select person0_.ID as ID1_3_0_, person0_.name as name2_3_0_, person0_.lastname as lastname3_3_0_ from Persons person0_ where person0_.ID=?
[TRACE]  Starting root entity : model.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@37303f12]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@31ff6309
[TRACE] .. Registering AssociationKey : AssociationKey(table=Persons, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@31ff6309
[TRACE] >> Starting entity identifier : model.Person
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@31ff6309
[TRACE]  Finished root entity : model.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Person)
    - Returns
       - EntityReturnImpl(entity=model.Person, querySpaceUid=<gen:0>, path=model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_3_0_}

[DEBUG] Static select for entity model.Person [UPGRADE]: select person0_.ID as ID1_3_0_, person0_.name as name2_3_0_, person0_.lastname as lastname3_3_0_ from Persons person0_ where person0_.ID=? for update
[TRACE]  Starting root entity : model.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@204e90f7]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@20a05b32
[TRACE] .. Registering AssociationKey : AssociationKey(table=Persons, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@20a05b32
[TRACE] >> Starting entity identifier : model.Person
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@20a05b32
[TRACE]  Finished root entity : model.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Person)
    - Returns
       - EntityReturnImpl(entity=model.Person, querySpaceUid=<gen:0>, path=model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_3_0_}

[DEBUG] Static select for entity model.Person [UPGRADE_NOWAIT]: select person0_.ID as ID1_3_0_, person0_.name as name2_3_0_, person0_.lastname as lastname3_3_0_ from Persons person0_ where person0_.ID=? for update
[TRACE]  Starting root entity : model.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@165e389b]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c73f672
[TRACE] .. Registering AssociationKey : AssociationKey(table=Persons, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c73f672
[TRACE] >> Starting entity identifier : model.Person
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5c73f672
[TRACE]  Finished root entity : model.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Person)
    - Returns
       - EntityReturnImpl(entity=model.Person, querySpaceUid=<gen:0>, path=model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_3_0_}

[DEBUG] Static select for entity model.Person [UPGRADE_SKIPLOCKED]: select person0_.ID as ID1_3_0_, person0_.name as name2_3_0_, person0_.lastname as lastname3_3_0_ from Persons person0_ where person0_.ID=? for update
[TRACE]  Starting root entity : model.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@8ee0c23]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2ab5afc7
[TRACE] .. Registering AssociationKey : AssociationKey(table=Persons, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2ab5afc7
[TRACE] >> Starting entity identifier : model.Person
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2ab5afc7
[TRACE]  Finished root entity : model.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Person)
    - Returns
       - EntityReturnImpl(entity=model.Person, querySpaceUid=<gen:0>, path=model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_3_0_}

[DEBUG] Static select for entity model.Person [FORCE]: select person0_.ID as ID1_3_0_, person0_.name as name2_3_0_, person0_.lastname as lastname3_3_0_ from Persons person0_ where person0_.ID=? for update
[TRACE]  Starting root entity : model.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4dc8c0ea]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@e4b6f47
[TRACE] .. Registering AssociationKey : AssociationKey(table=Persons, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@e4b6f47
[TRACE] >> Starting entity identifier : model.Person
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@e4b6f47
[TRACE]  Finished root entity : model.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Person)
    - Returns
       - EntityReturnImpl(entity=model.Person, querySpaceUid=<gen:0>, path=model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_3_0_}

[DEBUG] Static select for entity model.Person [PESSIMISTIC_READ]: select person0_.ID as ID1_3_0_, person0_.name as name2_3_0_, person0_.lastname as lastname3_3_0_ from Persons person0_ where person0_.ID=? lock in share mode
[TRACE]  Starting root entity : model.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@763cf5b9]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@71f0b72e
[TRACE] .. Registering AssociationKey : AssociationKey(table=Persons, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@71f0b72e
[TRACE] >> Starting entity identifier : model.Person
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@71f0b72e
[TRACE]  Finished root entity : model.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Person)
    - Returns
       - EntityReturnImpl(entity=model.Person, querySpaceUid=<gen:0>, path=model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_3_0_}

[DEBUG] Static select for entity model.Person [PESSIMISTIC_WRITE]: select person0_.ID as ID1_3_0_, person0_.name as name2_3_0_, person0_.lastname as lastname3_3_0_ from Persons person0_ where person0_.ID=? for update
[TRACE]  Starting root entity : model.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7a34f66a]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2f508f3c
[TRACE] .. Registering AssociationKey : AssociationKey(table=Persons, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2f508f3c
[TRACE] >> Starting entity identifier : model.Person
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2f508f3c
[TRACE]  Finished root entity : model.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Person)
    - Returns
       - EntityReturnImpl(entity=model.Person, querySpaceUid=<gen:0>, path=model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_3_0_}

[DEBUG] Static select for entity model.Person [PESSIMISTIC_FORCE_INCREMENT]: select person0_.ID as ID1_3_0_, person0_.name as name2_3_0_, person0_.lastname as lastname3_3_0_ from Persons person0_ where person0_.ID=? for update
[TRACE]  Starting root entity : model.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3ed03652]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4aedaf61
[TRACE] .. Registering AssociationKey : AssociationKey(table=Persons, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4aedaf61
[TRACE] >> Starting entity identifier : model.Person
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4aedaf61
[TRACE]  Finished root entity : model.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Person)
    - Returns
       - EntityReturnImpl(entity=model.Person, querySpaceUid=<gen:0>, path=model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_3_0_}

[DEBUG] Static select for entity model.Person [OPTIMISTIC]: select person0_.ID as ID1_3_0_, person0_.name as name2_3_0_, person0_.lastname as lastname3_3_0_ from Persons person0_ where person0_.ID=?
[TRACE]  Starting root entity : model.Person
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@173797f0]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3c35c345
[TRACE] .. Registering AssociationKey : AssociationKey(table=Persons, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3c35c345
[TRACE] >> Starting entity identifier : model.Person
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3c35c345
[TRACE]  Finished root entity : model.Person
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Person)
    - Returns
       - EntityReturnImpl(entity=model.Person, querySpaceUid=<gen:0>, path=model.Person)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Person)
          - SQL table alias mapping - person0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_3_0_}

[DEBUG] Static select for entity model.Person [OPTIMISTIC_FORCE_INCREMENT]: select person0_.ID as ID1_3_0_, person0_.name as name2_3_0_, person0_.lastname as lastname3_3_0_ from Persons person0_ where person0_.ID=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Person: select person0_.ID as ID1_3_0_, person0_.name as name2_3_0_, person0_.lastname as lastname3_3_0_ from Persons person0_ where person0_.ID=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Person: select person0_.ID as ID1_3_0_, person0_.name as name2_3_0_, person0_.lastname as lastname3_3_0_ from Persons person0_ where person0_.ID=?
[DEBUG] Static SQL for entity: model.Coach
[DEBUG]  Version select: select ID from Coaches where ID =?
[DEBUG]  Snapshot select: select coach_.ID, coach_.name as name2_1_, coach_.lastname as lastname3_1_, coach_.team as team4_1_ from Coaches coach_ where coach_.ID=?
[DEBUG]  Insert 0: insert into Coaches (name, lastname, team, ID) values (?, ?, ?, ?)
[DEBUG]  Update 0: update Coaches set name=?, lastname=?, team=? where ID=?
[DEBUG]  Delete 0: delete from Coaches where ID=?
[DEBUG]  Identity insert: insert into Coaches (name, lastname, team) values (?, ?, ?)
[TRACE]  Starting root entity : model.Coach
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3681037]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2459319c
[TRACE] .. Registering AssociationKey : AssociationKey(table=Coaches, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2459319c
[TRACE] >> Starting entity identifier : model.Coach
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ffaaaf0]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2459319c
[TRACE]  Finished root entity : model.Coach
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Coach)
    - Returns
       - EntityReturnImpl(entity=model.Coach, querySpaceUid=<gen:0>, path=model.Coach)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Coach.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Coach)
          - SQL table alias mapping - coach0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_1_0_}

[DEBUG] Static select for entity model.Coach [NONE]: select coach0_.ID as ID1_1_0_, coach0_.name as name2_1_0_, coach0_.lastname as lastname3_1_0_, coach0_.team as team4_1_0_ from Coaches coach0_ where coach0_.ID=?
[TRACE]  Starting root entity : model.Coach
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1dc76fa1]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5eed2d86
[TRACE] .. Registering AssociationKey : AssociationKey(table=Coaches, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5eed2d86
[TRACE] >> Starting entity identifier : model.Coach
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@33d53216]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5eed2d86
[TRACE]  Finished root entity : model.Coach
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Coach)
    - Returns
       - EntityReturnImpl(entity=model.Coach, querySpaceUid=<gen:0>, path=model.Coach)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Coach.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Coach)
          - SQL table alias mapping - coach0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_1_0_}

[DEBUG] Static select for entity model.Coach [READ]: select coach0_.ID as ID1_1_0_, coach0_.name as name2_1_0_, coach0_.lastname as lastname3_1_0_, coach0_.team as team4_1_0_ from Coaches coach0_ where coach0_.ID=?
[TRACE]  Starting root entity : model.Coach
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@69a2b3b6]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4f3e7344
[TRACE] .. Registering AssociationKey : AssociationKey(table=Coaches, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4f3e7344
[TRACE] >> Starting entity identifier : model.Coach
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7808f638]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4f3e7344
[TRACE]  Finished root entity : model.Coach
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Coach)
    - Returns
       - EntityReturnImpl(entity=model.Coach, querySpaceUid=<gen:0>, path=model.Coach)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Coach.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Coach)
          - SQL table alias mapping - coach0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_1_0_}

[DEBUG] Static select for entity model.Coach [UPGRADE]: select coach0_.ID as ID1_1_0_, coach0_.name as name2_1_0_, coach0_.lastname as lastname3_1_0_, coach0_.team as team4_1_0_ from Coaches coach0_ where coach0_.ID=? for update
[TRACE]  Starting root entity : model.Coach
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@62d73ead]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1e141e42
[TRACE] .. Registering AssociationKey : AssociationKey(table=Coaches, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1e141e42
[TRACE] >> Starting entity identifier : model.Coach
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@228cea97]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@1e141e42
[TRACE]  Finished root entity : model.Coach
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Coach)
    - Returns
       - EntityReturnImpl(entity=model.Coach, querySpaceUid=<gen:0>, path=model.Coach)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Coach.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Coach)
          - SQL table alias mapping - coach0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_1_0_}

[DEBUG] Static select for entity model.Coach [UPGRADE_NOWAIT]: select coach0_.ID as ID1_1_0_, coach0_.name as name2_1_0_, coach0_.lastname as lastname3_1_0_, coach0_.team as team4_1_0_ from Coaches coach0_ where coach0_.ID=? for update
[TRACE]  Starting root entity : model.Coach
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1d0a61c8]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@46731692
[TRACE] .. Registering AssociationKey : AssociationKey(table=Coaches, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@46731692
[TRACE] >> Starting entity identifier : model.Coach
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@782bf610]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@46731692
[TRACE]  Finished root entity : model.Coach
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Coach)
    - Returns
       - EntityReturnImpl(entity=model.Coach, querySpaceUid=<gen:0>, path=model.Coach)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Coach.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Coach)
          - SQL table alias mapping - coach0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_1_0_}

[DEBUG] Static select for entity model.Coach [UPGRADE_SKIPLOCKED]: select coach0_.ID as ID1_1_0_, coach0_.name as name2_1_0_, coach0_.lastname as lastname3_1_0_, coach0_.team as team4_1_0_ from Coaches coach0_ where coach0_.ID=? for update
[TRACE]  Starting root entity : model.Coach
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3db663d0]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@73fc518f
[TRACE] .. Registering AssociationKey : AssociationKey(table=Coaches, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@73fc518f
[TRACE] >> Starting entity identifier : model.Coach
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2de50ee4]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@73fc518f
[TRACE]  Finished root entity : model.Coach
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Coach)
    - Returns
       - EntityReturnImpl(entity=model.Coach, querySpaceUid=<gen:0>, path=model.Coach)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Coach.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Coach)
          - SQL table alias mapping - coach0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_1_0_}

[DEBUG] Static select for entity model.Coach [FORCE]: select coach0_.ID as ID1_1_0_, coach0_.name as name2_1_0_, coach0_.lastname as lastname3_1_0_, coach0_.team as team4_1_0_ from Coaches coach0_ where coach0_.ID=? for update
[TRACE]  Starting root entity : model.Coach
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@ad9e63e]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@47fbc56
[TRACE] .. Registering AssociationKey : AssociationKey(table=Coaches, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@47fbc56
[TRACE] >> Starting entity identifier : model.Coach
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@151ef57f]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@47fbc56
[TRACE]  Finished root entity : model.Coach
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Coach)
    - Returns
       - EntityReturnImpl(entity=model.Coach, querySpaceUid=<gen:0>, path=model.Coach)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Coach.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Coach)
          - SQL table alias mapping - coach0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_1_0_}

[DEBUG] Static select for entity model.Coach [PESSIMISTIC_READ]: select coach0_.ID as ID1_1_0_, coach0_.name as name2_1_0_, coach0_.lastname as lastname3_1_0_, coach0_.team as team4_1_0_ from Coaches coach0_ where coach0_.ID=? lock in share mode
[TRACE]  Starting root entity : model.Coach
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@10895b16]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5524b72f
[TRACE] .. Registering AssociationKey : AssociationKey(table=Coaches, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5524b72f
[TRACE] >> Starting entity identifier : model.Coach
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2cc03cd1]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5524b72f
[TRACE]  Finished root entity : model.Coach
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Coach)
    - Returns
       - EntityReturnImpl(entity=model.Coach, querySpaceUid=<gen:0>, path=model.Coach)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Coach.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Coach)
          - SQL table alias mapping - coach0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_1_0_}

[DEBUG] Static select for entity model.Coach [PESSIMISTIC_WRITE]: select coach0_.ID as ID1_1_0_, coach0_.name as name2_1_0_, coach0_.lastname as lastname3_1_0_, coach0_.team as team4_1_0_ from Coaches coach0_ where coach0_.ID=? for update
[TRACE]  Starting root entity : model.Coach
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e17913b]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@149c3204
[TRACE] .. Registering AssociationKey : AssociationKey(table=Coaches, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@149c3204
[TRACE] >> Starting entity identifier : model.Coach
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@64f16277]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@149c3204
[TRACE]  Finished root entity : model.Coach
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Coach)
    - Returns
       - EntityReturnImpl(entity=model.Coach, querySpaceUid=<gen:0>, path=model.Coach)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Coach.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Coach)
          - SQL table alias mapping - coach0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_1_0_}

[DEBUG] Static select for entity model.Coach [PESSIMISTIC_FORCE_INCREMENT]: select coach0_.ID as ID1_1_0_, coach0_.name as name2_1_0_, coach0_.lastname as lastname3_1_0_, coach0_.team as team4_1_0_ from Coaches coach0_ where coach0_.ID=? for update
[TRACE]  Starting root entity : model.Coach
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@497aec8c]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3b9632d1
[TRACE] .. Registering AssociationKey : AssociationKey(table=Coaches, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3b9632d1
[TRACE] >> Starting entity identifier : model.Coach
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4e6f2bb5]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3b9632d1
[TRACE]  Finished root entity : model.Coach
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Coach)
    - Returns
       - EntityReturnImpl(entity=model.Coach, querySpaceUid=<gen:0>, path=model.Coach)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Coach.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Coach)
          - SQL table alias mapping - coach0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_1_0_}

[DEBUG] Static select for entity model.Coach [OPTIMISTIC]: select coach0_.ID as ID1_1_0_, coach0_.name as name2_1_0_, coach0_.lastname as lastname3_1_0_, coach0_.team as team4_1_0_ from Coaches coach0_ where coach0_.ID=?
[TRACE]  Starting root entity : model.Coach
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@21e20ad5]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3f628ce9
[TRACE] .. Registering AssociationKey : AssociationKey(table=Coaches, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3f628ce9
[TRACE] >> Starting entity identifier : model.Coach
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[TRACE] >> Starting attribute Attribute(name=team, type=model.Team [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@35e8316e]
[TRACE] << Finishing up attribute : Attribute(name=team, type=model.Team [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3f628ce9
[TRACE]  Finished root entity : model.Coach
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Coach)
    - Returns
       - EntityReturnImpl(entity=model.Coach, querySpaceUid=<gen:0>, path=model.Coach)
          - EntityAttributeFetchImpl(entity=model.Team, querySpaceUid=<gen:1>, path=model.Coach.team)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Coach)
          - SQL table alias mapping - coach0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_1_0_}

[DEBUG] Static select for entity model.Coach [OPTIMISTIC_FORCE_INCREMENT]: select coach0_.ID as ID1_1_0_, coach0_.name as name2_1_0_, coach0_.lastname as lastname3_1_0_, coach0_.team as team4_1_0_ from Coaches coach0_ where coach0_.ID=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Coach: select coach0_.ID as ID1_1_2_, coach0_.name as name2_1_2_, coach0_.lastname as lastname3_1_2_, coach0_.team as team4_1_2_, team1_.ID as ID1_8_0_, team1_.name as name2_8_0_, team1_.coach as coach3_8_0_, coach2_.ID as ID1_1_1_, coach2_.name as name2_1_1_, coach2_.lastname as lastname3_1_1_, coach2_.team as team4_1_1_ from Coaches coach0_ left outer join Teams team1_ on coach0_.team=team1_.ID left outer join Coaches coach2_ on team1_.coach=coach2_.ID where coach0_.ID=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Coach: select coach0_.ID as ID1_1_2_, coach0_.name as name2_1_2_, coach0_.lastname as lastname3_1_2_, coach0_.team as team4_1_2_, team1_.ID as ID1_8_0_, team1_.name as name2_8_0_, team1_.coach as coach3_8_0_, coach2_.ID as ID1_1_1_, coach2_.name as name2_1_1_, coach2_.lastname as lastname3_1_1_, coach2_.team as team4_1_1_ from Coaches coach0_ left outer join Teams team1_ on coach0_.team=team1_.ID left outer join Coaches coach2_ on team1_.coach=coach2_.ID where coach0_.ID=?
[DEBUG] Static SQL for entity: model.Position
[DEBUG]  Version select: select ID from Positions where ID =?
[DEBUG]  Snapshot select: select position_.ID, position_.name as name2_5_ from Positions position_ where position_.ID=?
[DEBUG]  Insert 0: insert into Positions (name, ID) values (?, ?)
[DEBUG]  Update 0: update Positions set name=? where ID=?
[DEBUG]  Delete 0: delete from Positions where ID=?
[DEBUG]  Identity insert: insert into Positions (name) values (?)
[TRACE]  Starting root entity : model.Position
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@26d96e5]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@336880df
[TRACE] .. Registering AssociationKey : AssociationKey(table=Positions, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@336880df
[TRACE] >> Starting entity identifier : model.Position
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@336880df
[TRACE]  Finished root entity : model.Position
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Position)
    - Returns
       - EntityReturnImpl(entity=model.Position, querySpaceUid=<gen:0>, path=model.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_5_0_}

[DEBUG] Static select for entity model.Position [NONE]: select position0_.ID as ID1_5_0_, position0_.name as name2_5_0_ from Positions position0_ where position0_.ID=?
[TRACE]  Starting root entity : model.Position
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@1846579f]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6cd166b8
[TRACE] .. Registering AssociationKey : AssociationKey(table=Positions, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6cd166b8
[TRACE] >> Starting entity identifier : model.Position
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@6cd166b8
[TRACE]  Finished root entity : model.Position
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Position)
    - Returns
       - EntityReturnImpl(entity=model.Position, querySpaceUid=<gen:0>, path=model.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_5_0_}

[DEBUG] Static select for entity model.Position [READ]: select position0_.ID as ID1_5_0_, position0_.name as name2_5_0_ from Positions position0_ where position0_.ID=?
[TRACE]  Starting root entity : model.Position
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2650f79]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@75fc1992
[TRACE] .. Registering AssociationKey : AssociationKey(table=Positions, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@75fc1992
[TRACE] >> Starting entity identifier : model.Position
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@75fc1992
[TRACE]  Finished root entity : model.Position
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Position)
    - Returns
       - EntityReturnImpl(entity=model.Position, querySpaceUid=<gen:0>, path=model.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_5_0_}

[DEBUG] Static select for entity model.Position [UPGRADE]: select position0_.ID as ID1_5_0_, position0_.name as name2_5_0_ from Positions position0_ where position0_.ID=? for update
[TRACE]  Starting root entity : model.Position
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@5fac521d]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@38af1bf6
[TRACE] .. Registering AssociationKey : AssociationKey(table=Positions, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@38af1bf6
[TRACE] >> Starting entity identifier : model.Position
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@38af1bf6
[TRACE]  Finished root entity : model.Position
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Position)
    - Returns
       - EntityReturnImpl(entity=model.Position, querySpaceUid=<gen:0>, path=model.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_5_0_}

[DEBUG] Static select for entity model.Position [UPGRADE_NOWAIT]: select position0_.ID as ID1_5_0_, position0_.name as name2_5_0_ from Positions position0_ where position0_.ID=? for update
[TRACE]  Starting root entity : model.Position
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@129bd55d]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7be7e15
[TRACE] .. Registering AssociationKey : AssociationKey(table=Positions, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7be7e15
[TRACE] >> Starting entity identifier : model.Position
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7be7e15
[TRACE]  Finished root entity : model.Position
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Position)
    - Returns
       - EntityReturnImpl(entity=model.Position, querySpaceUid=<gen:0>, path=model.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_5_0_}

[DEBUG] Static select for entity model.Position [UPGRADE_SKIPLOCKED]: select position0_.ID as ID1_5_0_, position0_.name as name2_5_0_ from Positions position0_ where position0_.ID=? for update
[TRACE]  Starting root entity : model.Position
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3abfe845]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7a0f244f
[TRACE] .. Registering AssociationKey : AssociationKey(table=Positions, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7a0f244f
[TRACE] >> Starting entity identifier : model.Position
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@7a0f244f
[TRACE]  Finished root entity : model.Position
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Position)
    - Returns
       - EntityReturnImpl(entity=model.Position, querySpaceUid=<gen:0>, path=model.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_5_0_}

[DEBUG] Static select for entity model.Position [FORCE]: select position0_.ID as ID1_5_0_, position0_.name as name2_5_0_ from Positions position0_ where position0_.ID=? for update
[TRACE]  Starting root entity : model.Position
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3672276e]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4248b963
[TRACE] .. Registering AssociationKey : AssociationKey(table=Positions, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4248b963
[TRACE] >> Starting entity identifier : model.Position
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4248b963
[TRACE]  Finished root entity : model.Position
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Position)
    - Returns
       - EntityReturnImpl(entity=model.Position, querySpaceUid=<gen:0>, path=model.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_5_0_}

[DEBUG] Static select for entity model.Position [PESSIMISTIC_READ]: select position0_.ID as ID1_5_0_, position0_.name as name2_5_0_ from Positions position0_ where position0_.ID=? lock in share mode
[TRACE]  Starting root entity : model.Position
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7f08caf]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4defd42
[TRACE] .. Registering AssociationKey : AssociationKey(table=Positions, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4defd42
[TRACE] >> Starting entity identifier : model.Position
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4defd42
[TRACE]  Finished root entity : model.Position
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Position)
    - Returns
       - EntityReturnImpl(entity=model.Position, querySpaceUid=<gen:0>, path=model.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_5_0_}

[DEBUG] Static select for entity model.Position [PESSIMISTIC_WRITE]: select position0_.ID as ID1_5_0_, position0_.name as name2_5_0_ from Positions position0_ where position0_.ID=? for update
[TRACE]  Starting root entity : model.Position
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2330e3e0]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@24b4d544
[TRACE] .. Registering AssociationKey : AssociationKey(table=Positions, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@24b4d544
[TRACE] >> Starting entity identifier : model.Position
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@24b4d544
[TRACE]  Finished root entity : model.Position
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Position)
    - Returns
       - EntityReturnImpl(entity=model.Position, querySpaceUid=<gen:0>, path=model.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_5_0_}

[DEBUG] Static select for entity model.Position [PESSIMISTIC_FORCE_INCREMENT]: select position0_.ID as ID1_5_0_, position0_.name as name2_5_0_ from Positions position0_ where position0_.ID=? for update
[TRACE]  Starting root entity : model.Position
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@27a2a089]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@54657dd2
[TRACE] .. Registering AssociationKey : AssociationKey(table=Positions, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@54657dd2
[TRACE] >> Starting entity identifier : model.Position
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@54657dd2
[TRACE]  Finished root entity : model.Position
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Position)
    - Returns
       - EntityReturnImpl(entity=model.Position, querySpaceUid=<gen:0>, path=model.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_5_0_}

[DEBUG] Static select for entity model.Position [OPTIMISTIC]: select position0_.ID as ID1_5_0_, position0_.name as name2_5_0_ from Positions position0_ where position0_.ID=?
[TRACE]  Starting root entity : model.Position
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@706eab5d]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@72725ee1
[TRACE] .. Registering AssociationKey : AssociationKey(table=Positions, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@72725ee1
[TRACE] >> Starting entity identifier : model.Position
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@72725ee1
[TRACE]  Finished root entity : model.Position
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.Position)
    - Returns
       - EntityReturnImpl(entity=model.Position, querySpaceUid=<gen:0>, path=model.Position)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.Position)
          - SQL table alias mapping - position0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_5_0_}

[DEBUG] Static select for entity model.Position [OPTIMISTIC_FORCE_INCREMENT]: select position0_.ID as ID1_5_0_, position0_.name as name2_5_0_ from Positions position0_ where position0_.ID=?
[DEBUG] Static select for action ACTION_MERGE on entity model.Position: select position0_.ID as ID1_5_0_, position0_.name as name2_5_0_ from Positions position0_ where position0_.ID=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.Position: select position0_.ID as ID1_5_0_, position0_.name as name2_5_0_ from Positions position0_ where position0_.ID=?
[DEBUG] Static SQL for entity: model.StatisticType
[DEBUG]  Version select: select ID from StatisticType where ID =?
[DEBUG]  Snapshot select: select statistict_.ID, statistict_.description as descript2_7_ from StatisticType statistict_ where statistict_.ID=?
[DEBUG]  Insert 0: insert into StatisticType (description, ID) values (?, ?)
[DEBUG]  Update 0: update StatisticType set description=? where ID=?
[DEBUG]  Delete 0: delete from StatisticType where ID=?
[DEBUG]  Identity insert: insert into StatisticType (description) values (?)
[TRACE]  Starting root entity : model.StatisticType
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40e60ece]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3f9270ed
[TRACE] .. Registering AssociationKey : AssociationKey(table=StatisticType, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3f9270ed
[TRACE] >> Starting entity identifier : model.StatisticType
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3f9270ed
[TRACE]  Finished root entity : model.StatisticType
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.StatisticType)
    - Returns
       - EntityReturnImpl(entity=model.StatisticType, querySpaceUid=<gen:0>, path=model.StatisticType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.StatisticType)
          - SQL table alias mapping - statistict0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_7_0_}

[DEBUG] Static select for entity model.StatisticType [NONE]: select statistict0_.ID as ID1_7_0_, statistict0_.description as descript2_7_0_ from StatisticType statistict0_ where statistict0_.ID=?
[TRACE]  Starting root entity : model.StatisticType
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3a230001]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5ac6c4f2
[TRACE] .. Registering AssociationKey : AssociationKey(table=StatisticType, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5ac6c4f2
[TRACE] >> Starting entity identifier : model.StatisticType
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@5ac6c4f2
[TRACE]  Finished root entity : model.StatisticType
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.StatisticType)
    - Returns
       - EntityReturnImpl(entity=model.StatisticType, querySpaceUid=<gen:0>, path=model.StatisticType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.StatisticType)
          - SQL table alias mapping - statistict0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_7_0_}

[DEBUG] Static select for entity model.StatisticType [READ]: select statistict0_.ID as ID1_7_0_, statistict0_.description as descript2_7_0_ from StatisticType statistict0_ where statistict0_.ID=?
[TRACE]  Starting root entity : model.StatisticType
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2aa6311a]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@61f39bb
[TRACE] .. Registering AssociationKey : AssociationKey(table=StatisticType, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@61f39bb
[TRACE] >> Starting entity identifier : model.StatisticType
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@61f39bb
[TRACE]  Finished root entity : model.StatisticType
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.StatisticType)
    - Returns
       - EntityReturnImpl(entity=model.StatisticType, querySpaceUid=<gen:0>, path=model.StatisticType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.StatisticType)
          - SQL table alias mapping - statistict0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_7_0_}

[DEBUG] Static select for entity model.StatisticType [UPGRADE]: select statistict0_.ID as ID1_7_0_, statistict0_.description as descript2_7_0_ from StatisticType statistict0_ where statistict0_.ID=? for update
[TRACE]  Starting root entity : model.StatisticType
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@249e0271]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4893b344
[TRACE] .. Registering AssociationKey : AssociationKey(table=StatisticType, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4893b344
[TRACE] >> Starting entity identifier : model.StatisticType
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@4893b344
[TRACE]  Finished root entity : model.StatisticType
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.StatisticType)
    - Returns
       - EntityReturnImpl(entity=model.StatisticType, querySpaceUid=<gen:0>, path=model.StatisticType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.StatisticType)
          - SQL table alias mapping - statistict0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_7_0_}

[DEBUG] Static select for entity model.StatisticType [UPGRADE_NOWAIT]: select statistict0_.ID as ID1_7_0_, statistict0_.description as descript2_7_0_ from StatisticType statistict0_ where statistict0_.ID=? for update
[TRACE]  Starting root entity : model.StatisticType
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@53a665ad]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2c0b4c83
[TRACE] .. Registering AssociationKey : AssociationKey(table=StatisticType, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2c0b4c83
[TRACE] >> Starting entity identifier : model.StatisticType
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2c0b4c83
[TRACE]  Finished root entity : model.StatisticType
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.StatisticType)
    - Returns
       - EntityReturnImpl(entity=model.StatisticType, querySpaceUid=<gen:0>, path=model.StatisticType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.StatisticType)
          - SQL table alias mapping - statistict0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_7_0_}

[DEBUG] Static select for entity model.StatisticType [UPGRADE_SKIPLOCKED]: select statistict0_.ID as ID1_7_0_, statistict0_.description as descript2_7_0_ from StatisticType statistict0_ where statistict0_.ID=? for update
[TRACE]  Starting root entity : model.StatisticType
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@78525ef9]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2d0ecb24
[TRACE] .. Registering AssociationKey : AssociationKey(table=StatisticType, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2d0ecb24
[TRACE] >> Starting entity identifier : model.StatisticType
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@2d0ecb24
[TRACE]  Finished root entity : model.StatisticType
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.StatisticType)
    - Returns
       - EntityReturnImpl(entity=model.StatisticType, querySpaceUid=<gen:0>, path=model.StatisticType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.StatisticType)
          - SQL table alias mapping - statistict0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_7_0_}

[DEBUG] Static select for entity model.StatisticType [FORCE]: select statistict0_.ID as ID1_7_0_, statistict0_.description as descript2_7_0_ from StatisticType statistict0_ where statistict0_.ID=? for update
[TRACE]  Starting root entity : model.StatisticType
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@4d654825]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3bfc6a5e
[TRACE] .. Registering AssociationKey : AssociationKey(table=StatisticType, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3bfc6a5e
[TRACE] >> Starting entity identifier : model.StatisticType
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@3bfc6a5e
[TRACE]  Finished root entity : model.StatisticType
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.StatisticType)
    - Returns
       - EntityReturnImpl(entity=model.StatisticType, querySpaceUid=<gen:0>, path=model.StatisticType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.StatisticType)
          - SQL table alias mapping - statistict0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_7_0_}

[DEBUG] Static select for entity model.StatisticType [PESSIMISTIC_READ]: select statistict0_.ID as ID1_7_0_, statistict0_.description as descript2_7_0_ from StatisticType statistict0_ where statistict0_.ID=? lock in share mode
[TRACE]  Starting root entity : model.StatisticType
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@51b35e4e]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@abff8b7
[TRACE] .. Registering AssociationKey : AssociationKey(table=StatisticType, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@abff8b7
[TRACE] >> Starting entity identifier : model.StatisticType
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@abff8b7
[TRACE]  Finished root entity : model.StatisticType
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.StatisticType)
    - Returns
       - EntityReturnImpl(entity=model.StatisticType, querySpaceUid=<gen:0>, path=model.StatisticType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.StatisticType)
          - SQL table alias mapping - statistict0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_7_0_}

[DEBUG] Static select for entity model.StatisticType [PESSIMISTIC_WRITE]: select statistict0_.ID as ID1_7_0_, statistict0_.description as descript2_7_0_ from StatisticType statistict0_ where statistict0_.ID=? for update
[TRACE]  Starting root entity : model.StatisticType
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6d7cada5]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@350a94ce
[TRACE] .. Registering AssociationKey : AssociationKey(table=StatisticType, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@350a94ce
[TRACE] >> Starting entity identifier : model.StatisticType
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@350a94ce
[TRACE]  Finished root entity : model.StatisticType
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.StatisticType)
    - Returns
       - EntityReturnImpl(entity=model.StatisticType, querySpaceUid=<gen:0>, path=model.StatisticType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.StatisticType)
          - SQL table alias mapping - statistict0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_7_0_}

[DEBUG] Static select for entity model.StatisticType [PESSIMISTIC_FORCE_INCREMENT]: select statistict0_.ID as ID1_7_0_, statistict0_.description as descript2_7_0_ from StatisticType statistict0_ where statistict0_.ID=? for update
[TRACE]  Starting root entity : model.StatisticType
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7e00ed0f]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@b0fc838
[TRACE] .. Registering AssociationKey : AssociationKey(table=StatisticType, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@b0fc838
[TRACE] >> Starting entity identifier : model.StatisticType
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@b0fc838
[TRACE]  Finished root entity : model.StatisticType
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.StatisticType)
    - Returns
       - EntityReturnImpl(entity=model.StatisticType, querySpaceUid=<gen:0>, path=model.StatisticType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.StatisticType)
          - SQL table alias mapping - statistict0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_7_0_}

[DEBUG] Static select for entity model.StatisticType [OPTIMISTIC]: select statistict0_.ID as ID1_7_0_, statistict0_.description as descript2_7_0_ from StatisticType statistict0_ where statistict0_.ID=?
[TRACE]  Starting root entity : model.StatisticType
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3964d79]
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@62db0521
[TRACE] .. Registering AssociationKey : AssociationKey(table=StatisticType, columns={ID}) -> org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@62db0521
[TRACE] >> Starting entity identifier : model.StatisticType
[DEBUG] Visiting attribute path : description
[TRACE] >> Starting attribute Attribute(name=description, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=description, type=string [non-identifier])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.EntityReturnImpl@62db0521
[TRACE]  Finished root entity : model.StatisticType
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(entity=model.StatisticType)
    - Returns
       - EntityReturnImpl(entity=model.StatisticType, querySpaceUid=<gen:0>, path=model.StatisticType)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=model.StatisticType)
          - SQL table alias mapping - statistict0_
          - alias suffix - 0_
          - suffixed key columns - {ID1_7_0_}

[DEBUG] Static select for entity model.StatisticType [OPTIMISTIC_FORCE_INCREMENT]: select statistict0_.ID as ID1_7_0_, statistict0_.description as descript2_7_0_ from StatisticType statistict0_ where statistict0_.ID=?
[DEBUG] Static select for action ACTION_MERGE on entity model.StatisticType: select statistict0_.ID as ID1_7_0_, statistict0_.description as descript2_7_0_ from StatisticType statistict0_ where statistict0_.ID=?
[DEBUG] Static select for action ACTION_REFRESH on entity model.StatisticType: select statistict0_.ID as ID1_7_0_, statistict0_.description as descript2_7_0_ from StatisticType statistict0_ where statistict0_.ID=?
[TRACE]  Starting root collection : model.Match.statistics
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@1b4ae4e0]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@6ef1a1b9]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@5fbdc49b
[TRACE]  Registering AssociationKey : AssociationKey(table=Statistics, columns={match_id}) -> null
[TRACE]  Starting collection element graph : model.Match.statistics
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@65753040
[TRACE] >> Starting entity identifier : model.Statistic
[DEBUG] Visiting attribute path : value
[TRACE] >> Starting attribute Attribute(name=value, type=integer [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=value, type=integer [non-identifier])
[DEBUG] Visiting attribute path : type
[TRACE] >> Starting attribute Attribute(name=type, type=model.StatisticType [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2954b5ea]
[TRACE] << Finishing up attribute : Attribute(name=type, type=model.StatisticType [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@65753040
[TRACE]  Finished collection element graph : model.Match.statistics
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@5fbdc49b
[TRACE]  Finished root collection : model.Match.statistics
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model.Match.statistics)
    - Returns
       - CollectionReturnImpl(collection=model.Match.statistics, querySpaceUid=<gen:0>, path=[model.Match.statistics])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model.Statistic, querySpaceUid=<gen:1>, path=[model.Match.statistics].<elements>)
             - EntityAttributeFetchImpl(entity=model.StatisticType, querySpaceUid=<gen:2>, path=[model.Match.statistics].<elements>.type)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model.Match.statistics)
          - SQL table alias mapping - statistics0_
          - alias suffix - 0_
          - suffixed key columns - {match_id4_6_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - ID1_6_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model.Statistic)
                - SQL table alias mapping - statistics0_
                - alias suffix - 1_
                - suffixed key columns - {ID1_6_1_}

[DEBUG] Static select for collection model.Match.statistics: select statistics0_.match_id as match_id4_6_0_, statistics0_.ID as ID1_6_0_, statistics0_.ID as ID1_6_1_, statistics0_.value as value2_6_1_, statistics0_.type as type3_6_1_ from Statistics statistics0_ where statistics0_.match_id=?
[TRACE]  Starting root collection : model.Team.players
[DEBUG] Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.CollectionQuerySpaceImpl@4acb2510]
[DEBUG] Adding QuerySpace : uid = <gen:1> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@7be3a9ce]
[TRACE] Pushing collection reference to stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@37d871c2
[TRACE]  Registering AssociationKey : AssociationKey(table=Players, columns={team}) -> null
[TRACE]  Starting collection element graph : model.Team.players
[TRACE] Pushing fetch source to stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@3baf6936
[TRACE] >> Starting entity identifier : model.Player
[DEBUG] Visiting attribute path : name
[TRACE] >> Starting attribute Attribute(name=name, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=name, type=string [non-identifier])
[DEBUG] Visiting attribute path : lastname
[TRACE] >> Starting attribute Attribute(name=lastname, type=string [non-identifier])
[TRACE] << Finishing up attribute : Attribute(name=lastname, type=string [non-identifier])
[DEBUG] Visiting attribute path : team
[DEBUG] Property path deemed to be circular : team
[DEBUG] Visiting attribute path : position
[TRACE] >> Starting attribute Attribute(name=position, type=model.Position [non-identifier,association])
[DEBUG] Adding QuerySpace : uid = <gen:2> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@285f38f6]
[TRACE] << Finishing up attribute : Attribute(name=position, type=model.Position [non-identifier,association])
[TRACE] Popped fetch owner from stack : org.hibernate.loader.plan.build.internal.returns.CollectionFetchableElementEntityGraph@3baf6936
[TRACE]  Finished collection element graph : model.Team.players
[TRACE] Popped collection reference from stack : org.hibernate.loader.plan.build.internal.returns.CollectionReturnImpl@37d871c2
[TRACE]  Finished root collection : model.Team.players
[DEBUG] Building LoadPlan...
[DEBUG] processing queryspace <gen:0>
[DEBUG] LoadPlan(collection=model.Team.players)
    - Returns
       - CollectionReturnImpl(collection=model.Team.players, querySpaceUid=<gen:0>, path=[model.Team.players])
          - (collection element) CollectionFetchableElementEntityGraph(entity=model.Player, querySpaceUid=<gen:1>, path=[model.Team.players].<elements>)
             - EntityAttributeFetchImpl(entity=model.Position, querySpaceUid=<gen:2>, path=[model.Team.players].<elements>.position)
    - QuerySpaces
       - CollectionQuerySpaceImpl(uid=<gen:0>, collection=model.Team.players)
          - SQL table alias mapping - players0_
          - alias suffix - 0_
          - suffixed key columns - {team4_4_0_}
          - entity-element alias suffix - 1_
          - 1_entity-element suffixed key columns - ID1_4_1_
          - JOIN (JoinDefinedByMetadata(elements)) : <gen:0> -> <gen:1>
             - EntityQuerySpaceImpl(uid=<gen:1>, entity=model.Player)
                - SQL table alias mapping - players0_
                - alias suffix - 1_
                - suffixed key columns - {ID1_4_1_}

[DEBUG] Static select for collection model.Team.players: select players0_.team as team4_4_0_, players0_.ID as ID1_4_0_, players0_.ID as ID1_4_1_, players0_.name as name2_4_1_, players0_.lastname as lastname3_4_1_, players0_.team as team4_4_1_, players0_.position as position5_4_1_ from Players players0_ where players0_.team=?
[TRACE] Wrapping up metadata context...
[TRACE] Starting entity [model.Arena]
[TRACE] Building identifier attribute [model.Arena.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public int model.Arena.getId()]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [model.Arena.name]
[TRACE] Starting attribute metadata determination [name]
[TRACE]     Determined member [public java.lang.String model.Arena.getName()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [model.Arena.address]
[TRACE] Starting attribute metadata determination [address]
[TRACE]     Determined member [public java.lang.String model.Arena.getAddress()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Completed entity [model.Arena]
[TRACE] Starting entity [model.Team]
[TRACE] Building identifier attribute [model.Team.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public int model.Team.getId()]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [model.Team.name]
[TRACE] Starting attribute metadata determination [name]
[TRACE]     Determined member [public java.lang.String model.Team.getName()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [model.Team.players]
[TRACE] Starting attribute metadata determination [players]
[TRACE]     Determined member [public java.util.Set model.Team.getPlayers()]
[TRACE]     Determined type [name=java.util.Set(model.Team.players), class=org.hibernate.type.SetType]
[TRACE] Building attribute [model.Team.coach]
[TRACE] Starting attribute metadata determination [coach]
[TRACE]     Determined member [public model.Coach model.Team.getCoach()]
[TRACE]     Determined type [name=model.Coach, class=org.hibernate.type.ManyToOneType]
[TRACE] Completed entity [model.Team]
[TRACE] Starting entity [model.Match]
[TRACE] Building identifier attribute [model.Match.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public int model.Match.getId()]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [model.Match.date]
[TRACE] Starting attribute metadata determination [date]
[TRACE]     Determined member [public java.util.GregorianCalendar model.Match.getDate()]
[TRACE]     Determined type [name=calendar, class=org.hibernate.type.CalendarType]
[TRACE] Building attribute [model.Match.statistics]
[TRACE] Starting attribute metadata determination [statistics]
[TRACE]     Determined member [public java.util.Set model.Match.getStatistics()]
[TRACE]     Determined type [name=java.util.Set(model.Match.statistics), class=org.hibernate.type.SetType]
[TRACE] Building attribute [model.Match.guests]
[TRACE] Starting attribute metadata determination [guests]
[TRACE]     Determined member [public model.Team model.Match.getGuests()]
[TRACE]     Determined type [name=model.Team, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [model.Match.host]
[TRACE] Starting attribute metadata determination [host]
[TRACE]     Determined member [public model.Team model.Match.getHost()]
[TRACE]     Determined type [name=model.Team, class=org.hibernate.type.ManyToOneType]
[TRACE] Completed entity [model.Match]
[TRACE] Starting entity [model.Statistic]
[TRACE] Building identifier attribute [model.Statistic.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public int model.Statistic.getId()]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [model.Statistic.value]
[TRACE] Starting attribute metadata determination [value]
[TRACE]     Determined member [public int model.Statistic.getValue()]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [model.Statistic.type]
[TRACE] Starting attribute metadata determination [type]
[TRACE]     Determined member [public model.StatisticType model.Statistic.getType()]
[TRACE]     Determined type [name=model.StatisticType, class=org.hibernate.type.ManyToOneType]
[TRACE] Completed entity [model.Statistic]
[TRACE] Starting entity [model.Player]
[TRACE] Building identifier attribute [model.Player.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public int model.Person.getId()]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [model.Player.name]
[TRACE] Starting attribute metadata determination [name]
[TRACE]     Determined member [public java.lang.String model.Person.getName()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [model.Player.lastname]
[TRACE] Starting attribute metadata determination [lastname]
[TRACE]     Determined member [public java.lang.String model.Person.getLastname()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [model.Player.team]
[TRACE] Starting attribute metadata determination [team]
[TRACE]     Determined member [public model.Team model.Player.getTeam()]
[TRACE]     Determined type [name=model.Team, class=org.hibernate.type.ManyToOneType]
[TRACE] Building attribute [model.Player.position]
[TRACE] Starting attribute metadata determination [position]
[TRACE]     Determined member [public model.Position model.Player.getPosition()]
[TRACE]     Determined type [name=model.Position, class=org.hibernate.type.ManyToOneType]
[TRACE] Completed entity [model.Player]
[TRACE] Starting entity [model.Person]
[TRACE] Building identifier attribute [model.Person.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public int model.Person.getId()]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [model.Person.name]
[TRACE] Starting attribute metadata determination [name]
[TRACE]     Determined member [public java.lang.String model.Person.getName()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [model.Person.lastname]
[TRACE] Starting attribute metadata determination [lastname]
[TRACE]     Determined member [public java.lang.String model.Person.getLastname()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Completed entity [model.Person]
[TRACE] Starting entity [model.Coach]
[TRACE] Building identifier attribute [model.Coach.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public int model.Person.getId()]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [model.Coach.name]
[TRACE] Starting attribute metadata determination [name]
[TRACE]     Determined member [public java.lang.String model.Person.getName()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [model.Coach.lastname]
[TRACE] Starting attribute metadata determination [lastname]
[TRACE]     Determined member [public java.lang.String model.Person.getLastname()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Building attribute [model.Coach.team]
[TRACE] Starting attribute metadata determination [team]
[TRACE]     Determined member [public model.Team model.Coach.getTeam()]
[TRACE]     Determined type [name=model.Team, class=org.hibernate.type.ManyToOneType]
[TRACE] Completed entity [model.Coach]
[TRACE] Starting entity [model.Position]
[TRACE] Building identifier attribute [model.Position.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public int model.Position.getId()]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [model.Position.name]
[TRACE] Starting attribute metadata determination [name]
[TRACE]     Determined member [public java.lang.String model.Position.getName()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Completed entity [model.Position]
[TRACE] Starting entity [model.StatisticType]
[TRACE] Building identifier attribute [model.StatisticType.id]
[TRACE] Starting attribute metadata determination [id]
[TRACE]     Determined member [public int model.StatisticType.getId()]
[TRACE]     Determined type [name=integer, class=org.hibernate.type.IntegerType]
[TRACE] Building attribute [model.StatisticType.description]
[TRACE] Starting attribute metadata determination [description]
[TRACE]     Determined member [public java.lang.String model.StatisticType.getDescription()]
[TRACE]     Determined type [name=string, class=org.hibernate.type.StringType]
[TRACE] Completed entity [model.StatisticType]
[TRACE] Initializing service [role=org.hibernate.tool.schema.spi.SchemaManagementTool]
[TRACE] Initializing service [role=org.hibernate.tool.hbm2ddl.ImportSqlCommandExtractor]
[INFO ] HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@2d9f64c9] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[WARN ] GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:374)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:138)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:66)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:493)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:878)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39)
	at hiberApp.EMBuilder.<clinit>(EMBuilder.java:12)
	at hiberApp.MainApp.showGoalsCrit(MainApp.java:109)
	at hiberApp.MainApp.main(MainApp.java:50)
Caused by: java.sql.SQLException: Error on rename of '.\ior\coaches' to '.\ior\#sql2-26a4-c8' (errno: 152)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2788)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2738)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:899)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:737)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:909)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 18 more
[WARN ] GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:374)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:138)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:66)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:493)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:878)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39)
	at hiberApp.EMBuilder.<clinit>(EMBuilder.java:12)
	at hiberApp.MainApp.showGoalsCrit(MainApp.java:109)
	at hiberApp.MainApp.main(MainApp.java:50)
Caused by: java.sql.SQLException: Error on rename of '.\ior\matches' to '.\ior\#sql2-26a4-c8' (errno: 152)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2788)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2738)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:899)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:737)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:909)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 18 more
[WARN ] GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:374)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:138)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:66)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:493)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:878)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39)
	at hiberApp.EMBuilder.<clinit>(EMBuilder.java:12)
	at hiberApp.MainApp.showGoalsCrit(MainApp.java:109)
	at hiberApp.MainApp.main(MainApp.java:50)
Caused by: java.sql.SQLException: Error on rename of '.\ior\matches' to '.\ior\#sql2-26a4-c8' (errno: 152)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2788)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2738)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:899)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:737)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:909)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 18 more
[WARN ] GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:374)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:138)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:66)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:493)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:878)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39)
	at hiberApp.EMBuilder.<clinit>(EMBuilder.java:12)
	at hiberApp.MainApp.showGoalsCrit(MainApp.java:109)
	at hiberApp.MainApp.main(MainApp.java:50)
Caused by: java.sql.SQLException: Error on rename of '.\ior\players' to '.\ior\#sql2-26a4-c8' (errno: 152)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2788)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2738)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:899)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:737)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:909)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 18 more
[WARN ] GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:374)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:138)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:66)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:493)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:878)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39)
	at hiberApp.EMBuilder.<clinit>(EMBuilder.java:12)
	at hiberApp.MainApp.showGoalsCrit(MainApp.java:109)
	at hiberApp.MainApp.main(MainApp.java:50)
Caused by: java.sql.SQLException: Error on rename of '.\ior\players' to '.\ior\#sql2-26a4-c8' (errno: 152)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2788)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2738)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:899)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:737)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:909)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 18 more
[WARN ] GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:374)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:138)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:66)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:493)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:878)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39)
	at hiberApp.EMBuilder.<clinit>(EMBuilder.java:12)
	at hiberApp.MainApp.showGoalsCrit(MainApp.java:109)
	at hiberApp.MainApp.main(MainApp.java:50)
Caused by: java.sql.SQLException: Error on rename of '.\ior\statistics' to '.\ior\#sql2-26a4-c8' (errno: 152)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2788)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2738)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:899)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:737)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:909)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 18 more
[WARN ] GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:374)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applyConstraintDropping(SchemaDropperImpl.java:331)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:230)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:138)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:66)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:493)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:878)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39)
	at hiberApp.EMBuilder.<clinit>(EMBuilder.java:12)
	at hiberApp.MainApp.showGoalsCrit(MainApp.java:109)
	at hiberApp.MainApp.main(MainApp.java:50)
Caused by: java.sql.SQLException: Error on rename of '.\ior\statistics' to '.\ior\#sql2-26a4-c8' (errno: 152)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1074)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2788)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2738)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:899)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:737)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:909)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 18 more
[WARN ] GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlString(SchemaDropperImpl.java:374)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.applySqlStrings(SchemaDropperImpl.java:359)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.dropFromMetadata(SchemaDropperImpl.java:241)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.performDrop(SchemaDropperImpl.java:154)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:126)
	at org.hibernate.tool.schema.internal.SchemaDropperImpl.doDrop(SchemaDropperImpl.java:112)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:138)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:66)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:493)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:878)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39)
	at hiberApp.EMBuilder.<clinit>(EMBuilder.java:12)
	at hiberApp.MainApp.showGoalsCrit(MainApp.java:109)
	at hiberApp.MainApp.main(MainApp.java:50)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLIntegrityConstraintViolationException: Cannot delete or update a parent row: a foreign key constraint fails
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1040)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2788)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2738)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:899)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:737)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:909)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 17 more
[INFO ] HHH10001501: Connection obtained from JdbcConnectionAccess [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator$ConnectionProviderJdbcConnectionAccess@499ef98e] for (non-JTA) DDL execution was not in auto-commit mode; the Connection 'local transaction' will be committed and the Connection will be set into auto-commit mode.
[WARN ] GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:439)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:315)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:149)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:66)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:493)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:878)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39)
	at hiberApp.EMBuilder.<clinit>(EMBuilder.java:12)
	at hiberApp.MainApp.showGoalsCrit(MainApp.java:109)
	at hiberApp.MainApp.main(MainApp.java:50)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Table 'matches' already exists
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2788)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2738)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:899)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:737)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:909)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 17 more
[WARN ] GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:439)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:349)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:149)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:66)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:493)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:878)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39)
	at hiberApp.EMBuilder.<clinit>(EMBuilder.java:12)
	at hiberApp.MainApp.showGoalsCrit(MainApp.java:109)
	at hiberApp.MainApp.main(MainApp.java:50)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Key column 'guests' doesn't exist in table
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2788)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2738)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:899)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:737)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:909)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 17 more
[WARN ] GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:439)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:349)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:149)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:66)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:493)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:878)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39)
	at hiberApp.EMBuilder.<clinit>(EMBuilder.java:12)
	at hiberApp.MainApp.showGoalsCrit(MainApp.java:109)
	at hiberApp.MainApp.main(MainApp.java:50)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Key column 'host' doesn't exist in table
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2788)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2738)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:899)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:737)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:909)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 17 more
[WARN ] GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:439)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:149)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:66)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:493)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:878)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39)
	at hiberApp.EMBuilder.<clinit>(EMBuilder.java:12)
	at hiberApp.MainApp.showGoalsCrit(MainApp.java:109)
	at hiberApp.MainApp.main(MainApp.java:50)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Key column 'guests' doesn't exist in table
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2788)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2738)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:899)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:737)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:909)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 17 more
[WARN ] GenerationTarget encountered exception accepting command : Error executing DDL via JDBC Statement
org.hibernate.tool.schema.spi.CommandAcceptanceException: Error executing DDL via JDBC Statement
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:67)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlString(SchemaCreatorImpl.java:439)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.applySqlStrings(SchemaCreatorImpl.java:424)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.createFromMetadata(SchemaCreatorImpl.java:375)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.performCreation(SchemaCreatorImpl.java:166)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:135)
	at org.hibernate.tool.schema.internal.SchemaCreatorImpl.doCreation(SchemaCreatorImpl.java:121)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.performDatabaseAction(SchemaManagementToolCoordinator.java:149)
	at org.hibernate.tool.schema.spi.SchemaManagementToolCoordinator.process(SchemaManagementToolCoordinator.java:66)
	at org.hibernate.internal.SessionFactoryImpl.<init>(SessionFactoryImpl.java:309)
	at org.hibernate.boot.internal.SessionFactoryBuilderImpl.build(SessionFactoryBuilderImpl.java:493)
	at org.hibernate.jpa.boot.internal.EntityManagerFactoryBuilderImpl.build(EntityManagerFactoryBuilderImpl.java:878)
	at org.hibernate.jpa.HibernatePersistenceProvider.createEntityManagerFactory(HibernatePersistenceProvider.java:58)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:55)
	at javax.persistence.Persistence.createEntityManagerFactory(Persistence.java:39)
	at hiberApp.EMBuilder.<clinit>(EMBuilder.java:12)
	at hiberApp.MainApp.showGoalsCrit(MainApp.java:109)
	at hiberApp.MainApp.main(MainApp.java:50)
Caused by: com.mysql.jdbc.exceptions.jdbc4.MySQLSyntaxErrorException: Key column 'host' doesn't exist in table
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:411)
	at com.mysql.jdbc.Util.getInstance(Util.java:386)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:1053)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4120)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:4052)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2503)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2664)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2788)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2738)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:899)
	at com.mysql.jdbc.StatementImpl.execute(StatementImpl.java:737)
	at com.mchange.v2.c3p0.impl.NewProxyStatement.execute(NewProxyStatement.java:909)
	at org.hibernate.tool.schema.internal.exec.GenerationTargetToDatabase.accept(GenerationTargetToDatabase.java:54)
	... 17 more
[INFO ] HHH000476: Executing import script 'org.hibernate.tool.schema.internal.exec.ScriptSourceInputNonExistentImpl@5ac86ba5'
[DEBUG] Checking 0 named HQL queries
[DEBUG] Checking 0 named SQL queries
[TRACE] Initializing service [role=org.hibernate.engine.jndi.spi.JndiService]
[DEBUG] Registering SessionFactory: a42cf23e-347c-49c9-a7ff-a0f9b9abfc31 (<unnamed>)
[DEBUG] Not binding SessionFactory to JNDI, no JNDI name configured
[TRACE] Opening Hibernate Session.  tenant=null, owner=null
[TRACE] Initializing service [role=org.hibernate.stat.spi.StatisticsImplementor]
[DEBUG] Statistics initialized [enabled=false]
[TRACE] Opened Session [4a798cbd-e6d0-4a09-acf2-69810a2f743b] at timestamp: 15271042580
[DEBUG] Rendered criteria query -> select generatedAlias0, generatedAlias0.value from Statistic as generatedAlias0
[TRACE] Unable to locate HQL query plan in cache; generating (select generatedAlias0, generatedAlias0.value from Statistic as generatedAlias0)
[TRACE] Initializing service [role=org.hibernate.hql.spi.QueryTranslatorFactory]
[TRACE] HQL param location recognition took 13 252 nanoseconds (select generatedAlias0, generatedAlias0.value from Statistic as generatedAlias0)
[TRACE] Located HQL query plan in cache (select generatedAlias0, generatedAlias0.value from Statistic as generatedAlias0)
[TRACE] Find: select generatedAlias0, generatedAlias0.value from Statistic as generatedAlias0
[TRACE] Named parameters: {}
[TRACE] Registering statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@63411512]
[TRACE] Registering last query statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@63411512]
[TRACE] Bound [1] parameters total
[TRACE] Registering result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@216914]
[TRACE] Processing result set
[TRACE] Done processing result set (0 rows)
[TRACE] Total objects hydrated: 0
[TRACE] Releasing statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@63411512]
[TRACE] Closing result set [com.mchange.v2.c3p0.impl.NewProxyResultSet@216914]
[TRACE] Closing prepared statement [com.mchange.v2.c3p0.impl.NewProxyPreparedStatement@63411512]
[TRACE] Starting afterQuery statement execution processing [AFTER_TRANSACTION]
[TRACE] Initializing non-lazy collections
[TRACE] LogicalConnection#afterTransaction
[TRACE] Releasing JDBC resources
[DEBUG] Initiating JDBC connection release from afterTransaction
[TRACE] Releasing JDBC resources
[TRACE] Closing session [4a798cbd-e6d0-4a09-acf2-69810a2f743b]
[TRACE] Closing JDBC container [org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl@6ba30587]
[TRACE] Releasing JDBC resources
[TRACE] Closing logical connection
[TRACE] Logical connection closed
